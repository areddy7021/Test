spring.main.banner-mode=off

# create and drop tables and sequences, loads import.sql
#spring.jpa.hibernate.ddl-auto=create-drop

# Oracle settings
#jdbc:oracle:thin:@//oracle.hostserver2.mydomain.ca:1522/ABCD
spring.datasource.url=jdbc:oracle:thin:@//ed08-scan01:1521/iswdv03svc.uhc.com
spring.datasource.username=SVC_ACT_EIM_KAFKA
spring.datasource.password=E1m_K@fK@
spring.datasource.driver-class=oracle.jdbc.driver.OracleDriver
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
spring.jpa.hibernate.use-new-id-generator-mappings=false

# Kafka Producer properties
spring.kafka.properties.security.protocol = SSL 
spring.kafka.producer.ssl.keystore-location=classpath:/security/keystore.jks
spring.kafka.producer.ssl.keystore-password = prmcert
spring.kafka.producer.ssl.truststore-location=classpath:/security/truststore.jks
spring.kafka.producer.ssl.truststore-password = prmcert
spring.kafka.producer.ssl.key-password = prmcert
spring.kafka.bootstrap-servers = kaas-test-ctc-a.optum.com:443
topic.name = kaas.security.epmp

spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


# Kafka Producer properties
#spring.kafka.producer.bootstrap-servers=kaas-test-ctc-a.optum.com:443
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
##spring.kafka.producer.group-id=group_id

##ssl
#ssl.keystore.location=keystore.jks
#ssl.keystore.password=prmcert
#ssl.truststore.location=truststore.jks
#ssl.truststore.password=prmcert
#ssl.key.password=prmcert

#####
#batch.size=1000012
#default.api.timeout.ms=900000
#delivery.timeout.ms=2147483647
#heartbeat.interval.ms=6000
#max.block.ms=2147483647
#max.in.flight.requests.per.connection=1
#max.request.size=1000012
#request.timeout.ms=60000
#retries=2147483647
#session.timeout.ms=120000

# Topic name
#topic.name.producer=kaas.mris.eligibility

# Common Kafka Properties
#auto.create.topics.enable=true

# HikariCP settings
# spring.datasource.hikari.*

spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=5

# logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.=error