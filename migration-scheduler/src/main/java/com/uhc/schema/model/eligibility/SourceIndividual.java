/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Represents a single 'source record' for an Individual */
@org.apache.avro.specific.AvroGenerated
public class SourceIndividual extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4662239713409100617L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SourceIndividual\",\"namespace\":\"com.uhc.schema.model.eligibility\",\"doc\":\"Represents a single 'source record' for an Individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"alternateIdentifiers\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AlternateIdentifiers\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"doc\":\"Alternate identifiers for the individual\",\"fields\":[{\"name\":\"alternateIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AlternateIdentifierValue\",\"doc\":\"an alternate identifier for the individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"identifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"isPreferredIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LastUpdated\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"doc\":\"Information about the last update made to a given entity.\",\"fields\":[{\"name\":\"sourceSystemTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the source system (CDB ROW_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"sourceTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the originating source (CDB SRC_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",\"string\"],\"doc\":\"The last person or application to update the entity.\",\"default\":null}]}],\"default\":null}]}}],\"default\":null},{\"name\":\"alternateSubscriberId\",\"type\":[\"null\",\"string\"],\"doc\":\"The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID).\",\"default\":null},{\"name\":\"associationIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"driversLicenseNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"employerAssignedIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"doc\":\"A specific number assigned by an employer to a consumer.\",\"default\":null},{\"name\":\"enterpriseIndividualIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\" The enterprise individual identifier (EID) from MDM.\",\"default\":null},{\"name\":\"familyId\",\"type\":[\"null\",\"int\"],\"doc\":\" A unique identifier to group subscribers and dependents together as a family (FAM_ID).\",\"default\":null},{\"name\":\"healthInsuranceExchangeIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"HealthInsuranceExchangeId\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"identifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null}]}}],\"default\":null},{\"name\":\"healthSavingsAccountIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"hicNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"householdIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"legacyMemberIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"legacySourceFamilyId\",\"type\":[\"null\",\"string\"],\"doc\":\"A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID).\",\"default\":null},{\"name\":\"mbiNumberHistory\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"MbiNumberHistory\",\"fields\":[{\"name\":\"mbiNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"mbiNumberEffectiveDates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DateRangeType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"startDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null}]}],\"default\":null}]}}],\"default\":null},{\"name\":\"mbiNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"medicaidRecipientNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"memberAlternateIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"memberFamilyLinkIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"memberId\",\"type\":[\"null\",\"string\"],\"doc\":\"The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID).\",\"default\":null},{\"name\":\"memberReplacementIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"nationalIdentifiers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"NationalIdentifier\",\"fields\":[{\"name\":\"abbreviatedIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Abbreviated value for national identifier. E.g., last four didgets of SSN.\",\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Value for national identifer.\",\"default\":null},{\"name\":\"isoCountry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"doc\":\"The country code for the national identifier.\",\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"doc\":\"Last update date for national identifier.\",\"default\":null},{\"name\":\"nationalIdentiferType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.\",\"default\":null}]}}],\"default\":null},{\"name\":\"optumIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"optumLabsExternalKey\",\"type\":[\"null\",\"string\"],\"doc\":\"Human friendly key representing the Optum Labs Id.\",\"default\":null},{\"name\":\"optumLabsId\",\"type\":[\"null\",\"string\"],\"doc\":\"Optum Labs generated Id for an individual in a project.\",\"default\":null},{\"name\":\"portals\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Portal\",\"fields\":[{\"name\":\"portalName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"portalUsername\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null}]}}],\"default\":null},{\"name\":\"priorMemberIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"socialSecurityNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"sourceSystemIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"subscriberIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"survivingSpouseIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null}]}],\"default\":null},{\"name\":\"atOccupationTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"authoritativeRepresentatives\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AuthoritativeRepresentative\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"authoritativeRepresentativeIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"emailAddress\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"entityName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"entityType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"faxNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"faxNumberExtension\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"individualIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"language\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"personName\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PersonName\",\"fields\":[{\"name\":\"firstName\",\"type\":[\"nul","l\",\"string\"],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null},{\"name\":\"middleInitial\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"middleName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nameType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"preferredFirstName\",\"type\":[\"null\",\"string\"],\"doc\":\"The preferred first name for an individual.\",\"default\":null},{\"name\":\"prefix\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sourceCode\",\"type\":[\"null\",\"string\"],\"default\":null,\"aliases\":[\"sourceSystemCode\"]},{\"name\":\"suffix\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"postalAddress\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PostalAddress\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"addressType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"beginDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"countrySubCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"county\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deliveryPoint\",\"type\":[\"null\",\"string\"],\"doc\":\"A 2-digit code which denotes a single mail box or other place at which mail is delivered\",\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"fipsCountyCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states.\",\"default\":null},{\"name\":\"isoCountry\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null},{\"name\":\"latitude\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"line1Text\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"line2Text\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"line3Text\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"marketSiteNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"postalAddressIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique identifier for an Individual's postal address.\",\"default\":null},{\"name\":\"postalCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"postalSuffixCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"preferredIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"primaryIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sourceCode\",\"type\":[\"null\",\"string\"],\"default\":null,\"aliases\":[\"sourceSystemCode\"]},{\"name\":\"sourceSystemAttributes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PostalAddressSourceSystemAttributes\",\"fields\":[{\"name\":\"cdb\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CdbPostalAddressReferenceData\",\"namespace\":\"com.uhc.schema.model.eligibility.cdb\",\"fields\":[{\"name\":\"addressTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"standardFormattingIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"stateProvinceCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"townName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"undeliverableReason\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"validationIndicator\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"representativeType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"roles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"com.uhc.schema.model.eligibility.common.DescriptionType\"}],\"default\":null},{\"name\":\"sendFulfillmentMaterialsIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"startDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"subscriberIndividualIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"telephoneNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"telephoneNumberEvening\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"telephoneNumberEveningExtention\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"telephoneNumberExtension\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"birthSequenceNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"citizenshipStatusType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"customerDefineds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CustomerDefined\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"householdTerminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"memberReportCategoryName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"demographicInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DemographicInfo\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"ageGroup\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.\",\"default\":null},{\"name\":\"ageGeneration\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.\",\"default\":null},{\"name\":\"birthDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"birthLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BirthLocation\",\"fields\":[{\"name\":\"isoCountry\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Country of birth for an individual.\",\"default\":null},{\"name\":\"stateProvinceCode\",\"type\":[\"null\",\"int\"],\"doc\":\"State or Province of birth for an individual.\",\"default\":null},{\"name\":\"townName\",\"type\":[\"null\",\"string\"],\"doc\":\"City or town of birth for an individual.\",\"default\":null}]}],\"default\":null},{\"name\":\"deceasedDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"ethnicity\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Ethnicity\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"genderType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"individualTerminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"language\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Language\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Defines the language use type, e.g., Spoken, Written\",\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null},{\"name\":\"maritalStatusType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"race\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Race\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"socialSecurityNumb","er\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"spokenLanguage\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"spokenLanguageIdentifier\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"subsidyTypeIdentifier\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"tribe\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Tribe\",\"fields\":[{\"name\":\"comments\",\"type\":[\"null\",\"string\"],\"doc\":\"Comment for the Individual's tribe.\",\"default\":null},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"tribeType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Code description pair for the Individual's tribe type.\",\"default\":null}]}],\"doc\":\"Indicates the Tribe of the Individual.\",\"default\":null}]}],\"default\":null},{\"name\":\"disabilities\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Disability\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"diagnosisCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"diagnosisType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null}]}}],\"default\":null},{\"name\":\"electronicAddresses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ElectronicAddress\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"communicationType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"contactStatusType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"electronicAddress\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"invalidEmailIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null},{\"name\":\"messageFormatType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"optOutIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"preferredIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"primaryIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sourceCode\",\"type\":[\"null\",\"string\"],\"default\":null,\"aliases\":[\"sourceSystemCode\"]},{\"name\":\"standardFormattingIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"textOnlyIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"undeliverableReason\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null}]}}],\"default\":null},{\"name\":\"eligibilityAttributes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EligibilityAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"enrolleeMemberFacingIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"memberSequenceNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"relationshipType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"subscriberMemberFacingIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"employment\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Employment\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"cancellationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"classType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"departmentNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"The unique identifier assigned to the employer location.\",\"default\":null},{\"name\":\"divisionNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"The unique identifier assigned to the reporting category for the employer.\",\"default\":null},{\"name\":\"employeeIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"hireDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"isExecutiveIndicator\",\"type\":\"boolean\",\"doc\":\"Indicates if a member is an Executive and therefore eligible for the Executive Physical. A value of true indicates that they are eligible, while a value of false indicates they are not.\",\"default\":false},{\"name\":\"organizationIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"retirementDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"salaryAmount\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"salaryFrequencyType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"workHourCount\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"enrolleeSourceCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"enrolleeSourceId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"exPatriateIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"exSpouseSubscriberId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"exSpouseTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"hccIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"healthCoverageTransferEffectiveDates\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DateRangeType\"],\"default\":null},{\"name\":\"individualIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"The unique key for an individual from a specific source (e.g. PART_NBR + CNSM_ID + SRC_CD + LGCY_SRC_ID)\",\"default\":null},{\"name\":\"individualRelationship\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"IndividualRelationship\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"emailAddress\",\"type\":[\"null\",\"string\"],\"doc\":\"Email address of the related consumer.\",\"default\":null},{\"name\":\"personName\",\"type\":[\"null\",\"PersonName\"],\"default\":null},{\"name\":\"postalAddresses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"PostalAddress\"}],\"default\":null},{\"name\":\"relatedIndividualIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"This is a unique number used by the enterprise to identify an individual person.\",\"default\":null},{\"name\":\"relationshipEffectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date the Member added the consumer as a relation based on the relationship type.\",\"default\":null},{\"name\":\"relationshipEndDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date the Member removed the consumer as a relation based on the relationship type.\",\"default\":null},{\"name\":\"individualRelationshipType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Identifies the relationship type between the Member and another Consumer.\",\"default\":null}]}}],\"default\":null},{\"name\":\"labInfos\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LabInfo\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"effectiveCancelDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"effectiveStartDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"labType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null}]}}],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null},{\"name\":\"legacyAttributes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"IndividualLegacyAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"customerNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"relationship","Code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"subscriberId\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"lifeEvents\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"IndividualLifeEvent\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"doc\":\"A set of life events for an Individual. Ex: Student, Retired, etc.\",\"fields\":[{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Effective date of life event. Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"lifeEvent\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"A life event for an Individual. Ex: Student, Retired, etc.\",\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Termination date of life event. Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"verificationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Verification date of life event. Date format: CCYY-MM-DD\",\"default\":null}]}}],\"default\":null},{\"name\":\"lineOfBusiness\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lowIncomeSubsidy\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LowIncomeSubsidy\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"baeIndicator\",\"type\":\"boolean\",\"doc\":\"Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence.\",\"default\":false},{\"name\":\"premiumSubsidyPercentage\",\"type\":[\"null\",\"int\"],\"doc\":\"Indicates the subsidy percent to come off the premium amount.\",\"default\":null},{\"name\":\"subsidyCopayCategory\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Indicates the low-income subsidy copay category.\",\"default\":null},{\"name\":\"subsidyEffectiveDates\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DateRangeType\"],\"doc\":\"Effective dates for the low-income subsidy.\",\"default\":null},{\"name\":\"subsidySource\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"The source code and description for the subsidy information.\",\"default\":null}]}}],\"default\":null},{\"name\":\"marketingIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"marketingSourceCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"medicareAnocSegment\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"medicareEntitlement\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MedicareEntitlement\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"partAStartDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"partAStopDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"partBStartDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"partBStopDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"partDStartDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"partDStopDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null}]}],\"default\":null},{\"name\":\"medicareAndRetirementEmployers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"MedicareAndRetirementEmployer\",\"namespace\":\"com.uhc.schema.model.eligibility.medicareandretirement\",\"fields\":[{\"name\":\"branchNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"employerDates\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DateRangeType\"],\"default\":null},{\"name\":\"employerIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"employmentStatus\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Indicates the employment status for an employment record (e.g., Full Time, Part Time, etc.).\",\"default\":null}]}}],\"default\":null},{\"name\":\"medicareAndRetirementHouseholdProfiles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"MedicareAndRetirementHouseholdProfile\",\"namespace\":\"com.uhc.schema.model.eligibility.medicareandretirement\",\"fields\":[{\"name\":\"associationIdentifier\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"creationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"eligibilitySystemIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"migratedMemberAppRecDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"migratedMemberAppSourceIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"migratedMemberIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"membershipNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"membershipNumberSystem\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"originalEffectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"profileDates\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DateRangeType\"],\"default\":null},{\"name\":\"secondaryMembershipNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sourceSystemMemberIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"medicareAndRetirementIndividualProfiles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"MedicareAndRetirementIndividualProfile\",\"namespace\":\"com.uhc.schema.model.eligibility.medicareandretirement\",\"fields\":[{\"name\":\"chronicCareIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"chronicVerifiedIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"esrdDialysisIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"esrdIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"esrdKidneyTransplantIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"esrdMspIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"hospiceIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"institutionalizedIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null},{\"name\":\"medicaidDualStatusCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"medicaidIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"medicaidNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"mmrLisIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"mmrMedicaidIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nursingHomeCertIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"profileDates\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DateRangeType\"],\"default\":null},{\"name\":\"workingAgeIndicator\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"medicareAndRetirementLineOfBusiness\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MedicareAndRetirementLineOfBusiness\",\"namespace\":\"com.uhc.schema.model.eligibility.medicareandretirement\",\"fields\":[{\"name\":\"bitValue\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"onshoreOnlyIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"organizationIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"organizationType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"outOfAreaIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"outOfAreaDisenrollmentDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"personName\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.individual.PersonName\"],\"default\":null},{\"name\":\"physicalAttributes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PhysicalAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"height\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"weight\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"policyAmounts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PolicyAmount\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"policy","Amount\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null}]}}],\"default\":null},{\"name\":\"postalAddresses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"com.uhc.schema.model.eligibility.individual.PostalAddress\"}],\"default\":null},{\"name\":\"primeDependentCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"priorMemberFacingIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PriorMemberFacingIds\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"enrolleeMemberFacingIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"External facing identifier, such as an ID printed on a membership card, used to identify a member, at the level of the enrollee.\",\"default\":null},{\"name\":\"organizationIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Identifier for the Organization of the Individual.\",\"default\":null},{\"name\":\"subscriberMemberFacingIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"External facing identifier, such as an ID printed on a membership card, used to identify a subscriber, at the level of the enrollee.\",\"default\":null}]}}],\"default\":null},{\"name\":\"qmcsoIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"researchAuthorizationIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"security\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Security\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"securitySourceSystemCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"securityPermission\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SecurityPermission\",\"fields\":[{\"name\":\"securityPermissionValue\",\"type\":[\"null\",\"string\"],\"doc\":\"A security attribute identifying the secure class under which the record instance is administered.\",\"default\":null}]}}],\"doc\":\"Superset of Security permissions\",\"default\":null},{\"name\":\"securityPermissionAny\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"SecurityPermission\"}],\"doc\":\"Subset of security permissions This is used for source systems that require at least one permission from the superset of permissions to be present.\",\"default\":null}]}],\"default\":null},{\"name\":\"socialSecurityNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"(DEPRECATED - use demographicInfo.socialSecurityNumber instead).  The primary SSN for the individual.  Additional SSNs may exist as alternateIdentifier values.\",\"default\":null},{\"name\":\"sourceSystemAttributes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"IndividualSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"cdb\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CdbIndividualSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.cdb\",\"fields\":[{\"name\":\"consumerId\",\"type\":[\"null\",\"int\"],\"doc\":\"Consumer Id (CNSM_ID).\",\"default\":null},{\"name\":\"customerAccountIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"familyPartitionNumber\",\"type\":[\"null\",\"int\"],\"doc\":\"Family partition number(FAM_PARTN_NBR).\",\"default\":null},{\"name\":\"migratedMemberships\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CdbMigratedMembership\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"consumerId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"legacySourceId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"partitionNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"policyNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sourceCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"subscriberId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"xrefId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"xrefIdPartitionNumber\",\"type\":[\"null\",\"int\"],\"default\":null}]}}],\"default\":null},{\"name\":\"otherInsurances\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CdbIndividualOtherInsurance\",\"fields\":[{\"name\":\"coverageTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"custody\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"custody types.\",\"default\":null},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"otherInsuranceIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sourceUpdateTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"updateRestrictionTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"verificationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null}]}}],\"default\":null},{\"name\":\"partitionNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"referenceData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CdbIndividualReferenceData\",\"fields\":[{\"name\":\"employmentStatusCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"genderTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"maritalStatusTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"subscriberRelationshipTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"spclProcHndlCd\",\"type\":[\"null\",\"string\"],\"doc\":\"Code for cdbSpclProc.\",\"default\":null},{\"name\":\"xrefId\",\"type\":[\"null\",\"int\"],\"doc\":\"An integer field which represents the SRC_CD, LGCY_SRC_ID, CNSM_ID, and PARTN_NBR.\",\"default\":null},{\"name\":\"xrefIdPartitionNumber\",\"type\":[\"null\",\"int\"],\"doc\":\"Partition number for cdbXrefId.\",\"default\":null}]}],\"default\":null},{\"name\":\"cirrus\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CirrusIndividualSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.cirrus\",\"fields\":[{\"name\":\"eligibilityHoldIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"internationalPhoneIndicator\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"medicareAndRetirement\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MedicareAndRetirementIndividualSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.medicareandretirement\",\"fields\":[{\"name\":\"insuredCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"migratedSourceSystem\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"specialHandling\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"com.uhc.schema.model.eligibility.common.DescriptionType\"}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"sourceSystemCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"substanceAbuseIndicator\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates if the individual has abused alcohol or drugs in any form.\",\"default\":null},{\"name\":\"taxIdStatuses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TaxIdStatus\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null},{\"name\":\"statusType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null}]}}],\"default\":null},{\"name\":\"taxpayerIdentificationNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Individual's Taxpayer Identification Number.\",\"default\":null},{\"name\":\"telephoneNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TelephoneNumber\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"areaCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"communicationType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"countryCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"exchangePrefix\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"extension\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null},{\"name\":\"lineNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"n","ame\":\"preferredIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"primaryIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sourceCode\",\"type\":[\"null\",\"string\"],\"default\":null,\"aliases\":[\"sourceSystemCode\"]},{\"name\":\"sourceSystemAttributes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TelephoneNumberSourceSystemAttributes\",\"fields\":[{\"name\":\"cdb\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CdbTelephoneNumberReferenceData\",\"namespace\":\"com.uhc.schema.model.eligibility.cdb\",\"fields\":[{\"name\":\"telephoneTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"standardFormattingIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"telephoneNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"undeliverableReason\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null}]}}],\"default\":null},{\"name\":\"tobaccoUseIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"tobaccoUseType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Specifies the tobacco type in use by the individual.\",\"default\":null},{\"name\":\"vipIndicator\",\"type\":\"boolean\",\"default\":false}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SourceIndividual> ENCODER =
      new BinaryMessageEncoder<SourceIndividual>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SourceIndividual> DECODER =
      new BinaryMessageDecoder<SourceIndividual>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SourceIndividual> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SourceIndividual> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SourceIndividual>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SourceIndividual to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SourceIndividual from a ByteBuffer. */
  public static SourceIndividual fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public boolean active;
  @Deprecated public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers alternateIdentifiers;
  @Deprecated public java.lang.CharSequence atOccupationTypeCode;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AuthoritativeRepresentative> authoritativeRepresentatives;
  @Deprecated public java.lang.CharSequence birthSequenceNumber;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType citizenshipStatusType;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.CustomerDefined> customerDefineds;
  @Deprecated public com.uhc.schema.model.eligibility.individual.DemographicInfo demographicInfo;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.Disability> disabilities;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.ElectronicAddress> electronicAddresses;
  @Deprecated public com.uhc.schema.model.eligibility.individual.EligibilityAttributes eligibilityAttributes;
  @Deprecated public com.uhc.schema.model.eligibility.individual.Employment employment;
  @Deprecated public java.lang.CharSequence enrolleeSourceCode;
  @Deprecated public java.lang.CharSequence enrolleeSourceId;
  @Deprecated public java.lang.CharSequence exPatriateIndicator;
  @Deprecated public java.lang.CharSequence exSpouseSubscriberId;
  @Deprecated public java.lang.CharSequence exSpouseTypeCode;
  @Deprecated public java.lang.CharSequence hccIndicator;
  @Deprecated public com.uhc.schema.model.eligibility.common.DateRangeType healthCoverageTransferEffectiveDates;
  /** The unique key for an individual from a specific source (e.g. PART_NBR + CNSM_ID + SRC_CD + LGCY_SRC_ID) */
  @Deprecated public java.lang.CharSequence individualIdentifier;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.IndividualRelationship> individualRelationship;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.LabInfo> labInfos;
  @Deprecated public com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
  @Deprecated public com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes legacyAttributes;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.IndividualLifeEvent> lifeEvents;
  @Deprecated public java.lang.CharSequence lineOfBusiness;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy> lowIncomeSubsidy;
  @Deprecated public java.lang.CharSequence marketingIndicator;
  @Deprecated public java.lang.CharSequence marketingSourceCode;
  @Deprecated public java.lang.CharSequence medicareAnocSegment;
  @Deprecated public com.uhc.schema.model.eligibility.individual.MedicareEntitlement medicareEntitlement;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementEmployer> medicareAndRetirementEmployers;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile> medicareAndRetirementHouseholdProfiles;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile> medicareAndRetirementIndividualProfiles;
  @Deprecated public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness medicareAndRetirementLineOfBusiness;
  @Deprecated public java.lang.CharSequence onshoreOnlyIndicator;
  @Deprecated public java.lang.CharSequence organizationIdentifier;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType organizationType;
  @Deprecated public java.lang.CharSequence outOfAreaIndicator;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence outOfAreaDisenrollmentDate;
  @Deprecated public com.uhc.schema.model.eligibility.individual.PersonName personName;
  @Deprecated public com.uhc.schema.model.eligibility.individual.PhysicalAttributes physicalAttributes;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.PolicyAmount> policyAmounts;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.PostalAddress> postalAddresses;
  @Deprecated public java.lang.CharSequence primeDependentCode;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.PriorMemberFacingIds> priorMemberFacingIds;
  @Deprecated public boolean qmcsoIndicator;
  @Deprecated public boolean researchAuthorizationIndicator;
  @Deprecated public com.uhc.schema.model.eligibility.common.Security security;
  /** (DEPRECATED - use demographicInfo.socialSecurityNumber instead).  The primary SSN for the individual.  Additional SSNs may exist as alternateIdentifier values. */
  @Deprecated public java.lang.CharSequence socialSecurityNumber;
  @Deprecated public com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes sourceSystemAttributes;
  @Deprecated public java.lang.CharSequence sourceSystemCode;
  /** Indicates if the individual has abused alcohol or drugs in any form. */
  @Deprecated public java.lang.CharSequence substanceAbuseIndicator;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.TaxIdStatus> taxIdStatuses;
  /** Individual's Taxpayer Identification Number. */
  @Deprecated public java.lang.CharSequence taxpayerIdentificationNumber;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.TelephoneNumber> telephoneNumbers;
  @Deprecated public boolean tobaccoUseIndicator;
  /** Specifies the tobacco type in use by the individual. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType tobaccoUseType;
  @Deprecated public boolean vipIndicator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SourceIndividual() {}

  /**
   * All-args constructor.
   * @param active The new value for active
   * @param alternateIdentifiers The new value for alternateIdentifiers
   * @param atOccupationTypeCode The new value for atOccupationTypeCode
   * @param authoritativeRepresentatives The new value for authoritativeRepresentatives
   * @param birthSequenceNumber The new value for birthSequenceNumber
   * @param citizenshipStatusType The new value for citizenshipStatusType
   * @param customerDefineds The new value for customerDefineds
   * @param demographicInfo The new value for demographicInfo
   * @param disabilities The new value for disabilities
   * @param electronicAddresses The new value for electronicAddresses
   * @param eligibilityAttributes The new value for eligibilityAttributes
   * @param employment The new value for employment
   * @param enrolleeSourceCode The new value for enrolleeSourceCode
   * @param enrolleeSourceId The new value for enrolleeSourceId
   * @param exPatriateIndicator The new value for exPatriateIndicator
   * @param exSpouseSubscriberId The new value for exSpouseSubscriberId
   * @param exSpouseTypeCode The new value for exSpouseTypeCode
   * @param hccIndicator The new value for hccIndicator
   * @param healthCoverageTransferEffectiveDates The new value for healthCoverageTransferEffectiveDates
   * @param individualIdentifier The unique key for an individual from a specific source (e.g. PART_NBR + CNSM_ID + SRC_CD + LGCY_SRC_ID)
   * @param individualRelationship The new value for individualRelationship
   * @param labInfos The new value for labInfos
   * @param lastUpdated The new value for lastUpdated
   * @param legacyAttributes The new value for legacyAttributes
   * @param lifeEvents The new value for lifeEvents
   * @param lineOfBusiness The new value for lineOfBusiness
   * @param lowIncomeSubsidy The new value for lowIncomeSubsidy
   * @param marketingIndicator The new value for marketingIndicator
   * @param marketingSourceCode The new value for marketingSourceCode
   * @param medicareAnocSegment The new value for medicareAnocSegment
   * @param medicareEntitlement The new value for medicareEntitlement
   * @param medicareAndRetirementEmployers The new value for medicareAndRetirementEmployers
   * @param medicareAndRetirementHouseholdProfiles The new value for medicareAndRetirementHouseholdProfiles
   * @param medicareAndRetirementIndividualProfiles The new value for medicareAndRetirementIndividualProfiles
   * @param medicareAndRetirementLineOfBusiness The new value for medicareAndRetirementLineOfBusiness
   * @param onshoreOnlyIndicator The new value for onshoreOnlyIndicator
   * @param organizationIdentifier The new value for organizationIdentifier
   * @param organizationType The new value for organizationType
   * @param outOfAreaIndicator The new value for outOfAreaIndicator
   * @param outOfAreaDisenrollmentDate Date format: CCYY-MM-DD
   * @param personName The new value for personName
   * @param physicalAttributes The new value for physicalAttributes
   * @param policyAmounts The new value for policyAmounts
   * @param postalAddresses The new value for postalAddresses
   * @param primeDependentCode The new value for primeDependentCode
   * @param priorMemberFacingIds The new value for priorMemberFacingIds
   * @param qmcsoIndicator The new value for qmcsoIndicator
   * @param researchAuthorizationIndicator The new value for researchAuthorizationIndicator
   * @param security The new value for security
   * @param socialSecurityNumber (DEPRECATED - use demographicInfo.socialSecurityNumber instead).  The primary SSN for the individual.  Additional SSNs may exist as alternateIdentifier values.
   * @param sourceSystemAttributes The new value for sourceSystemAttributes
   * @param sourceSystemCode The new value for sourceSystemCode
   * @param substanceAbuseIndicator Indicates if the individual has abused alcohol or drugs in any form.
   * @param taxIdStatuses The new value for taxIdStatuses
   * @param taxpayerIdentificationNumber Individual's Taxpayer Identification Number.
   * @param telephoneNumbers The new value for telephoneNumbers
   * @param tobaccoUseIndicator The new value for tobaccoUseIndicator
   * @param tobaccoUseType Specifies the tobacco type in use by the individual.
   * @param vipIndicator The new value for vipIndicator
   */
  public SourceIndividual(java.lang.Boolean active, com.uhc.schema.model.eligibility.individual.AlternateIdentifiers alternateIdentifiers, java.lang.CharSequence atOccupationTypeCode, java.util.List<com.uhc.schema.model.eligibility.individual.AuthoritativeRepresentative> authoritativeRepresentatives, java.lang.CharSequence birthSequenceNumber, com.uhc.schema.model.eligibility.common.DescriptionType citizenshipStatusType, java.util.List<com.uhc.schema.model.eligibility.individual.CustomerDefined> customerDefineds, com.uhc.schema.model.eligibility.individual.DemographicInfo demographicInfo, java.util.List<com.uhc.schema.model.eligibility.individual.Disability> disabilities, java.util.List<com.uhc.schema.model.eligibility.individual.ElectronicAddress> electronicAddresses, com.uhc.schema.model.eligibility.individual.EligibilityAttributes eligibilityAttributes, com.uhc.schema.model.eligibility.individual.Employment employment, java.lang.CharSequence enrolleeSourceCode, java.lang.CharSequence enrolleeSourceId, java.lang.CharSequence exPatriateIndicator, java.lang.CharSequence exSpouseSubscriberId, java.lang.CharSequence exSpouseTypeCode, java.lang.CharSequence hccIndicator, com.uhc.schema.model.eligibility.common.DateRangeType healthCoverageTransferEffectiveDates, java.lang.CharSequence individualIdentifier, java.util.List<com.uhc.schema.model.eligibility.individual.IndividualRelationship> individualRelationship, java.util.List<com.uhc.schema.model.eligibility.individual.LabInfo> labInfos, com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated, com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes legacyAttributes, java.util.List<com.uhc.schema.model.eligibility.individual.IndividualLifeEvent> lifeEvents, java.lang.CharSequence lineOfBusiness, java.util.List<com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy> lowIncomeSubsidy, java.lang.CharSequence marketingIndicator, java.lang.CharSequence marketingSourceCode, java.lang.CharSequence medicareAnocSegment, com.uhc.schema.model.eligibility.individual.MedicareEntitlement medicareEntitlement, java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementEmployer> medicareAndRetirementEmployers, java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile> medicareAndRetirementHouseholdProfiles, java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile> medicareAndRetirementIndividualProfiles, com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness medicareAndRetirementLineOfBusiness, java.lang.CharSequence onshoreOnlyIndicator, java.lang.CharSequence organizationIdentifier, com.uhc.schema.model.eligibility.common.DescriptionType organizationType, java.lang.CharSequence outOfAreaIndicator, java.lang.CharSequence outOfAreaDisenrollmentDate, com.uhc.schema.model.eligibility.individual.PersonName personName, com.uhc.schema.model.eligibility.individual.PhysicalAttributes physicalAttributes, java.util.List<com.uhc.schema.model.eligibility.individual.PolicyAmount> policyAmounts, java.util.List<com.uhc.schema.model.eligibility.individual.PostalAddress> postalAddresses, java.lang.CharSequence primeDependentCode, java.util.List<com.uhc.schema.model.eligibility.individual.PriorMemberFacingIds> priorMemberFacingIds, java.lang.Boolean qmcsoIndicator, java.lang.Boolean researchAuthorizationIndicator, com.uhc.schema.model.eligibility.common.Security security, java.lang.CharSequence socialSecurityNumber, com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes sourceSystemAttributes, java.lang.CharSequence sourceSystemCode, java.lang.CharSequence substanceAbuseIndicator, java.util.List<com.uhc.schema.model.eligibility.individual.TaxIdStatus> taxIdStatuses, java.lang.CharSequence taxpayerIdentificationNumber, java.util.List<com.uhc.schema.model.eligibility.individual.TelephoneNumber> telephoneNumbers, java.lang.Boolean tobaccoUseIndicator, com.uhc.schema.model.eligibility.common.DescriptionType tobaccoUseType, java.lang.Boolean vipIndicator) {
    this.active = active;
    this.alternateIdentifiers = alternateIdentifiers;
    this.atOccupationTypeCode = atOccupationTypeCode;
    this.authoritativeRepresentatives = authoritativeRepresentatives;
    this.birthSequenceNumber = birthSequenceNumber;
    this.citizenshipStatusType = citizenshipStatusType;
    this.customerDefineds = customerDefineds;
    this.demographicInfo = demographicInfo;
    this.disabilities = disabilities;
    this.electronicAddresses = electronicAddresses;
    this.eligibilityAttributes = eligibilityAttributes;
    this.employment = employment;
    this.enrolleeSourceCode = enrolleeSourceCode;
    this.enrolleeSourceId = enrolleeSourceId;
    this.exPatriateIndicator = exPatriateIndicator;
    this.exSpouseSubscriberId = exSpouseSubscriberId;
    this.exSpouseTypeCode = exSpouseTypeCode;
    this.hccIndicator = hccIndicator;
    this.healthCoverageTransferEffectiveDates = healthCoverageTransferEffectiveDates;
    this.individualIdentifier = individualIdentifier;
    this.individualRelationship = individualRelationship;
    this.labInfos = labInfos;
    this.lastUpdated = lastUpdated;
    this.legacyAttributes = legacyAttributes;
    this.lifeEvents = lifeEvents;
    this.lineOfBusiness = lineOfBusiness;
    this.lowIncomeSubsidy = lowIncomeSubsidy;
    this.marketingIndicator = marketingIndicator;
    this.marketingSourceCode = marketingSourceCode;
    this.medicareAnocSegment = medicareAnocSegment;
    this.medicareEntitlement = medicareEntitlement;
    this.medicareAndRetirementEmployers = medicareAndRetirementEmployers;
    this.medicareAndRetirementHouseholdProfiles = medicareAndRetirementHouseholdProfiles;
    this.medicareAndRetirementIndividualProfiles = medicareAndRetirementIndividualProfiles;
    this.medicareAndRetirementLineOfBusiness = medicareAndRetirementLineOfBusiness;
    this.onshoreOnlyIndicator = onshoreOnlyIndicator;
    this.organizationIdentifier = organizationIdentifier;
    this.organizationType = organizationType;
    this.outOfAreaIndicator = outOfAreaIndicator;
    this.outOfAreaDisenrollmentDate = outOfAreaDisenrollmentDate;
    this.personName = personName;
    this.physicalAttributes = physicalAttributes;
    this.policyAmounts = policyAmounts;
    this.postalAddresses = postalAddresses;
    this.primeDependentCode = primeDependentCode;
    this.priorMemberFacingIds = priorMemberFacingIds;
    this.qmcsoIndicator = qmcsoIndicator;
    this.researchAuthorizationIndicator = researchAuthorizationIndicator;
    this.security = security;
    this.socialSecurityNumber = socialSecurityNumber;
    this.sourceSystemAttributes = sourceSystemAttributes;
    this.sourceSystemCode = sourceSystemCode;
    this.substanceAbuseIndicator = substanceAbuseIndicator;
    this.taxIdStatuses = taxIdStatuses;
    this.taxpayerIdentificationNumber = taxpayerIdentificationNumber;
    this.telephoneNumbers = telephoneNumbers;
    this.tobaccoUseIndicator = tobaccoUseIndicator;
    this.tobaccoUseType = tobaccoUseType;
    this.vipIndicator = vipIndicator;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return active;
    case 1: return alternateIdentifiers;
    case 2: return atOccupationTypeCode;
    case 3: return authoritativeRepresentatives;
    case 4: return birthSequenceNumber;
    case 5: return citizenshipStatusType;
    case 6: return customerDefineds;
    case 7: return demographicInfo;
    case 8: return disabilities;
    case 9: return electronicAddresses;
    case 10: return eligibilityAttributes;
    case 11: return employment;
    case 12: return enrolleeSourceCode;
    case 13: return enrolleeSourceId;
    case 14: return exPatriateIndicator;
    case 15: return exSpouseSubscriberId;
    case 16: return exSpouseTypeCode;
    case 17: return hccIndicator;
    case 18: return healthCoverageTransferEffectiveDates;
    case 19: return individualIdentifier;
    case 20: return individualRelationship;
    case 21: return labInfos;
    case 22: return lastUpdated;
    case 23: return legacyAttributes;
    case 24: return lifeEvents;
    case 25: return lineOfBusiness;
    case 26: return lowIncomeSubsidy;
    case 27: return marketingIndicator;
    case 28: return marketingSourceCode;
    case 29: return medicareAnocSegment;
    case 30: return medicareEntitlement;
    case 31: return medicareAndRetirementEmployers;
    case 32: return medicareAndRetirementHouseholdProfiles;
    case 33: return medicareAndRetirementIndividualProfiles;
    case 34: return medicareAndRetirementLineOfBusiness;
    case 35: return onshoreOnlyIndicator;
    case 36: return organizationIdentifier;
    case 37: return organizationType;
    case 38: return outOfAreaIndicator;
    case 39: return outOfAreaDisenrollmentDate;
    case 40: return personName;
    case 41: return physicalAttributes;
    case 42: return policyAmounts;
    case 43: return postalAddresses;
    case 44: return primeDependentCode;
    case 45: return priorMemberFacingIds;
    case 46: return qmcsoIndicator;
    case 47: return researchAuthorizationIndicator;
    case 48: return security;
    case 49: return socialSecurityNumber;
    case 50: return sourceSystemAttributes;
    case 51: return sourceSystemCode;
    case 52: return substanceAbuseIndicator;
    case 53: return taxIdStatuses;
    case 54: return taxpayerIdentificationNumber;
    case 55: return telephoneNumbers;
    case 56: return tobaccoUseIndicator;
    case 57: return tobaccoUseType;
    case 58: return vipIndicator;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: active = (java.lang.Boolean)value$; break;
    case 1: alternateIdentifiers = (com.uhc.schema.model.eligibility.individual.AlternateIdentifiers)value$; break;
    case 2: atOccupationTypeCode = (java.lang.CharSequence)value$; break;
    case 3: authoritativeRepresentatives = (java.util.List<com.uhc.schema.model.eligibility.individual.AuthoritativeRepresentative>)value$; break;
    case 4: birthSequenceNumber = (java.lang.CharSequence)value$; break;
    case 5: citizenshipStatusType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 6: customerDefineds = (java.util.List<com.uhc.schema.model.eligibility.individual.CustomerDefined>)value$; break;
    case 7: demographicInfo = (com.uhc.schema.model.eligibility.individual.DemographicInfo)value$; break;
    case 8: disabilities = (java.util.List<com.uhc.schema.model.eligibility.individual.Disability>)value$; break;
    case 9: electronicAddresses = (java.util.List<com.uhc.schema.model.eligibility.individual.ElectronicAddress>)value$; break;
    case 10: eligibilityAttributes = (com.uhc.schema.model.eligibility.individual.EligibilityAttributes)value$; break;
    case 11: employment = (com.uhc.schema.model.eligibility.individual.Employment)value$; break;
    case 12: enrolleeSourceCode = (java.lang.CharSequence)value$; break;
    case 13: enrolleeSourceId = (java.lang.CharSequence)value$; break;
    case 14: exPatriateIndicator = (java.lang.CharSequence)value$; break;
    case 15: exSpouseSubscriberId = (java.lang.CharSequence)value$; break;
    case 16: exSpouseTypeCode = (java.lang.CharSequence)value$; break;
    case 17: hccIndicator = (java.lang.CharSequence)value$; break;
    case 18: healthCoverageTransferEffectiveDates = (com.uhc.schema.model.eligibility.common.DateRangeType)value$; break;
    case 19: individualIdentifier = (java.lang.CharSequence)value$; break;
    case 20: individualRelationship = (java.util.List<com.uhc.schema.model.eligibility.individual.IndividualRelationship>)value$; break;
    case 21: labInfos = (java.util.List<com.uhc.schema.model.eligibility.individual.LabInfo>)value$; break;
    case 22: lastUpdated = (com.uhc.schema.model.eligibility.common.LastUpdated)value$; break;
    case 23: legacyAttributes = (com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes)value$; break;
    case 24: lifeEvents = (java.util.List<com.uhc.schema.model.eligibility.individual.IndividualLifeEvent>)value$; break;
    case 25: lineOfBusiness = (java.lang.CharSequence)value$; break;
    case 26: lowIncomeSubsidy = (java.util.List<com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy>)value$; break;
    case 27: marketingIndicator = (java.lang.CharSequence)value$; break;
    case 28: marketingSourceCode = (java.lang.CharSequence)value$; break;
    case 29: medicareAnocSegment = (java.lang.CharSequence)value$; break;
    case 30: medicareEntitlement = (com.uhc.schema.model.eligibility.individual.MedicareEntitlement)value$; break;
    case 31: medicareAndRetirementEmployers = (java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementEmployer>)value$; break;
    case 32: medicareAndRetirementHouseholdProfiles = (java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile>)value$; break;
    case 33: medicareAndRetirementIndividualProfiles = (java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile>)value$; break;
    case 34: medicareAndRetirementLineOfBusiness = (com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness)value$; break;
    case 35: onshoreOnlyIndicator = (java.lang.CharSequence)value$; break;
    case 36: organizationIdentifier = (java.lang.CharSequence)value$; break;
    case 37: organizationType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 38: outOfAreaIndicator = (java.lang.CharSequence)value$; break;
    case 39: outOfAreaDisenrollmentDate = (java.lang.CharSequence)value$; break;
    case 40: personName = (com.uhc.schema.model.eligibility.individual.PersonName)value$; break;
    case 41: physicalAttributes = (com.uhc.schema.model.eligibility.individual.PhysicalAttributes)value$; break;
    case 42: policyAmounts = (java.util.List<com.uhc.schema.model.eligibility.individual.PolicyAmount>)value$; break;
    case 43: postalAddresses = (java.util.List<com.uhc.schema.model.eligibility.individual.PostalAddress>)value$; break;
    case 44: primeDependentCode = (java.lang.CharSequence)value$; break;
    case 45: priorMemberFacingIds = (java.util.List<com.uhc.schema.model.eligibility.individual.PriorMemberFacingIds>)value$; break;
    case 46: qmcsoIndicator = (java.lang.Boolean)value$; break;
    case 47: researchAuthorizationIndicator = (java.lang.Boolean)value$; break;
    case 48: security = (com.uhc.schema.model.eligibility.common.Security)value$; break;
    case 49: socialSecurityNumber = (java.lang.CharSequence)value$; break;
    case 50: sourceSystemAttributes = (com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes)value$; break;
    case 51: sourceSystemCode = (java.lang.CharSequence)value$; break;
    case 52: substanceAbuseIndicator = (java.lang.CharSequence)value$; break;
    case 53: taxIdStatuses = (java.util.List<com.uhc.schema.model.eligibility.individual.TaxIdStatus>)value$; break;
    case 54: taxpayerIdentificationNumber = (java.lang.CharSequence)value$; break;
    case 55: telephoneNumbers = (java.util.List<com.uhc.schema.model.eligibility.individual.TelephoneNumber>)value$; break;
    case 56: tobaccoUseIndicator = (java.lang.Boolean)value$; break;
    case 57: tobaccoUseType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 58: vipIndicator = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public java.lang.Boolean getActive() {
    return active;
  }

  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'alternateIdentifiers' field.
   * @return The value of the 'alternateIdentifiers' field.
   */
  public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers getAlternateIdentifiers() {
    return alternateIdentifiers;
  }

  /**
   * Sets the value of the 'alternateIdentifiers' field.
   * @param value the value to set.
   */
  public void setAlternateIdentifiers(com.uhc.schema.model.eligibility.individual.AlternateIdentifiers value) {
    this.alternateIdentifiers = value;
  }

  /**
   * Gets the value of the 'atOccupationTypeCode' field.
   * @return The value of the 'atOccupationTypeCode' field.
   */
  public java.lang.CharSequence getAtOccupationTypeCode() {
    return atOccupationTypeCode;
  }

  /**
   * Sets the value of the 'atOccupationTypeCode' field.
   * @param value the value to set.
   */
  public void setAtOccupationTypeCode(java.lang.CharSequence value) {
    this.atOccupationTypeCode = value;
  }

  /**
   * Gets the value of the 'authoritativeRepresentatives' field.
   * @return The value of the 'authoritativeRepresentatives' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AuthoritativeRepresentative> getAuthoritativeRepresentatives() {
    return authoritativeRepresentatives;
  }

  /**
   * Sets the value of the 'authoritativeRepresentatives' field.
   * @param value the value to set.
   */
  public void setAuthoritativeRepresentatives(java.util.List<com.uhc.schema.model.eligibility.individual.AuthoritativeRepresentative> value) {
    this.authoritativeRepresentatives = value;
  }

  /**
   * Gets the value of the 'birthSequenceNumber' field.
   * @return The value of the 'birthSequenceNumber' field.
   */
  public java.lang.CharSequence getBirthSequenceNumber() {
    return birthSequenceNumber;
  }

  /**
   * Sets the value of the 'birthSequenceNumber' field.
   * @param value the value to set.
   */
  public void setBirthSequenceNumber(java.lang.CharSequence value) {
    this.birthSequenceNumber = value;
  }

  /**
   * Gets the value of the 'citizenshipStatusType' field.
   * @return The value of the 'citizenshipStatusType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getCitizenshipStatusType() {
    return citizenshipStatusType;
  }

  /**
   * Sets the value of the 'citizenshipStatusType' field.
   * @param value the value to set.
   */
  public void setCitizenshipStatusType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.citizenshipStatusType = value;
  }

  /**
   * Gets the value of the 'customerDefineds' field.
   * @return The value of the 'customerDefineds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.CustomerDefined> getCustomerDefineds() {
    return customerDefineds;
  }

  /**
   * Sets the value of the 'customerDefineds' field.
   * @param value the value to set.
   */
  public void setCustomerDefineds(java.util.List<com.uhc.schema.model.eligibility.individual.CustomerDefined> value) {
    this.customerDefineds = value;
  }

  /**
   * Gets the value of the 'demographicInfo' field.
   * @return The value of the 'demographicInfo' field.
   */
  public com.uhc.schema.model.eligibility.individual.DemographicInfo getDemographicInfo() {
    return demographicInfo;
  }

  /**
   * Sets the value of the 'demographicInfo' field.
   * @param value the value to set.
   */
  public void setDemographicInfo(com.uhc.schema.model.eligibility.individual.DemographicInfo value) {
    this.demographicInfo = value;
  }

  /**
   * Gets the value of the 'disabilities' field.
   * @return The value of the 'disabilities' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.Disability> getDisabilities() {
    return disabilities;
  }

  /**
   * Sets the value of the 'disabilities' field.
   * @param value the value to set.
   */
  public void setDisabilities(java.util.List<com.uhc.schema.model.eligibility.individual.Disability> value) {
    this.disabilities = value;
  }

  /**
   * Gets the value of the 'electronicAddresses' field.
   * @return The value of the 'electronicAddresses' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.ElectronicAddress> getElectronicAddresses() {
    return electronicAddresses;
  }

  /**
   * Sets the value of the 'electronicAddresses' field.
   * @param value the value to set.
   */
  public void setElectronicAddresses(java.util.List<com.uhc.schema.model.eligibility.individual.ElectronicAddress> value) {
    this.electronicAddresses = value;
  }

  /**
   * Gets the value of the 'eligibilityAttributes' field.
   * @return The value of the 'eligibilityAttributes' field.
   */
  public com.uhc.schema.model.eligibility.individual.EligibilityAttributes getEligibilityAttributes() {
    return eligibilityAttributes;
  }

  /**
   * Sets the value of the 'eligibilityAttributes' field.
   * @param value the value to set.
   */
  public void setEligibilityAttributes(com.uhc.schema.model.eligibility.individual.EligibilityAttributes value) {
    this.eligibilityAttributes = value;
  }

  /**
   * Gets the value of the 'employment' field.
   * @return The value of the 'employment' field.
   */
  public com.uhc.schema.model.eligibility.individual.Employment getEmployment() {
    return employment;
  }

  /**
   * Sets the value of the 'employment' field.
   * @param value the value to set.
   */
  public void setEmployment(com.uhc.schema.model.eligibility.individual.Employment value) {
    this.employment = value;
  }

  /**
   * Gets the value of the 'enrolleeSourceCode' field.
   * @return The value of the 'enrolleeSourceCode' field.
   */
  public java.lang.CharSequence getEnrolleeSourceCode() {
    return enrolleeSourceCode;
  }

  /**
   * Sets the value of the 'enrolleeSourceCode' field.
   * @param value the value to set.
   */
  public void setEnrolleeSourceCode(java.lang.CharSequence value) {
    this.enrolleeSourceCode = value;
  }

  /**
   * Gets the value of the 'enrolleeSourceId' field.
   * @return The value of the 'enrolleeSourceId' field.
   */
  public java.lang.CharSequence getEnrolleeSourceId() {
    return enrolleeSourceId;
  }

  /**
   * Sets the value of the 'enrolleeSourceId' field.
   * @param value the value to set.
   */
  public void setEnrolleeSourceId(java.lang.CharSequence value) {
    this.enrolleeSourceId = value;
  }

  /**
   * Gets the value of the 'exPatriateIndicator' field.
   * @return The value of the 'exPatriateIndicator' field.
   */
  public java.lang.CharSequence getExPatriateIndicator() {
    return exPatriateIndicator;
  }

  /**
   * Sets the value of the 'exPatriateIndicator' field.
   * @param value the value to set.
   */
  public void setExPatriateIndicator(java.lang.CharSequence value) {
    this.exPatriateIndicator = value;
  }

  /**
   * Gets the value of the 'exSpouseSubscriberId' field.
   * @return The value of the 'exSpouseSubscriberId' field.
   */
  public java.lang.CharSequence getExSpouseSubscriberId() {
    return exSpouseSubscriberId;
  }

  /**
   * Sets the value of the 'exSpouseSubscriberId' field.
   * @param value the value to set.
   */
  public void setExSpouseSubscriberId(java.lang.CharSequence value) {
    this.exSpouseSubscriberId = value;
  }

  /**
   * Gets the value of the 'exSpouseTypeCode' field.
   * @return The value of the 'exSpouseTypeCode' field.
   */
  public java.lang.CharSequence getExSpouseTypeCode() {
    return exSpouseTypeCode;
  }

  /**
   * Sets the value of the 'exSpouseTypeCode' field.
   * @param value the value to set.
   */
  public void setExSpouseTypeCode(java.lang.CharSequence value) {
    this.exSpouseTypeCode = value;
  }

  /**
   * Gets the value of the 'hccIndicator' field.
   * @return The value of the 'hccIndicator' field.
   */
  public java.lang.CharSequence getHccIndicator() {
    return hccIndicator;
  }

  /**
   * Sets the value of the 'hccIndicator' field.
   * @param value the value to set.
   */
  public void setHccIndicator(java.lang.CharSequence value) {
    this.hccIndicator = value;
  }

  /**
   * Gets the value of the 'healthCoverageTransferEffectiveDates' field.
   * @return The value of the 'healthCoverageTransferEffectiveDates' field.
   */
  public com.uhc.schema.model.eligibility.common.DateRangeType getHealthCoverageTransferEffectiveDates() {
    return healthCoverageTransferEffectiveDates;
  }

  /**
   * Sets the value of the 'healthCoverageTransferEffectiveDates' field.
   * @param value the value to set.
   */
  public void setHealthCoverageTransferEffectiveDates(com.uhc.schema.model.eligibility.common.DateRangeType value) {
    this.healthCoverageTransferEffectiveDates = value;
  }

  /**
   * Gets the value of the 'individualIdentifier' field.
   * @return The unique key for an individual from a specific source (e.g. PART_NBR + CNSM_ID + SRC_CD + LGCY_SRC_ID)
   */
  public java.lang.CharSequence getIndividualIdentifier() {
    return individualIdentifier;
  }

  /**
   * Sets the value of the 'individualIdentifier' field.
   * The unique key for an individual from a specific source (e.g. PART_NBR + CNSM_ID + SRC_CD + LGCY_SRC_ID)
   * @param value the value to set.
   */
  public void setIndividualIdentifier(java.lang.CharSequence value) {
    this.individualIdentifier = value;
  }

  /**
   * Gets the value of the 'individualRelationship' field.
   * @return The value of the 'individualRelationship' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.IndividualRelationship> getIndividualRelationship() {
    return individualRelationship;
  }

  /**
   * Sets the value of the 'individualRelationship' field.
   * @param value the value to set.
   */
  public void setIndividualRelationship(java.util.List<com.uhc.schema.model.eligibility.individual.IndividualRelationship> value) {
    this.individualRelationship = value;
  }

  /**
   * Gets the value of the 'labInfos' field.
   * @return The value of the 'labInfos' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.LabInfo> getLabInfos() {
    return labInfos;
  }

  /**
   * Sets the value of the 'labInfos' field.
   * @param value the value to set.
   */
  public void setLabInfos(java.util.List<com.uhc.schema.model.eligibility.individual.LabInfo> value) {
    this.labInfos = value;
  }

  /**
   * Gets the value of the 'lastUpdated' field.
   * @return The value of the 'lastUpdated' field.
   */
  public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
    return lastUpdated;
  }

  /**
   * Sets the value of the 'lastUpdated' field.
   * @param value the value to set.
   */
  public void setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
    this.lastUpdated = value;
  }

  /**
   * Gets the value of the 'legacyAttributes' field.
   * @return The value of the 'legacyAttributes' field.
   */
  public com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes getLegacyAttributes() {
    return legacyAttributes;
  }

  /**
   * Sets the value of the 'legacyAttributes' field.
   * @param value the value to set.
   */
  public void setLegacyAttributes(com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes value) {
    this.legacyAttributes = value;
  }

  /**
   * Gets the value of the 'lifeEvents' field.
   * @return The value of the 'lifeEvents' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.IndividualLifeEvent> getLifeEvents() {
    return lifeEvents;
  }

  /**
   * Sets the value of the 'lifeEvents' field.
   * @param value the value to set.
   */
  public void setLifeEvents(java.util.List<com.uhc.schema.model.eligibility.individual.IndividualLifeEvent> value) {
    this.lifeEvents = value;
  }

  /**
   * Gets the value of the 'lineOfBusiness' field.
   * @return The value of the 'lineOfBusiness' field.
   */
  public java.lang.CharSequence getLineOfBusiness() {
    return lineOfBusiness;
  }

  /**
   * Sets the value of the 'lineOfBusiness' field.
   * @param value the value to set.
   */
  public void setLineOfBusiness(java.lang.CharSequence value) {
    this.lineOfBusiness = value;
  }

  /**
   * Gets the value of the 'lowIncomeSubsidy' field.
   * @return The value of the 'lowIncomeSubsidy' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy> getLowIncomeSubsidy() {
    return lowIncomeSubsidy;
  }

  /**
   * Sets the value of the 'lowIncomeSubsidy' field.
   * @param value the value to set.
   */
  public void setLowIncomeSubsidy(java.util.List<com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy> value) {
    this.lowIncomeSubsidy = value;
  }

  /**
   * Gets the value of the 'marketingIndicator' field.
   * @return The value of the 'marketingIndicator' field.
   */
  public java.lang.CharSequence getMarketingIndicator() {
    return marketingIndicator;
  }

  /**
   * Sets the value of the 'marketingIndicator' field.
   * @param value the value to set.
   */
  public void setMarketingIndicator(java.lang.CharSequence value) {
    this.marketingIndicator = value;
  }

  /**
   * Gets the value of the 'marketingSourceCode' field.
   * @return The value of the 'marketingSourceCode' field.
   */
  public java.lang.CharSequence getMarketingSourceCode() {
    return marketingSourceCode;
  }

  /**
   * Sets the value of the 'marketingSourceCode' field.
   * @param value the value to set.
   */
  public void setMarketingSourceCode(java.lang.CharSequence value) {
    this.marketingSourceCode = value;
  }

  /**
   * Gets the value of the 'medicareAnocSegment' field.
   * @return The value of the 'medicareAnocSegment' field.
   */
  public java.lang.CharSequence getMedicareAnocSegment() {
    return medicareAnocSegment;
  }

  /**
   * Sets the value of the 'medicareAnocSegment' field.
   * @param value the value to set.
   */
  public void setMedicareAnocSegment(java.lang.CharSequence value) {
    this.medicareAnocSegment = value;
  }

  /**
   * Gets the value of the 'medicareEntitlement' field.
   * @return The value of the 'medicareEntitlement' field.
   */
  public com.uhc.schema.model.eligibility.individual.MedicareEntitlement getMedicareEntitlement() {
    return medicareEntitlement;
  }

  /**
   * Sets the value of the 'medicareEntitlement' field.
   * @param value the value to set.
   */
  public void setMedicareEntitlement(com.uhc.schema.model.eligibility.individual.MedicareEntitlement value) {
    this.medicareEntitlement = value;
  }

  /**
   * Gets the value of the 'medicareAndRetirementEmployers' field.
   * @return The value of the 'medicareAndRetirementEmployers' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementEmployer> getMedicareAndRetirementEmployers() {
    return medicareAndRetirementEmployers;
  }

  /**
   * Sets the value of the 'medicareAndRetirementEmployers' field.
   * @param value the value to set.
   */
  public void setMedicareAndRetirementEmployers(java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementEmployer> value) {
    this.medicareAndRetirementEmployers = value;
  }

  /**
   * Gets the value of the 'medicareAndRetirementHouseholdProfiles' field.
   * @return The value of the 'medicareAndRetirementHouseholdProfiles' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile> getMedicareAndRetirementHouseholdProfiles() {
    return medicareAndRetirementHouseholdProfiles;
  }

  /**
   * Sets the value of the 'medicareAndRetirementHouseholdProfiles' field.
   * @param value the value to set.
   */
  public void setMedicareAndRetirementHouseholdProfiles(java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile> value) {
    this.medicareAndRetirementHouseholdProfiles = value;
  }

  /**
   * Gets the value of the 'medicareAndRetirementIndividualProfiles' field.
   * @return The value of the 'medicareAndRetirementIndividualProfiles' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile> getMedicareAndRetirementIndividualProfiles() {
    return medicareAndRetirementIndividualProfiles;
  }

  /**
   * Sets the value of the 'medicareAndRetirementIndividualProfiles' field.
   * @param value the value to set.
   */
  public void setMedicareAndRetirementIndividualProfiles(java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile> value) {
    this.medicareAndRetirementIndividualProfiles = value;
  }

  /**
   * Gets the value of the 'medicareAndRetirementLineOfBusiness' field.
   * @return The value of the 'medicareAndRetirementLineOfBusiness' field.
   */
  public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness getMedicareAndRetirementLineOfBusiness() {
    return medicareAndRetirementLineOfBusiness;
  }

  /**
   * Sets the value of the 'medicareAndRetirementLineOfBusiness' field.
   * @param value the value to set.
   */
  public void setMedicareAndRetirementLineOfBusiness(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness value) {
    this.medicareAndRetirementLineOfBusiness = value;
  }

  /**
   * Gets the value of the 'onshoreOnlyIndicator' field.
   * @return The value of the 'onshoreOnlyIndicator' field.
   */
  public java.lang.CharSequence getOnshoreOnlyIndicator() {
    return onshoreOnlyIndicator;
  }

  /**
   * Sets the value of the 'onshoreOnlyIndicator' field.
   * @param value the value to set.
   */
  public void setOnshoreOnlyIndicator(java.lang.CharSequence value) {
    this.onshoreOnlyIndicator = value;
  }

  /**
   * Gets the value of the 'organizationIdentifier' field.
   * @return The value of the 'organizationIdentifier' field.
   */
  public java.lang.CharSequence getOrganizationIdentifier() {
    return organizationIdentifier;
  }

  /**
   * Sets the value of the 'organizationIdentifier' field.
   * @param value the value to set.
   */
  public void setOrganizationIdentifier(java.lang.CharSequence value) {
    this.organizationIdentifier = value;
  }

  /**
   * Gets the value of the 'organizationType' field.
   * @return The value of the 'organizationType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getOrganizationType() {
    return organizationType;
  }

  /**
   * Sets the value of the 'organizationType' field.
   * @param value the value to set.
   */
  public void setOrganizationType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.organizationType = value;
  }

  /**
   * Gets the value of the 'outOfAreaIndicator' field.
   * @return The value of the 'outOfAreaIndicator' field.
   */
  public java.lang.CharSequence getOutOfAreaIndicator() {
    return outOfAreaIndicator;
  }

  /**
   * Sets the value of the 'outOfAreaIndicator' field.
   * @param value the value to set.
   */
  public void setOutOfAreaIndicator(java.lang.CharSequence value) {
    this.outOfAreaIndicator = value;
  }

  /**
   * Gets the value of the 'outOfAreaDisenrollmentDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getOutOfAreaDisenrollmentDate() {
    return outOfAreaDisenrollmentDate;
  }

  /**
   * Sets the value of the 'outOfAreaDisenrollmentDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setOutOfAreaDisenrollmentDate(java.lang.CharSequence value) {
    this.outOfAreaDisenrollmentDate = value;
  }

  /**
   * Gets the value of the 'personName' field.
   * @return The value of the 'personName' field.
   */
  public com.uhc.schema.model.eligibility.individual.PersonName getPersonName() {
    return personName;
  }

  /**
   * Sets the value of the 'personName' field.
   * @param value the value to set.
   */
  public void setPersonName(com.uhc.schema.model.eligibility.individual.PersonName value) {
    this.personName = value;
  }

  /**
   * Gets the value of the 'physicalAttributes' field.
   * @return The value of the 'physicalAttributes' field.
   */
  public com.uhc.schema.model.eligibility.individual.PhysicalAttributes getPhysicalAttributes() {
    return physicalAttributes;
  }

  /**
   * Sets the value of the 'physicalAttributes' field.
   * @param value the value to set.
   */
  public void setPhysicalAttributes(com.uhc.schema.model.eligibility.individual.PhysicalAttributes value) {
    this.physicalAttributes = value;
  }

  /**
   * Gets the value of the 'policyAmounts' field.
   * @return The value of the 'policyAmounts' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.PolicyAmount> getPolicyAmounts() {
    return policyAmounts;
  }

  /**
   * Sets the value of the 'policyAmounts' field.
   * @param value the value to set.
   */
  public void setPolicyAmounts(java.util.List<com.uhc.schema.model.eligibility.individual.PolicyAmount> value) {
    this.policyAmounts = value;
  }

  /**
   * Gets the value of the 'postalAddresses' field.
   * @return The value of the 'postalAddresses' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.PostalAddress> getPostalAddresses() {
    return postalAddresses;
  }

  /**
   * Sets the value of the 'postalAddresses' field.
   * @param value the value to set.
   */
  public void setPostalAddresses(java.util.List<com.uhc.schema.model.eligibility.individual.PostalAddress> value) {
    this.postalAddresses = value;
  }

  /**
   * Gets the value of the 'primeDependentCode' field.
   * @return The value of the 'primeDependentCode' field.
   */
  public java.lang.CharSequence getPrimeDependentCode() {
    return primeDependentCode;
  }

  /**
   * Sets the value of the 'primeDependentCode' field.
   * @param value the value to set.
   */
  public void setPrimeDependentCode(java.lang.CharSequence value) {
    this.primeDependentCode = value;
  }

  /**
   * Gets the value of the 'priorMemberFacingIds' field.
   * @return The value of the 'priorMemberFacingIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.PriorMemberFacingIds> getPriorMemberFacingIds() {
    return priorMemberFacingIds;
  }

  /**
   * Sets the value of the 'priorMemberFacingIds' field.
   * @param value the value to set.
   */
  public void setPriorMemberFacingIds(java.util.List<com.uhc.schema.model.eligibility.individual.PriorMemberFacingIds> value) {
    this.priorMemberFacingIds = value;
  }

  /**
   * Gets the value of the 'qmcsoIndicator' field.
   * @return The value of the 'qmcsoIndicator' field.
   */
  public java.lang.Boolean getQmcsoIndicator() {
    return qmcsoIndicator;
  }

  /**
   * Sets the value of the 'qmcsoIndicator' field.
   * @param value the value to set.
   */
  public void setQmcsoIndicator(java.lang.Boolean value) {
    this.qmcsoIndicator = value;
  }

  /**
   * Gets the value of the 'researchAuthorizationIndicator' field.
   * @return The value of the 'researchAuthorizationIndicator' field.
   */
  public java.lang.Boolean getResearchAuthorizationIndicator() {
    return researchAuthorizationIndicator;
  }

  /**
   * Sets the value of the 'researchAuthorizationIndicator' field.
   * @param value the value to set.
   */
  public void setResearchAuthorizationIndicator(java.lang.Boolean value) {
    this.researchAuthorizationIndicator = value;
  }

  /**
   * Gets the value of the 'security' field.
   * @return The value of the 'security' field.
   */
  public com.uhc.schema.model.eligibility.common.Security getSecurity() {
    return security;
  }

  /**
   * Sets the value of the 'security' field.
   * @param value the value to set.
   */
  public void setSecurity(com.uhc.schema.model.eligibility.common.Security value) {
    this.security = value;
  }

  /**
   * Gets the value of the 'socialSecurityNumber' field.
   * @return (DEPRECATED - use demographicInfo.socialSecurityNumber instead).  The primary SSN for the individual.  Additional SSNs may exist as alternateIdentifier values.
   */
  public java.lang.CharSequence getSocialSecurityNumber() {
    return socialSecurityNumber;
  }

  /**
   * Sets the value of the 'socialSecurityNumber' field.
   * (DEPRECATED - use demographicInfo.socialSecurityNumber instead).  The primary SSN for the individual.  Additional SSNs may exist as alternateIdentifier values.
   * @param value the value to set.
   */
  public void setSocialSecurityNumber(java.lang.CharSequence value) {
    this.socialSecurityNumber = value;
  }

  /**
   * Gets the value of the 'sourceSystemAttributes' field.
   * @return The value of the 'sourceSystemAttributes' field.
   */
  public com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes getSourceSystemAttributes() {
    return sourceSystemAttributes;
  }

  /**
   * Sets the value of the 'sourceSystemAttributes' field.
   * @param value the value to set.
   */
  public void setSourceSystemAttributes(com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes value) {
    this.sourceSystemAttributes = value;
  }

  /**
   * Gets the value of the 'sourceSystemCode' field.
   * @return The value of the 'sourceSystemCode' field.
   */
  public java.lang.CharSequence getSourceSystemCode() {
    return sourceSystemCode;
  }

  /**
   * Sets the value of the 'sourceSystemCode' field.
   * @param value the value to set.
   */
  public void setSourceSystemCode(java.lang.CharSequence value) {
    this.sourceSystemCode = value;
  }

  /**
   * Gets the value of the 'substanceAbuseIndicator' field.
   * @return Indicates if the individual has abused alcohol or drugs in any form.
   */
  public java.lang.CharSequence getSubstanceAbuseIndicator() {
    return substanceAbuseIndicator;
  }

  /**
   * Sets the value of the 'substanceAbuseIndicator' field.
   * Indicates if the individual has abused alcohol or drugs in any form.
   * @param value the value to set.
   */
  public void setSubstanceAbuseIndicator(java.lang.CharSequence value) {
    this.substanceAbuseIndicator = value;
  }

  /**
   * Gets the value of the 'taxIdStatuses' field.
   * @return The value of the 'taxIdStatuses' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.TaxIdStatus> getTaxIdStatuses() {
    return taxIdStatuses;
  }

  /**
   * Sets the value of the 'taxIdStatuses' field.
   * @param value the value to set.
   */
  public void setTaxIdStatuses(java.util.List<com.uhc.schema.model.eligibility.individual.TaxIdStatus> value) {
    this.taxIdStatuses = value;
  }

  /**
   * Gets the value of the 'taxpayerIdentificationNumber' field.
   * @return Individual's Taxpayer Identification Number.
   */
  public java.lang.CharSequence getTaxpayerIdentificationNumber() {
    return taxpayerIdentificationNumber;
  }

  /**
   * Sets the value of the 'taxpayerIdentificationNumber' field.
   * Individual's Taxpayer Identification Number.
   * @param value the value to set.
   */
  public void setTaxpayerIdentificationNumber(java.lang.CharSequence value) {
    this.taxpayerIdentificationNumber = value;
  }

  /**
   * Gets the value of the 'telephoneNumbers' field.
   * @return The value of the 'telephoneNumbers' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.TelephoneNumber> getTelephoneNumbers() {
    return telephoneNumbers;
  }

  /**
   * Sets the value of the 'telephoneNumbers' field.
   * @param value the value to set.
   */
  public void setTelephoneNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.TelephoneNumber> value) {
    this.telephoneNumbers = value;
  }

  /**
   * Gets the value of the 'tobaccoUseIndicator' field.
   * @return The value of the 'tobaccoUseIndicator' field.
   */
  public java.lang.Boolean getTobaccoUseIndicator() {
    return tobaccoUseIndicator;
  }

  /**
   * Sets the value of the 'tobaccoUseIndicator' field.
   * @param value the value to set.
   */
  public void setTobaccoUseIndicator(java.lang.Boolean value) {
    this.tobaccoUseIndicator = value;
  }

  /**
   * Gets the value of the 'tobaccoUseType' field.
   * @return Specifies the tobacco type in use by the individual.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getTobaccoUseType() {
    return tobaccoUseType;
  }

  /**
   * Sets the value of the 'tobaccoUseType' field.
   * Specifies the tobacco type in use by the individual.
   * @param value the value to set.
   */
  public void setTobaccoUseType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.tobaccoUseType = value;
  }

  /**
   * Gets the value of the 'vipIndicator' field.
   * @return The value of the 'vipIndicator' field.
   */
  public java.lang.Boolean getVipIndicator() {
    return vipIndicator;
  }

  /**
   * Sets the value of the 'vipIndicator' field.
   * @param value the value to set.
   */
  public void setVipIndicator(java.lang.Boolean value) {
    this.vipIndicator = value;
  }

  /**
   * Creates a new SourceIndividual RecordBuilder.
   * @return A new SourceIndividual RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.SourceIndividual.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.SourceIndividual.Builder();
  }

  /**
   * Creates a new SourceIndividual RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SourceIndividual RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.SourceIndividual.Builder newBuilder(com.uhc.schema.model.eligibility.SourceIndividual.Builder other) {
    return new com.uhc.schema.model.eligibility.SourceIndividual.Builder(other);
  }

  /**
   * Creates a new SourceIndividual RecordBuilder by copying an existing SourceIndividual instance.
   * @param other The existing instance to copy.
   * @return A new SourceIndividual RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.SourceIndividual.Builder newBuilder(com.uhc.schema.model.eligibility.SourceIndividual other) {
    return new com.uhc.schema.model.eligibility.SourceIndividual.Builder(other);
  }

  /**
   * RecordBuilder for SourceIndividual instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SourceIndividual>
    implements org.apache.avro.data.RecordBuilder<SourceIndividual> {

    private boolean active;
    private com.uhc.schema.model.eligibility.individual.AlternateIdentifiers alternateIdentifiers;
    private com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder alternateIdentifiersBuilder;
    private java.lang.CharSequence atOccupationTypeCode;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AuthoritativeRepresentative> authoritativeRepresentatives;
    private java.lang.CharSequence birthSequenceNumber;
    private com.uhc.schema.model.eligibility.common.DescriptionType citizenshipStatusType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder citizenshipStatusTypeBuilder;
    private java.util.List<com.uhc.schema.model.eligibility.individual.CustomerDefined> customerDefineds;
    private com.uhc.schema.model.eligibility.individual.DemographicInfo demographicInfo;
    private com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder demographicInfoBuilder;
    private java.util.List<com.uhc.schema.model.eligibility.individual.Disability> disabilities;
    private java.util.List<com.uhc.schema.model.eligibility.individual.ElectronicAddress> electronicAddresses;
    private com.uhc.schema.model.eligibility.individual.EligibilityAttributes eligibilityAttributes;
    private com.uhc.schema.model.eligibility.individual.EligibilityAttributes.Builder eligibilityAttributesBuilder;
    private com.uhc.schema.model.eligibility.individual.Employment employment;
    private com.uhc.schema.model.eligibility.individual.Employment.Builder employmentBuilder;
    private java.lang.CharSequence enrolleeSourceCode;
    private java.lang.CharSequence enrolleeSourceId;
    private java.lang.CharSequence exPatriateIndicator;
    private java.lang.CharSequence exSpouseSubscriberId;
    private java.lang.CharSequence exSpouseTypeCode;
    private java.lang.CharSequence hccIndicator;
    private com.uhc.schema.model.eligibility.common.DateRangeType healthCoverageTransferEffectiveDates;
    private com.uhc.schema.model.eligibility.common.DateRangeType.Builder healthCoverageTransferEffectiveDatesBuilder;
    /** The unique key for an individual from a specific source (e.g. PART_NBR + CNSM_ID + SRC_CD + LGCY_SRC_ID) */
    private java.lang.CharSequence individualIdentifier;
    private java.util.List<com.uhc.schema.model.eligibility.individual.IndividualRelationship> individualRelationship;
    private java.util.List<com.uhc.schema.model.eligibility.individual.LabInfo> labInfos;
    private com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
    private com.uhc.schema.model.eligibility.common.LastUpdated.Builder lastUpdatedBuilder;
    private com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes legacyAttributes;
    private com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes.Builder legacyAttributesBuilder;
    private java.util.List<com.uhc.schema.model.eligibility.individual.IndividualLifeEvent> lifeEvents;
    private java.lang.CharSequence lineOfBusiness;
    private java.util.List<com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy> lowIncomeSubsidy;
    private java.lang.CharSequence marketingIndicator;
    private java.lang.CharSequence marketingSourceCode;
    private java.lang.CharSequence medicareAnocSegment;
    private com.uhc.schema.model.eligibility.individual.MedicareEntitlement medicareEntitlement;
    private com.uhc.schema.model.eligibility.individual.MedicareEntitlement.Builder medicareEntitlementBuilder;
    private java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementEmployer> medicareAndRetirementEmployers;
    private java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile> medicareAndRetirementHouseholdProfiles;
    private java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile> medicareAndRetirementIndividualProfiles;
    private com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness medicareAndRetirementLineOfBusiness;
    private com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness.Builder medicareAndRetirementLineOfBusinessBuilder;
    private java.lang.CharSequence onshoreOnlyIndicator;
    private java.lang.CharSequence organizationIdentifier;
    private com.uhc.schema.model.eligibility.common.DescriptionType organizationType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder organizationTypeBuilder;
    private java.lang.CharSequence outOfAreaIndicator;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence outOfAreaDisenrollmentDate;
    private com.uhc.schema.model.eligibility.individual.PersonName personName;
    private com.uhc.schema.model.eligibility.individual.PersonName.Builder personNameBuilder;
    private com.uhc.schema.model.eligibility.individual.PhysicalAttributes physicalAttributes;
    private com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder physicalAttributesBuilder;
    private java.util.List<com.uhc.schema.model.eligibility.individual.PolicyAmount> policyAmounts;
    private java.util.List<com.uhc.schema.model.eligibility.individual.PostalAddress> postalAddresses;
    private java.lang.CharSequence primeDependentCode;
    private java.util.List<com.uhc.schema.model.eligibility.individual.PriorMemberFacingIds> priorMemberFacingIds;
    private boolean qmcsoIndicator;
    private boolean researchAuthorizationIndicator;
    private com.uhc.schema.model.eligibility.common.Security security;
    private com.uhc.schema.model.eligibility.common.Security.Builder securityBuilder;
    /** (DEPRECATED - use demographicInfo.socialSecurityNumber instead).  The primary SSN for the individual.  Additional SSNs may exist as alternateIdentifier values. */
    private java.lang.CharSequence socialSecurityNumber;
    private com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes sourceSystemAttributes;
    private com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes.Builder sourceSystemAttributesBuilder;
    private java.lang.CharSequence sourceSystemCode;
    /** Indicates if the individual has abused alcohol or drugs in any form. */
    private java.lang.CharSequence substanceAbuseIndicator;
    private java.util.List<com.uhc.schema.model.eligibility.individual.TaxIdStatus> taxIdStatuses;
    /** Individual's Taxpayer Identification Number. */
    private java.lang.CharSequence taxpayerIdentificationNumber;
    private java.util.List<com.uhc.schema.model.eligibility.individual.TelephoneNumber> telephoneNumbers;
    private boolean tobaccoUseIndicator;
    /** Specifies the tobacco type in use by the individual. */
    private com.uhc.schema.model.eligibility.common.DescriptionType tobaccoUseType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder tobaccoUseTypeBuilder;
    private boolean vipIndicator;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.SourceIndividual.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.alternateIdentifiers)) {
        this.alternateIdentifiers = data().deepCopy(fields()[1].schema(), other.alternateIdentifiers);
        fieldSetFlags()[1] = true;
      }
      if (other.hasAlternateIdentifiersBuilder()) {
        this.alternateIdentifiersBuilder = com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.newBuilder(other.getAlternateIdentifiersBuilder());
      }
      if (isValidValue(fields()[2], other.atOccupationTypeCode)) {
        this.atOccupationTypeCode = data().deepCopy(fields()[2].schema(), other.atOccupationTypeCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.authoritativeRepresentatives)) {
        this.authoritativeRepresentatives = data().deepCopy(fields()[3].schema(), other.authoritativeRepresentatives);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.birthSequenceNumber)) {
        this.birthSequenceNumber = data().deepCopy(fields()[4].schema(), other.birthSequenceNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.citizenshipStatusType)) {
        this.citizenshipStatusType = data().deepCopy(fields()[5].schema(), other.citizenshipStatusType);
        fieldSetFlags()[5] = true;
      }
      if (other.hasCitizenshipStatusTypeBuilder()) {
        this.citizenshipStatusTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getCitizenshipStatusTypeBuilder());
      }
      if (isValidValue(fields()[6], other.customerDefineds)) {
        this.customerDefineds = data().deepCopy(fields()[6].schema(), other.customerDefineds);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.demographicInfo)) {
        this.demographicInfo = data().deepCopy(fields()[7].schema(), other.demographicInfo);
        fieldSetFlags()[7] = true;
      }
      if (other.hasDemographicInfoBuilder()) {
        this.demographicInfoBuilder = com.uhc.schema.model.eligibility.individual.DemographicInfo.newBuilder(other.getDemographicInfoBuilder());
      }
      if (isValidValue(fields()[8], other.disabilities)) {
        this.disabilities = data().deepCopy(fields()[8].schema(), other.disabilities);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.electronicAddresses)) {
        this.electronicAddresses = data().deepCopy(fields()[9].schema(), other.electronicAddresses);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eligibilityAttributes)) {
        this.eligibilityAttributes = data().deepCopy(fields()[10].schema(), other.eligibilityAttributes);
        fieldSetFlags()[10] = true;
      }
      if (other.hasEligibilityAttributesBuilder()) {
        this.eligibilityAttributesBuilder = com.uhc.schema.model.eligibility.individual.EligibilityAttributes.newBuilder(other.getEligibilityAttributesBuilder());
      }
      if (isValidValue(fields()[11], other.employment)) {
        this.employment = data().deepCopy(fields()[11].schema(), other.employment);
        fieldSetFlags()[11] = true;
      }
      if (other.hasEmploymentBuilder()) {
        this.employmentBuilder = com.uhc.schema.model.eligibility.individual.Employment.newBuilder(other.getEmploymentBuilder());
      }
      if (isValidValue(fields()[12], other.enrolleeSourceCode)) {
        this.enrolleeSourceCode = data().deepCopy(fields()[12].schema(), other.enrolleeSourceCode);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.enrolleeSourceId)) {
        this.enrolleeSourceId = data().deepCopy(fields()[13].schema(), other.enrolleeSourceId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.exPatriateIndicator)) {
        this.exPatriateIndicator = data().deepCopy(fields()[14].schema(), other.exPatriateIndicator);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.exSpouseSubscriberId)) {
        this.exSpouseSubscriberId = data().deepCopy(fields()[15].schema(), other.exSpouseSubscriberId);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.exSpouseTypeCode)) {
        this.exSpouseTypeCode = data().deepCopy(fields()[16].schema(), other.exSpouseTypeCode);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.hccIndicator)) {
        this.hccIndicator = data().deepCopy(fields()[17].schema(), other.hccIndicator);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.healthCoverageTransferEffectiveDates)) {
        this.healthCoverageTransferEffectiveDates = data().deepCopy(fields()[18].schema(), other.healthCoverageTransferEffectiveDates);
        fieldSetFlags()[18] = true;
      }
      if (other.hasHealthCoverageTransferEffectiveDatesBuilder()) {
        this.healthCoverageTransferEffectiveDatesBuilder = com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder(other.getHealthCoverageTransferEffectiveDatesBuilder());
      }
      if (isValidValue(fields()[19], other.individualIdentifier)) {
        this.individualIdentifier = data().deepCopy(fields()[19].schema(), other.individualIdentifier);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.individualRelationship)) {
        this.individualRelationship = data().deepCopy(fields()[20].schema(), other.individualRelationship);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.labInfos)) {
        this.labInfos = data().deepCopy(fields()[21].schema(), other.labInfos);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[22].schema(), other.lastUpdated);
        fieldSetFlags()[22] = true;
      }
      if (other.hasLastUpdatedBuilder()) {
        this.lastUpdatedBuilder = com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(other.getLastUpdatedBuilder());
      }
      if (isValidValue(fields()[23], other.legacyAttributes)) {
        this.legacyAttributes = data().deepCopy(fields()[23].schema(), other.legacyAttributes);
        fieldSetFlags()[23] = true;
      }
      if (other.hasLegacyAttributesBuilder()) {
        this.legacyAttributesBuilder = com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes.newBuilder(other.getLegacyAttributesBuilder());
      }
      if (isValidValue(fields()[24], other.lifeEvents)) {
        this.lifeEvents = data().deepCopy(fields()[24].schema(), other.lifeEvents);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.lineOfBusiness)) {
        this.lineOfBusiness = data().deepCopy(fields()[25].schema(), other.lineOfBusiness);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.lowIncomeSubsidy)) {
        this.lowIncomeSubsidy = data().deepCopy(fields()[26].schema(), other.lowIncomeSubsidy);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.marketingIndicator)) {
        this.marketingIndicator = data().deepCopy(fields()[27].schema(), other.marketingIndicator);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.marketingSourceCode)) {
        this.marketingSourceCode = data().deepCopy(fields()[28].schema(), other.marketingSourceCode);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.medicareAnocSegment)) {
        this.medicareAnocSegment = data().deepCopy(fields()[29].schema(), other.medicareAnocSegment);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.medicareEntitlement)) {
        this.medicareEntitlement = data().deepCopy(fields()[30].schema(), other.medicareEntitlement);
        fieldSetFlags()[30] = true;
      }
      if (other.hasMedicareEntitlementBuilder()) {
        this.medicareEntitlementBuilder = com.uhc.schema.model.eligibility.individual.MedicareEntitlement.newBuilder(other.getMedicareEntitlementBuilder());
      }
      if (isValidValue(fields()[31], other.medicareAndRetirementEmployers)) {
        this.medicareAndRetirementEmployers = data().deepCopy(fields()[31].schema(), other.medicareAndRetirementEmployers);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.medicareAndRetirementHouseholdProfiles)) {
        this.medicareAndRetirementHouseholdProfiles = data().deepCopy(fields()[32].schema(), other.medicareAndRetirementHouseholdProfiles);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.medicareAndRetirementIndividualProfiles)) {
        this.medicareAndRetirementIndividualProfiles = data().deepCopy(fields()[33].schema(), other.medicareAndRetirementIndividualProfiles);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.medicareAndRetirementLineOfBusiness)) {
        this.medicareAndRetirementLineOfBusiness = data().deepCopy(fields()[34].schema(), other.medicareAndRetirementLineOfBusiness);
        fieldSetFlags()[34] = true;
      }
      if (other.hasMedicareAndRetirementLineOfBusinessBuilder()) {
        this.medicareAndRetirementLineOfBusinessBuilder = com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness.newBuilder(other.getMedicareAndRetirementLineOfBusinessBuilder());
      }
      if (isValidValue(fields()[35], other.onshoreOnlyIndicator)) {
        this.onshoreOnlyIndicator = data().deepCopy(fields()[35].schema(), other.onshoreOnlyIndicator);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.organizationIdentifier)) {
        this.organizationIdentifier = data().deepCopy(fields()[36].schema(), other.organizationIdentifier);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.organizationType)) {
        this.organizationType = data().deepCopy(fields()[37].schema(), other.organizationType);
        fieldSetFlags()[37] = true;
      }
      if (other.hasOrganizationTypeBuilder()) {
        this.organizationTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getOrganizationTypeBuilder());
      }
      if (isValidValue(fields()[38], other.outOfAreaIndicator)) {
        this.outOfAreaIndicator = data().deepCopy(fields()[38].schema(), other.outOfAreaIndicator);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.outOfAreaDisenrollmentDate)) {
        this.outOfAreaDisenrollmentDate = data().deepCopy(fields()[39].schema(), other.outOfAreaDisenrollmentDate);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.personName)) {
        this.personName = data().deepCopy(fields()[40].schema(), other.personName);
        fieldSetFlags()[40] = true;
      }
      if (other.hasPersonNameBuilder()) {
        this.personNameBuilder = com.uhc.schema.model.eligibility.individual.PersonName.newBuilder(other.getPersonNameBuilder());
      }
      if (isValidValue(fields()[41], other.physicalAttributes)) {
        this.physicalAttributes = data().deepCopy(fields()[41].schema(), other.physicalAttributes);
        fieldSetFlags()[41] = true;
      }
      if (other.hasPhysicalAttributesBuilder()) {
        this.physicalAttributesBuilder = com.uhc.schema.model.eligibility.individual.PhysicalAttributes.newBuilder(other.getPhysicalAttributesBuilder());
      }
      if (isValidValue(fields()[42], other.policyAmounts)) {
        this.policyAmounts = data().deepCopy(fields()[42].schema(), other.policyAmounts);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.postalAddresses)) {
        this.postalAddresses = data().deepCopy(fields()[43].schema(), other.postalAddresses);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.primeDependentCode)) {
        this.primeDependentCode = data().deepCopy(fields()[44].schema(), other.primeDependentCode);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.priorMemberFacingIds)) {
        this.priorMemberFacingIds = data().deepCopy(fields()[45].schema(), other.priorMemberFacingIds);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.qmcsoIndicator)) {
        this.qmcsoIndicator = data().deepCopy(fields()[46].schema(), other.qmcsoIndicator);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.researchAuthorizationIndicator)) {
        this.researchAuthorizationIndicator = data().deepCopy(fields()[47].schema(), other.researchAuthorizationIndicator);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.security)) {
        this.security = data().deepCopy(fields()[48].schema(), other.security);
        fieldSetFlags()[48] = true;
      }
      if (other.hasSecurityBuilder()) {
        this.securityBuilder = com.uhc.schema.model.eligibility.common.Security.newBuilder(other.getSecurityBuilder());
      }
      if (isValidValue(fields()[49], other.socialSecurityNumber)) {
        this.socialSecurityNumber = data().deepCopy(fields()[49].schema(), other.socialSecurityNumber);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.sourceSystemAttributes)) {
        this.sourceSystemAttributes = data().deepCopy(fields()[50].schema(), other.sourceSystemAttributes);
        fieldSetFlags()[50] = true;
      }
      if (other.hasSourceSystemAttributesBuilder()) {
        this.sourceSystemAttributesBuilder = com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes.newBuilder(other.getSourceSystemAttributesBuilder());
      }
      if (isValidValue(fields()[51], other.sourceSystemCode)) {
        this.sourceSystemCode = data().deepCopy(fields()[51].schema(), other.sourceSystemCode);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.substanceAbuseIndicator)) {
        this.substanceAbuseIndicator = data().deepCopy(fields()[52].schema(), other.substanceAbuseIndicator);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.taxIdStatuses)) {
        this.taxIdStatuses = data().deepCopy(fields()[53].schema(), other.taxIdStatuses);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.taxpayerIdentificationNumber)) {
        this.taxpayerIdentificationNumber = data().deepCopy(fields()[54].schema(), other.taxpayerIdentificationNumber);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.telephoneNumbers)) {
        this.telephoneNumbers = data().deepCopy(fields()[55].schema(), other.telephoneNumbers);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.tobaccoUseIndicator)) {
        this.tobaccoUseIndicator = data().deepCopy(fields()[56].schema(), other.tobaccoUseIndicator);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.tobaccoUseType)) {
        this.tobaccoUseType = data().deepCopy(fields()[57].schema(), other.tobaccoUseType);
        fieldSetFlags()[57] = true;
      }
      if (other.hasTobaccoUseTypeBuilder()) {
        this.tobaccoUseTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getTobaccoUseTypeBuilder());
      }
      if (isValidValue(fields()[58], other.vipIndicator)) {
        this.vipIndicator = data().deepCopy(fields()[58].schema(), other.vipIndicator);
        fieldSetFlags()[58] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SourceIndividual instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.SourceIndividual other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.alternateIdentifiers)) {
        this.alternateIdentifiers = data().deepCopy(fields()[1].schema(), other.alternateIdentifiers);
        fieldSetFlags()[1] = true;
      }
      this.alternateIdentifiersBuilder = null;
      if (isValidValue(fields()[2], other.atOccupationTypeCode)) {
        this.atOccupationTypeCode = data().deepCopy(fields()[2].schema(), other.atOccupationTypeCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.authoritativeRepresentatives)) {
        this.authoritativeRepresentatives = data().deepCopy(fields()[3].schema(), other.authoritativeRepresentatives);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.birthSequenceNumber)) {
        this.birthSequenceNumber = data().deepCopy(fields()[4].schema(), other.birthSequenceNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.citizenshipStatusType)) {
        this.citizenshipStatusType = data().deepCopy(fields()[5].schema(), other.citizenshipStatusType);
        fieldSetFlags()[5] = true;
      }
      this.citizenshipStatusTypeBuilder = null;
      if (isValidValue(fields()[6], other.customerDefineds)) {
        this.customerDefineds = data().deepCopy(fields()[6].schema(), other.customerDefineds);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.demographicInfo)) {
        this.demographicInfo = data().deepCopy(fields()[7].schema(), other.demographicInfo);
        fieldSetFlags()[7] = true;
      }
      this.demographicInfoBuilder = null;
      if (isValidValue(fields()[8], other.disabilities)) {
        this.disabilities = data().deepCopy(fields()[8].schema(), other.disabilities);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.electronicAddresses)) {
        this.electronicAddresses = data().deepCopy(fields()[9].schema(), other.electronicAddresses);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eligibilityAttributes)) {
        this.eligibilityAttributes = data().deepCopy(fields()[10].schema(), other.eligibilityAttributes);
        fieldSetFlags()[10] = true;
      }
      this.eligibilityAttributesBuilder = null;
      if (isValidValue(fields()[11], other.employment)) {
        this.employment = data().deepCopy(fields()[11].schema(), other.employment);
        fieldSetFlags()[11] = true;
      }
      this.employmentBuilder = null;
      if (isValidValue(fields()[12], other.enrolleeSourceCode)) {
        this.enrolleeSourceCode = data().deepCopy(fields()[12].schema(), other.enrolleeSourceCode);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.enrolleeSourceId)) {
        this.enrolleeSourceId = data().deepCopy(fields()[13].schema(), other.enrolleeSourceId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.exPatriateIndicator)) {
        this.exPatriateIndicator = data().deepCopy(fields()[14].schema(), other.exPatriateIndicator);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.exSpouseSubscriberId)) {
        this.exSpouseSubscriberId = data().deepCopy(fields()[15].schema(), other.exSpouseSubscriberId);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.exSpouseTypeCode)) {
        this.exSpouseTypeCode = data().deepCopy(fields()[16].schema(), other.exSpouseTypeCode);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.hccIndicator)) {
        this.hccIndicator = data().deepCopy(fields()[17].schema(), other.hccIndicator);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.healthCoverageTransferEffectiveDates)) {
        this.healthCoverageTransferEffectiveDates = data().deepCopy(fields()[18].schema(), other.healthCoverageTransferEffectiveDates);
        fieldSetFlags()[18] = true;
      }
      this.healthCoverageTransferEffectiveDatesBuilder = null;
      if (isValidValue(fields()[19], other.individualIdentifier)) {
        this.individualIdentifier = data().deepCopy(fields()[19].schema(), other.individualIdentifier);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.individualRelationship)) {
        this.individualRelationship = data().deepCopy(fields()[20].schema(), other.individualRelationship);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.labInfos)) {
        this.labInfos = data().deepCopy(fields()[21].schema(), other.labInfos);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[22].schema(), other.lastUpdated);
        fieldSetFlags()[22] = true;
      }
      this.lastUpdatedBuilder = null;
      if (isValidValue(fields()[23], other.legacyAttributes)) {
        this.legacyAttributes = data().deepCopy(fields()[23].schema(), other.legacyAttributes);
        fieldSetFlags()[23] = true;
      }
      this.legacyAttributesBuilder = null;
      if (isValidValue(fields()[24], other.lifeEvents)) {
        this.lifeEvents = data().deepCopy(fields()[24].schema(), other.lifeEvents);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.lineOfBusiness)) {
        this.lineOfBusiness = data().deepCopy(fields()[25].schema(), other.lineOfBusiness);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.lowIncomeSubsidy)) {
        this.lowIncomeSubsidy = data().deepCopy(fields()[26].schema(), other.lowIncomeSubsidy);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.marketingIndicator)) {
        this.marketingIndicator = data().deepCopy(fields()[27].schema(), other.marketingIndicator);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.marketingSourceCode)) {
        this.marketingSourceCode = data().deepCopy(fields()[28].schema(), other.marketingSourceCode);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.medicareAnocSegment)) {
        this.medicareAnocSegment = data().deepCopy(fields()[29].schema(), other.medicareAnocSegment);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.medicareEntitlement)) {
        this.medicareEntitlement = data().deepCopy(fields()[30].schema(), other.medicareEntitlement);
        fieldSetFlags()[30] = true;
      }
      this.medicareEntitlementBuilder = null;
      if (isValidValue(fields()[31], other.medicareAndRetirementEmployers)) {
        this.medicareAndRetirementEmployers = data().deepCopy(fields()[31].schema(), other.medicareAndRetirementEmployers);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.medicareAndRetirementHouseholdProfiles)) {
        this.medicareAndRetirementHouseholdProfiles = data().deepCopy(fields()[32].schema(), other.medicareAndRetirementHouseholdProfiles);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.medicareAndRetirementIndividualProfiles)) {
        this.medicareAndRetirementIndividualProfiles = data().deepCopy(fields()[33].schema(), other.medicareAndRetirementIndividualProfiles);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.medicareAndRetirementLineOfBusiness)) {
        this.medicareAndRetirementLineOfBusiness = data().deepCopy(fields()[34].schema(), other.medicareAndRetirementLineOfBusiness);
        fieldSetFlags()[34] = true;
      }
      this.medicareAndRetirementLineOfBusinessBuilder = null;
      if (isValidValue(fields()[35], other.onshoreOnlyIndicator)) {
        this.onshoreOnlyIndicator = data().deepCopy(fields()[35].schema(), other.onshoreOnlyIndicator);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.organizationIdentifier)) {
        this.organizationIdentifier = data().deepCopy(fields()[36].schema(), other.organizationIdentifier);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.organizationType)) {
        this.organizationType = data().deepCopy(fields()[37].schema(), other.organizationType);
        fieldSetFlags()[37] = true;
      }
      this.organizationTypeBuilder = null;
      if (isValidValue(fields()[38], other.outOfAreaIndicator)) {
        this.outOfAreaIndicator = data().deepCopy(fields()[38].schema(), other.outOfAreaIndicator);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.outOfAreaDisenrollmentDate)) {
        this.outOfAreaDisenrollmentDate = data().deepCopy(fields()[39].schema(), other.outOfAreaDisenrollmentDate);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.personName)) {
        this.personName = data().deepCopy(fields()[40].schema(), other.personName);
        fieldSetFlags()[40] = true;
      }
      this.personNameBuilder = null;
      if (isValidValue(fields()[41], other.physicalAttributes)) {
        this.physicalAttributes = data().deepCopy(fields()[41].schema(), other.physicalAttributes);
        fieldSetFlags()[41] = true;
      }
      this.physicalAttributesBuilder = null;
      if (isValidValue(fields()[42], other.policyAmounts)) {
        this.policyAmounts = data().deepCopy(fields()[42].schema(), other.policyAmounts);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.postalAddresses)) {
        this.postalAddresses = data().deepCopy(fields()[43].schema(), other.postalAddresses);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.primeDependentCode)) {
        this.primeDependentCode = data().deepCopy(fields()[44].schema(), other.primeDependentCode);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.priorMemberFacingIds)) {
        this.priorMemberFacingIds = data().deepCopy(fields()[45].schema(), other.priorMemberFacingIds);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.qmcsoIndicator)) {
        this.qmcsoIndicator = data().deepCopy(fields()[46].schema(), other.qmcsoIndicator);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.researchAuthorizationIndicator)) {
        this.researchAuthorizationIndicator = data().deepCopy(fields()[47].schema(), other.researchAuthorizationIndicator);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.security)) {
        this.security = data().deepCopy(fields()[48].schema(), other.security);
        fieldSetFlags()[48] = true;
      }
      this.securityBuilder = null;
      if (isValidValue(fields()[49], other.socialSecurityNumber)) {
        this.socialSecurityNumber = data().deepCopy(fields()[49].schema(), other.socialSecurityNumber);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.sourceSystemAttributes)) {
        this.sourceSystemAttributes = data().deepCopy(fields()[50].schema(), other.sourceSystemAttributes);
        fieldSetFlags()[50] = true;
      }
      this.sourceSystemAttributesBuilder = null;
      if (isValidValue(fields()[51], other.sourceSystemCode)) {
        this.sourceSystemCode = data().deepCopy(fields()[51].schema(), other.sourceSystemCode);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.substanceAbuseIndicator)) {
        this.substanceAbuseIndicator = data().deepCopy(fields()[52].schema(), other.substanceAbuseIndicator);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.taxIdStatuses)) {
        this.taxIdStatuses = data().deepCopy(fields()[53].schema(), other.taxIdStatuses);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.taxpayerIdentificationNumber)) {
        this.taxpayerIdentificationNumber = data().deepCopy(fields()[54].schema(), other.taxpayerIdentificationNumber);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.telephoneNumbers)) {
        this.telephoneNumbers = data().deepCopy(fields()[55].schema(), other.telephoneNumbers);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.tobaccoUseIndicator)) {
        this.tobaccoUseIndicator = data().deepCopy(fields()[56].schema(), other.tobaccoUseIndicator);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.tobaccoUseType)) {
        this.tobaccoUseType = data().deepCopy(fields()[57].schema(), other.tobaccoUseType);
        fieldSetFlags()[57] = true;
      }
      this.tobaccoUseTypeBuilder = null;
      if (isValidValue(fields()[58], other.vipIndicator)) {
        this.vipIndicator = data().deepCopy(fields()[58].schema(), other.vipIndicator);
        fieldSetFlags()[58] = true;
      }
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public java.lang.Boolean getActive() {
      return active;
    }

    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setActive(boolean value) {
      validate(fields()[0], value);
      this.active = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearActive() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'alternateIdentifiers' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers getAlternateIdentifiers() {
      return alternateIdentifiers;
    }

    /**
      * Sets the value of the 'alternateIdentifiers' field.
      * @param value The value of 'alternateIdentifiers'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setAlternateIdentifiers(com.uhc.schema.model.eligibility.individual.AlternateIdentifiers value) {
      validate(fields()[1], value);
      this.alternateIdentifiersBuilder = null;
      this.alternateIdentifiers = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'alternateIdentifiers' field has been set.
      * @return True if the 'alternateIdentifiers' field has been set, false otherwise.
      */
    public boolean hasAlternateIdentifiers() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'alternateIdentifiers' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder getAlternateIdentifiersBuilder() {
      if (alternateIdentifiersBuilder == null) {
        if (hasAlternateIdentifiers()) {
          setAlternateIdentifiersBuilder(com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.newBuilder(alternateIdentifiers));
        } else {
          setAlternateIdentifiersBuilder(com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.newBuilder());
        }
      }
      return alternateIdentifiersBuilder;
    }

    /**
     * Sets the Builder instance for the 'alternateIdentifiers' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setAlternateIdentifiersBuilder(com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder value) {
      clearAlternateIdentifiers();
      alternateIdentifiersBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'alternateIdentifiers' field has an active Builder instance
     * @return True if the 'alternateIdentifiers' field has an active Builder instance
     */
    public boolean hasAlternateIdentifiersBuilder() {
      return alternateIdentifiersBuilder != null;
    }

    /**
      * Clears the value of the 'alternateIdentifiers' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearAlternateIdentifiers() {
      alternateIdentifiers = null;
      alternateIdentifiersBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'atOccupationTypeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getAtOccupationTypeCode() {
      return atOccupationTypeCode;
    }

    /**
      * Sets the value of the 'atOccupationTypeCode' field.
      * @param value The value of 'atOccupationTypeCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setAtOccupationTypeCode(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.atOccupationTypeCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'atOccupationTypeCode' field has been set.
      * @return True if the 'atOccupationTypeCode' field has been set, false otherwise.
      */
    public boolean hasAtOccupationTypeCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'atOccupationTypeCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearAtOccupationTypeCode() {
      atOccupationTypeCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'authoritativeRepresentatives' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AuthoritativeRepresentative> getAuthoritativeRepresentatives() {
      return authoritativeRepresentatives;
    }

    /**
      * Sets the value of the 'authoritativeRepresentatives' field.
      * @param value The value of 'authoritativeRepresentatives'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setAuthoritativeRepresentatives(java.util.List<com.uhc.schema.model.eligibility.individual.AuthoritativeRepresentative> value) {
      validate(fields()[3], value);
      this.authoritativeRepresentatives = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'authoritativeRepresentatives' field has been set.
      * @return True if the 'authoritativeRepresentatives' field has been set, false otherwise.
      */
    public boolean hasAuthoritativeRepresentatives() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'authoritativeRepresentatives' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearAuthoritativeRepresentatives() {
      authoritativeRepresentatives = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthSequenceNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getBirthSequenceNumber() {
      return birthSequenceNumber;
    }

    /**
      * Sets the value of the 'birthSequenceNumber' field.
      * @param value The value of 'birthSequenceNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setBirthSequenceNumber(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.birthSequenceNumber = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'birthSequenceNumber' field has been set.
      * @return True if the 'birthSequenceNumber' field has been set, false otherwise.
      */
    public boolean hasBirthSequenceNumber() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'birthSequenceNumber' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearBirthSequenceNumber() {
      birthSequenceNumber = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'citizenshipStatusType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getCitizenshipStatusType() {
      return citizenshipStatusType;
    }

    /**
      * Sets the value of the 'citizenshipStatusType' field.
      * @param value The value of 'citizenshipStatusType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setCitizenshipStatusType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[5], value);
      this.citizenshipStatusTypeBuilder = null;
      this.citizenshipStatusType = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'citizenshipStatusType' field has been set.
      * @return True if the 'citizenshipStatusType' field has been set, false otherwise.
      */
    public boolean hasCitizenshipStatusType() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'citizenshipStatusType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getCitizenshipStatusTypeBuilder() {
      if (citizenshipStatusTypeBuilder == null) {
        if (hasCitizenshipStatusType()) {
          setCitizenshipStatusTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(citizenshipStatusType));
        } else {
          setCitizenshipStatusTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return citizenshipStatusTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'citizenshipStatusType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setCitizenshipStatusTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearCitizenshipStatusType();
      citizenshipStatusTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'citizenshipStatusType' field has an active Builder instance
     * @return True if the 'citizenshipStatusType' field has an active Builder instance
     */
    public boolean hasCitizenshipStatusTypeBuilder() {
      return citizenshipStatusTypeBuilder != null;
    }

    /**
      * Clears the value of the 'citizenshipStatusType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearCitizenshipStatusType() {
      citizenshipStatusType = null;
      citizenshipStatusTypeBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerDefineds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.CustomerDefined> getCustomerDefineds() {
      return customerDefineds;
    }

    /**
      * Sets the value of the 'customerDefineds' field.
      * @param value The value of 'customerDefineds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setCustomerDefineds(java.util.List<com.uhc.schema.model.eligibility.individual.CustomerDefined> value) {
      validate(fields()[6], value);
      this.customerDefineds = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'customerDefineds' field has been set.
      * @return True if the 'customerDefineds' field has been set, false otherwise.
      */
    public boolean hasCustomerDefineds() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'customerDefineds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearCustomerDefineds() {
      customerDefineds = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'demographicInfo' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo getDemographicInfo() {
      return demographicInfo;
    }

    /**
      * Sets the value of the 'demographicInfo' field.
      * @param value The value of 'demographicInfo'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setDemographicInfo(com.uhc.schema.model.eligibility.individual.DemographicInfo value) {
      validate(fields()[7], value);
      this.demographicInfoBuilder = null;
      this.demographicInfo = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'demographicInfo' field has been set.
      * @return True if the 'demographicInfo' field has been set, false otherwise.
      */
    public boolean hasDemographicInfo() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'demographicInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder getDemographicInfoBuilder() {
      if (demographicInfoBuilder == null) {
        if (hasDemographicInfo()) {
          setDemographicInfoBuilder(com.uhc.schema.model.eligibility.individual.DemographicInfo.newBuilder(demographicInfo));
        } else {
          setDemographicInfoBuilder(com.uhc.schema.model.eligibility.individual.DemographicInfo.newBuilder());
        }
      }
      return demographicInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'demographicInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setDemographicInfoBuilder(com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder value) {
      clearDemographicInfo();
      demographicInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'demographicInfo' field has an active Builder instance
     * @return True if the 'demographicInfo' field has an active Builder instance
     */
    public boolean hasDemographicInfoBuilder() {
      return demographicInfoBuilder != null;
    }

    /**
      * Clears the value of the 'demographicInfo' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearDemographicInfo() {
      demographicInfo = null;
      demographicInfoBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'disabilities' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.Disability> getDisabilities() {
      return disabilities;
    }

    /**
      * Sets the value of the 'disabilities' field.
      * @param value The value of 'disabilities'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setDisabilities(java.util.List<com.uhc.schema.model.eligibility.individual.Disability> value) {
      validate(fields()[8], value);
      this.disabilities = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'disabilities' field has been set.
      * @return True if the 'disabilities' field has been set, false otherwise.
      */
    public boolean hasDisabilities() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'disabilities' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearDisabilities() {
      disabilities = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'electronicAddresses' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.ElectronicAddress> getElectronicAddresses() {
      return electronicAddresses;
    }

    /**
      * Sets the value of the 'electronicAddresses' field.
      * @param value The value of 'electronicAddresses'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setElectronicAddresses(java.util.List<com.uhc.schema.model.eligibility.individual.ElectronicAddress> value) {
      validate(fields()[9], value);
      this.electronicAddresses = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'electronicAddresses' field has been set.
      * @return True if the 'electronicAddresses' field has been set, false otherwise.
      */
    public boolean hasElectronicAddresses() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'electronicAddresses' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearElectronicAddresses() {
      electronicAddresses = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'eligibilityAttributes' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.EligibilityAttributes getEligibilityAttributes() {
      return eligibilityAttributes;
    }

    /**
      * Sets the value of the 'eligibilityAttributes' field.
      * @param value The value of 'eligibilityAttributes'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setEligibilityAttributes(com.uhc.schema.model.eligibility.individual.EligibilityAttributes value) {
      validate(fields()[10], value);
      this.eligibilityAttributesBuilder = null;
      this.eligibilityAttributes = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'eligibilityAttributes' field has been set.
      * @return True if the 'eligibilityAttributes' field has been set, false otherwise.
      */
    public boolean hasEligibilityAttributes() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'eligibilityAttributes' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.EligibilityAttributes.Builder getEligibilityAttributesBuilder() {
      if (eligibilityAttributesBuilder == null) {
        if (hasEligibilityAttributes()) {
          setEligibilityAttributesBuilder(com.uhc.schema.model.eligibility.individual.EligibilityAttributes.newBuilder(eligibilityAttributes));
        } else {
          setEligibilityAttributesBuilder(com.uhc.schema.model.eligibility.individual.EligibilityAttributes.newBuilder());
        }
      }
      return eligibilityAttributesBuilder;
    }

    /**
     * Sets the Builder instance for the 'eligibilityAttributes' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setEligibilityAttributesBuilder(com.uhc.schema.model.eligibility.individual.EligibilityAttributes.Builder value) {
      clearEligibilityAttributes();
      eligibilityAttributesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'eligibilityAttributes' field has an active Builder instance
     * @return True if the 'eligibilityAttributes' field has an active Builder instance
     */
    public boolean hasEligibilityAttributesBuilder() {
      return eligibilityAttributesBuilder != null;
    }

    /**
      * Clears the value of the 'eligibilityAttributes' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearEligibilityAttributes() {
      eligibilityAttributes = null;
      eligibilityAttributesBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'employment' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.Employment getEmployment() {
      return employment;
    }

    /**
      * Sets the value of the 'employment' field.
      * @param value The value of 'employment'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setEmployment(com.uhc.schema.model.eligibility.individual.Employment value) {
      validate(fields()[11], value);
      this.employmentBuilder = null;
      this.employment = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'employment' field has been set.
      * @return True if the 'employment' field has been set, false otherwise.
      */
    public boolean hasEmployment() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'employment' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.Employment.Builder getEmploymentBuilder() {
      if (employmentBuilder == null) {
        if (hasEmployment()) {
          setEmploymentBuilder(com.uhc.schema.model.eligibility.individual.Employment.newBuilder(employment));
        } else {
          setEmploymentBuilder(com.uhc.schema.model.eligibility.individual.Employment.newBuilder());
        }
      }
      return employmentBuilder;
    }

    /**
     * Sets the Builder instance for the 'employment' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setEmploymentBuilder(com.uhc.schema.model.eligibility.individual.Employment.Builder value) {
      clearEmployment();
      employmentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'employment' field has an active Builder instance
     * @return True if the 'employment' field has an active Builder instance
     */
    public boolean hasEmploymentBuilder() {
      return employmentBuilder != null;
    }

    /**
      * Clears the value of the 'employment' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearEmployment() {
      employment = null;
      employmentBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'enrolleeSourceCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getEnrolleeSourceCode() {
      return enrolleeSourceCode;
    }

    /**
      * Sets the value of the 'enrolleeSourceCode' field.
      * @param value The value of 'enrolleeSourceCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setEnrolleeSourceCode(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.enrolleeSourceCode = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'enrolleeSourceCode' field has been set.
      * @return True if the 'enrolleeSourceCode' field has been set, false otherwise.
      */
    public boolean hasEnrolleeSourceCode() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'enrolleeSourceCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearEnrolleeSourceCode() {
      enrolleeSourceCode = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'enrolleeSourceId' field.
      * @return The value.
      */
    public java.lang.CharSequence getEnrolleeSourceId() {
      return enrolleeSourceId;
    }

    /**
      * Sets the value of the 'enrolleeSourceId' field.
      * @param value The value of 'enrolleeSourceId'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setEnrolleeSourceId(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.enrolleeSourceId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'enrolleeSourceId' field has been set.
      * @return True if the 'enrolleeSourceId' field has been set, false otherwise.
      */
    public boolean hasEnrolleeSourceId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'enrolleeSourceId' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearEnrolleeSourceId() {
      enrolleeSourceId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'exPatriateIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getExPatriateIndicator() {
      return exPatriateIndicator;
    }

    /**
      * Sets the value of the 'exPatriateIndicator' field.
      * @param value The value of 'exPatriateIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setExPatriateIndicator(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.exPatriateIndicator = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'exPatriateIndicator' field has been set.
      * @return True if the 'exPatriateIndicator' field has been set, false otherwise.
      */
    public boolean hasExPatriateIndicator() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'exPatriateIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearExPatriateIndicator() {
      exPatriateIndicator = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'exSpouseSubscriberId' field.
      * @return The value.
      */
    public java.lang.CharSequence getExSpouseSubscriberId() {
      return exSpouseSubscriberId;
    }

    /**
      * Sets the value of the 'exSpouseSubscriberId' field.
      * @param value The value of 'exSpouseSubscriberId'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setExSpouseSubscriberId(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.exSpouseSubscriberId = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'exSpouseSubscriberId' field has been set.
      * @return True if the 'exSpouseSubscriberId' field has been set, false otherwise.
      */
    public boolean hasExSpouseSubscriberId() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'exSpouseSubscriberId' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearExSpouseSubscriberId() {
      exSpouseSubscriberId = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'exSpouseTypeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getExSpouseTypeCode() {
      return exSpouseTypeCode;
    }

    /**
      * Sets the value of the 'exSpouseTypeCode' field.
      * @param value The value of 'exSpouseTypeCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setExSpouseTypeCode(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.exSpouseTypeCode = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'exSpouseTypeCode' field has been set.
      * @return True if the 'exSpouseTypeCode' field has been set, false otherwise.
      */
    public boolean hasExSpouseTypeCode() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'exSpouseTypeCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearExSpouseTypeCode() {
      exSpouseTypeCode = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'hccIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getHccIndicator() {
      return hccIndicator;
    }

    /**
      * Sets the value of the 'hccIndicator' field.
      * @param value The value of 'hccIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setHccIndicator(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.hccIndicator = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'hccIndicator' field has been set.
      * @return True if the 'hccIndicator' field has been set, false otherwise.
      */
    public boolean hasHccIndicator() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'hccIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearHccIndicator() {
      hccIndicator = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'healthCoverageTransferEffectiveDates' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DateRangeType getHealthCoverageTransferEffectiveDates() {
      return healthCoverageTransferEffectiveDates;
    }

    /**
      * Sets the value of the 'healthCoverageTransferEffectiveDates' field.
      * @param value The value of 'healthCoverageTransferEffectiveDates'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setHealthCoverageTransferEffectiveDates(com.uhc.schema.model.eligibility.common.DateRangeType value) {
      validate(fields()[18], value);
      this.healthCoverageTransferEffectiveDatesBuilder = null;
      this.healthCoverageTransferEffectiveDates = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'healthCoverageTransferEffectiveDates' field has been set.
      * @return True if the 'healthCoverageTransferEffectiveDates' field has been set, false otherwise.
      */
    public boolean hasHealthCoverageTransferEffectiveDates() {
      return fieldSetFlags()[18];
    }

    /**
     * Gets the Builder instance for the 'healthCoverageTransferEffectiveDates' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DateRangeType.Builder getHealthCoverageTransferEffectiveDatesBuilder() {
      if (healthCoverageTransferEffectiveDatesBuilder == null) {
        if (hasHealthCoverageTransferEffectiveDates()) {
          setHealthCoverageTransferEffectiveDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder(healthCoverageTransferEffectiveDates));
        } else {
          setHealthCoverageTransferEffectiveDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder());
        }
      }
      return healthCoverageTransferEffectiveDatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'healthCoverageTransferEffectiveDates' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setHealthCoverageTransferEffectiveDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.Builder value) {
      clearHealthCoverageTransferEffectiveDates();
      healthCoverageTransferEffectiveDatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'healthCoverageTransferEffectiveDates' field has an active Builder instance
     * @return True if the 'healthCoverageTransferEffectiveDates' field has an active Builder instance
     */
    public boolean hasHealthCoverageTransferEffectiveDatesBuilder() {
      return healthCoverageTransferEffectiveDatesBuilder != null;
    }

    /**
      * Clears the value of the 'healthCoverageTransferEffectiveDates' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearHealthCoverageTransferEffectiveDates() {
      healthCoverageTransferEffectiveDates = null;
      healthCoverageTransferEffectiveDatesBuilder = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'individualIdentifier' field.
      * The unique key for an individual from a specific source (e.g. PART_NBR + CNSM_ID + SRC_CD + LGCY_SRC_ID)
      * @return The value.
      */
    public java.lang.CharSequence getIndividualIdentifier() {
      return individualIdentifier;
    }

    /**
      * Sets the value of the 'individualIdentifier' field.
      * The unique key for an individual from a specific source (e.g. PART_NBR + CNSM_ID + SRC_CD + LGCY_SRC_ID)
      * @param value The value of 'individualIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setIndividualIdentifier(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.individualIdentifier = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'individualIdentifier' field has been set.
      * The unique key for an individual from a specific source (e.g. PART_NBR + CNSM_ID + SRC_CD + LGCY_SRC_ID)
      * @return True if the 'individualIdentifier' field has been set, false otherwise.
      */
    public boolean hasIndividualIdentifier() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'individualIdentifier' field.
      * The unique key for an individual from a specific source (e.g. PART_NBR + CNSM_ID + SRC_CD + LGCY_SRC_ID)
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearIndividualIdentifier() {
      individualIdentifier = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'individualRelationship' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.IndividualRelationship> getIndividualRelationship() {
      return individualRelationship;
    }

    /**
      * Sets the value of the 'individualRelationship' field.
      * @param value The value of 'individualRelationship'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setIndividualRelationship(java.util.List<com.uhc.schema.model.eligibility.individual.IndividualRelationship> value) {
      validate(fields()[20], value);
      this.individualRelationship = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'individualRelationship' field has been set.
      * @return True if the 'individualRelationship' field has been set, false otherwise.
      */
    public boolean hasIndividualRelationship() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'individualRelationship' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearIndividualRelationship() {
      individualRelationship = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'labInfos' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.LabInfo> getLabInfos() {
      return labInfos;
    }

    /**
      * Sets the value of the 'labInfos' field.
      * @param value The value of 'labInfos'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setLabInfos(java.util.List<com.uhc.schema.model.eligibility.individual.LabInfo> value) {
      validate(fields()[21], value);
      this.labInfos = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'labInfos' field has been set.
      * @return True if the 'labInfos' field has been set, false otherwise.
      */
    public boolean hasLabInfos() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'labInfos' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearLabInfos() {
      labInfos = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdated' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
      return lastUpdated;
    }

    /**
      * Sets the value of the 'lastUpdated' field.
      * @param value The value of 'lastUpdated'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
      validate(fields()[22], value);
      this.lastUpdatedBuilder = null;
      this.lastUpdated = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdated' field has been set.
      * @return True if the 'lastUpdated' field has been set, false otherwise.
      */
    public boolean hasLastUpdated() {
      return fieldSetFlags()[22];
    }

    /**
     * Gets the Builder instance for the 'lastUpdated' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.LastUpdated.Builder getLastUpdatedBuilder() {
      if (lastUpdatedBuilder == null) {
        if (hasLastUpdated()) {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(lastUpdated));
        } else {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder());
        }
      }
      return lastUpdatedBuilder;
    }

    /**
     * Sets the Builder instance for the 'lastUpdated' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.Builder value) {
      clearLastUpdated();
      lastUpdatedBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'lastUpdated' field has an active Builder instance
     * @return True if the 'lastUpdated' field has an active Builder instance
     */
    public boolean hasLastUpdatedBuilder() {
      return lastUpdatedBuilder != null;
    }

    /**
      * Clears the value of the 'lastUpdated' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearLastUpdated() {
      lastUpdated = null;
      lastUpdatedBuilder = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'legacyAttributes' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes getLegacyAttributes() {
      return legacyAttributes;
    }

    /**
      * Sets the value of the 'legacyAttributes' field.
      * @param value The value of 'legacyAttributes'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setLegacyAttributes(com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes value) {
      validate(fields()[23], value);
      this.legacyAttributesBuilder = null;
      this.legacyAttributes = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'legacyAttributes' field has been set.
      * @return True if the 'legacyAttributes' field has been set, false otherwise.
      */
    public boolean hasLegacyAttributes() {
      return fieldSetFlags()[23];
    }

    /**
     * Gets the Builder instance for the 'legacyAttributes' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes.Builder getLegacyAttributesBuilder() {
      if (legacyAttributesBuilder == null) {
        if (hasLegacyAttributes()) {
          setLegacyAttributesBuilder(com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes.newBuilder(legacyAttributes));
        } else {
          setLegacyAttributesBuilder(com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes.newBuilder());
        }
      }
      return legacyAttributesBuilder;
    }

    /**
     * Sets the Builder instance for the 'legacyAttributes' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setLegacyAttributesBuilder(com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes.Builder value) {
      clearLegacyAttributes();
      legacyAttributesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'legacyAttributes' field has an active Builder instance
     * @return True if the 'legacyAttributes' field has an active Builder instance
     */
    public boolean hasLegacyAttributesBuilder() {
      return legacyAttributesBuilder != null;
    }

    /**
      * Clears the value of the 'legacyAttributes' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearLegacyAttributes() {
      legacyAttributes = null;
      legacyAttributesBuilder = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'lifeEvents' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.IndividualLifeEvent> getLifeEvents() {
      return lifeEvents;
    }

    /**
      * Sets the value of the 'lifeEvents' field.
      * @param value The value of 'lifeEvents'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setLifeEvents(java.util.List<com.uhc.schema.model.eligibility.individual.IndividualLifeEvent> value) {
      validate(fields()[24], value);
      this.lifeEvents = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'lifeEvents' field has been set.
      * @return True if the 'lifeEvents' field has been set, false otherwise.
      */
    public boolean hasLifeEvents() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'lifeEvents' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearLifeEvents() {
      lifeEvents = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'lineOfBusiness' field.
      * @return The value.
      */
    public java.lang.CharSequence getLineOfBusiness() {
      return lineOfBusiness;
    }

    /**
      * Sets the value of the 'lineOfBusiness' field.
      * @param value The value of 'lineOfBusiness'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setLineOfBusiness(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.lineOfBusiness = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'lineOfBusiness' field has been set.
      * @return True if the 'lineOfBusiness' field has been set, false otherwise.
      */
    public boolean hasLineOfBusiness() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'lineOfBusiness' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearLineOfBusiness() {
      lineOfBusiness = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'lowIncomeSubsidy' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy> getLowIncomeSubsidy() {
      return lowIncomeSubsidy;
    }

    /**
      * Sets the value of the 'lowIncomeSubsidy' field.
      * @param value The value of 'lowIncomeSubsidy'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setLowIncomeSubsidy(java.util.List<com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy> value) {
      validate(fields()[26], value);
      this.lowIncomeSubsidy = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'lowIncomeSubsidy' field has been set.
      * @return True if the 'lowIncomeSubsidy' field has been set, false otherwise.
      */
    public boolean hasLowIncomeSubsidy() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'lowIncomeSubsidy' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearLowIncomeSubsidy() {
      lowIncomeSubsidy = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'marketingIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getMarketingIndicator() {
      return marketingIndicator;
    }

    /**
      * Sets the value of the 'marketingIndicator' field.
      * @param value The value of 'marketingIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setMarketingIndicator(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.marketingIndicator = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'marketingIndicator' field has been set.
      * @return True if the 'marketingIndicator' field has been set, false otherwise.
      */
    public boolean hasMarketingIndicator() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'marketingIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearMarketingIndicator() {
      marketingIndicator = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'marketingSourceCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getMarketingSourceCode() {
      return marketingSourceCode;
    }

    /**
      * Sets the value of the 'marketingSourceCode' field.
      * @param value The value of 'marketingSourceCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setMarketingSourceCode(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.marketingSourceCode = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'marketingSourceCode' field has been set.
      * @return True if the 'marketingSourceCode' field has been set, false otherwise.
      */
    public boolean hasMarketingSourceCode() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'marketingSourceCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearMarketingSourceCode() {
      marketingSourceCode = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicareAnocSegment' field.
      * @return The value.
      */
    public java.lang.CharSequence getMedicareAnocSegment() {
      return medicareAnocSegment;
    }

    /**
      * Sets the value of the 'medicareAnocSegment' field.
      * @param value The value of 'medicareAnocSegment'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setMedicareAnocSegment(java.lang.CharSequence value) {
      validate(fields()[29], value);
      this.medicareAnocSegment = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'medicareAnocSegment' field has been set.
      * @return True if the 'medicareAnocSegment' field has been set, false otherwise.
      */
    public boolean hasMedicareAnocSegment() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'medicareAnocSegment' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearMedicareAnocSegment() {
      medicareAnocSegment = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicareEntitlement' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.MedicareEntitlement getMedicareEntitlement() {
      return medicareEntitlement;
    }

    /**
      * Sets the value of the 'medicareEntitlement' field.
      * @param value The value of 'medicareEntitlement'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setMedicareEntitlement(com.uhc.schema.model.eligibility.individual.MedicareEntitlement value) {
      validate(fields()[30], value);
      this.medicareEntitlementBuilder = null;
      this.medicareEntitlement = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'medicareEntitlement' field has been set.
      * @return True if the 'medicareEntitlement' field has been set, false otherwise.
      */
    public boolean hasMedicareEntitlement() {
      return fieldSetFlags()[30];
    }

    /**
     * Gets the Builder instance for the 'medicareEntitlement' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.MedicareEntitlement.Builder getMedicareEntitlementBuilder() {
      if (medicareEntitlementBuilder == null) {
        if (hasMedicareEntitlement()) {
          setMedicareEntitlementBuilder(com.uhc.schema.model.eligibility.individual.MedicareEntitlement.newBuilder(medicareEntitlement));
        } else {
          setMedicareEntitlementBuilder(com.uhc.schema.model.eligibility.individual.MedicareEntitlement.newBuilder());
        }
      }
      return medicareEntitlementBuilder;
    }

    /**
     * Sets the Builder instance for the 'medicareEntitlement' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setMedicareEntitlementBuilder(com.uhc.schema.model.eligibility.individual.MedicareEntitlement.Builder value) {
      clearMedicareEntitlement();
      medicareEntitlementBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'medicareEntitlement' field has an active Builder instance
     * @return True if the 'medicareEntitlement' field has an active Builder instance
     */
    public boolean hasMedicareEntitlementBuilder() {
      return medicareEntitlementBuilder != null;
    }

    /**
      * Clears the value of the 'medicareEntitlement' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearMedicareEntitlement() {
      medicareEntitlement = null;
      medicareEntitlementBuilder = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicareAndRetirementEmployers' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementEmployer> getMedicareAndRetirementEmployers() {
      return medicareAndRetirementEmployers;
    }

    /**
      * Sets the value of the 'medicareAndRetirementEmployers' field.
      * @param value The value of 'medicareAndRetirementEmployers'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setMedicareAndRetirementEmployers(java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementEmployer> value) {
      validate(fields()[31], value);
      this.medicareAndRetirementEmployers = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'medicareAndRetirementEmployers' field has been set.
      * @return True if the 'medicareAndRetirementEmployers' field has been set, false otherwise.
      */
    public boolean hasMedicareAndRetirementEmployers() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'medicareAndRetirementEmployers' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearMedicareAndRetirementEmployers() {
      medicareAndRetirementEmployers = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicareAndRetirementHouseholdProfiles' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile> getMedicareAndRetirementHouseholdProfiles() {
      return medicareAndRetirementHouseholdProfiles;
    }

    /**
      * Sets the value of the 'medicareAndRetirementHouseholdProfiles' field.
      * @param value The value of 'medicareAndRetirementHouseholdProfiles'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setMedicareAndRetirementHouseholdProfiles(java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile> value) {
      validate(fields()[32], value);
      this.medicareAndRetirementHouseholdProfiles = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'medicareAndRetirementHouseholdProfiles' field has been set.
      * @return True if the 'medicareAndRetirementHouseholdProfiles' field has been set, false otherwise.
      */
    public boolean hasMedicareAndRetirementHouseholdProfiles() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'medicareAndRetirementHouseholdProfiles' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearMedicareAndRetirementHouseholdProfiles() {
      medicareAndRetirementHouseholdProfiles = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicareAndRetirementIndividualProfiles' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile> getMedicareAndRetirementIndividualProfiles() {
      return medicareAndRetirementIndividualProfiles;
    }

    /**
      * Sets the value of the 'medicareAndRetirementIndividualProfiles' field.
      * @param value The value of 'medicareAndRetirementIndividualProfiles'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setMedicareAndRetirementIndividualProfiles(java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile> value) {
      validate(fields()[33], value);
      this.medicareAndRetirementIndividualProfiles = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'medicareAndRetirementIndividualProfiles' field has been set.
      * @return True if the 'medicareAndRetirementIndividualProfiles' field has been set, false otherwise.
      */
    public boolean hasMedicareAndRetirementIndividualProfiles() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'medicareAndRetirementIndividualProfiles' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearMedicareAndRetirementIndividualProfiles() {
      medicareAndRetirementIndividualProfiles = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicareAndRetirementLineOfBusiness' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness getMedicareAndRetirementLineOfBusiness() {
      return medicareAndRetirementLineOfBusiness;
    }

    /**
      * Sets the value of the 'medicareAndRetirementLineOfBusiness' field.
      * @param value The value of 'medicareAndRetirementLineOfBusiness'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setMedicareAndRetirementLineOfBusiness(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness value) {
      validate(fields()[34], value);
      this.medicareAndRetirementLineOfBusinessBuilder = null;
      this.medicareAndRetirementLineOfBusiness = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'medicareAndRetirementLineOfBusiness' field has been set.
      * @return True if the 'medicareAndRetirementLineOfBusiness' field has been set, false otherwise.
      */
    public boolean hasMedicareAndRetirementLineOfBusiness() {
      return fieldSetFlags()[34];
    }

    /**
     * Gets the Builder instance for the 'medicareAndRetirementLineOfBusiness' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness.Builder getMedicareAndRetirementLineOfBusinessBuilder() {
      if (medicareAndRetirementLineOfBusinessBuilder == null) {
        if (hasMedicareAndRetirementLineOfBusiness()) {
          setMedicareAndRetirementLineOfBusinessBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness.newBuilder(medicareAndRetirementLineOfBusiness));
        } else {
          setMedicareAndRetirementLineOfBusinessBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness.newBuilder());
        }
      }
      return medicareAndRetirementLineOfBusinessBuilder;
    }

    /**
     * Sets the Builder instance for the 'medicareAndRetirementLineOfBusiness' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setMedicareAndRetirementLineOfBusinessBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness.Builder value) {
      clearMedicareAndRetirementLineOfBusiness();
      medicareAndRetirementLineOfBusinessBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'medicareAndRetirementLineOfBusiness' field has an active Builder instance
     * @return True if the 'medicareAndRetirementLineOfBusiness' field has an active Builder instance
     */
    public boolean hasMedicareAndRetirementLineOfBusinessBuilder() {
      return medicareAndRetirementLineOfBusinessBuilder != null;
    }

    /**
      * Clears the value of the 'medicareAndRetirementLineOfBusiness' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearMedicareAndRetirementLineOfBusiness() {
      medicareAndRetirementLineOfBusiness = null;
      medicareAndRetirementLineOfBusinessBuilder = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'onshoreOnlyIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getOnshoreOnlyIndicator() {
      return onshoreOnlyIndicator;
    }

    /**
      * Sets the value of the 'onshoreOnlyIndicator' field.
      * @param value The value of 'onshoreOnlyIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setOnshoreOnlyIndicator(java.lang.CharSequence value) {
      validate(fields()[35], value);
      this.onshoreOnlyIndicator = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'onshoreOnlyIndicator' field has been set.
      * @return True if the 'onshoreOnlyIndicator' field has been set, false otherwise.
      */
    public boolean hasOnshoreOnlyIndicator() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'onshoreOnlyIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearOnshoreOnlyIndicator() {
      onshoreOnlyIndicator = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'organizationIdentifier' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrganizationIdentifier() {
      return organizationIdentifier;
    }

    /**
      * Sets the value of the 'organizationIdentifier' field.
      * @param value The value of 'organizationIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setOrganizationIdentifier(java.lang.CharSequence value) {
      validate(fields()[36], value);
      this.organizationIdentifier = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'organizationIdentifier' field has been set.
      * @return True if the 'organizationIdentifier' field has been set, false otherwise.
      */
    public boolean hasOrganizationIdentifier() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'organizationIdentifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearOrganizationIdentifier() {
      organizationIdentifier = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'organizationType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getOrganizationType() {
      return organizationType;
    }

    /**
      * Sets the value of the 'organizationType' field.
      * @param value The value of 'organizationType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setOrganizationType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[37], value);
      this.organizationTypeBuilder = null;
      this.organizationType = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'organizationType' field has been set.
      * @return True if the 'organizationType' field has been set, false otherwise.
      */
    public boolean hasOrganizationType() {
      return fieldSetFlags()[37];
    }

    /**
     * Gets the Builder instance for the 'organizationType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getOrganizationTypeBuilder() {
      if (organizationTypeBuilder == null) {
        if (hasOrganizationType()) {
          setOrganizationTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(organizationType));
        } else {
          setOrganizationTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return organizationTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'organizationType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setOrganizationTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearOrganizationType();
      organizationTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'organizationType' field has an active Builder instance
     * @return True if the 'organizationType' field has an active Builder instance
     */
    public boolean hasOrganizationTypeBuilder() {
      return organizationTypeBuilder != null;
    }

    /**
      * Clears the value of the 'organizationType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearOrganizationType() {
      organizationType = null;
      organizationTypeBuilder = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'outOfAreaIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getOutOfAreaIndicator() {
      return outOfAreaIndicator;
    }

    /**
      * Sets the value of the 'outOfAreaIndicator' field.
      * @param value The value of 'outOfAreaIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setOutOfAreaIndicator(java.lang.CharSequence value) {
      validate(fields()[38], value);
      this.outOfAreaIndicator = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'outOfAreaIndicator' field has been set.
      * @return True if the 'outOfAreaIndicator' field has been set, false otherwise.
      */
    public boolean hasOutOfAreaIndicator() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'outOfAreaIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearOutOfAreaIndicator() {
      outOfAreaIndicator = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'outOfAreaDisenrollmentDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getOutOfAreaDisenrollmentDate() {
      return outOfAreaDisenrollmentDate;
    }

    /**
      * Sets the value of the 'outOfAreaDisenrollmentDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'outOfAreaDisenrollmentDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setOutOfAreaDisenrollmentDate(java.lang.CharSequence value) {
      validate(fields()[39], value);
      this.outOfAreaDisenrollmentDate = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'outOfAreaDisenrollmentDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'outOfAreaDisenrollmentDate' field has been set, false otherwise.
      */
    public boolean hasOutOfAreaDisenrollmentDate() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'outOfAreaDisenrollmentDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearOutOfAreaDisenrollmentDate() {
      outOfAreaDisenrollmentDate = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'personName' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.PersonName getPersonName() {
      return personName;
    }

    /**
      * Sets the value of the 'personName' field.
      * @param value The value of 'personName'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setPersonName(com.uhc.schema.model.eligibility.individual.PersonName value) {
      validate(fields()[40], value);
      this.personNameBuilder = null;
      this.personName = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'personName' field has been set.
      * @return True if the 'personName' field has been set, false otherwise.
      */
    public boolean hasPersonName() {
      return fieldSetFlags()[40];
    }

    /**
     * Gets the Builder instance for the 'personName' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.PersonName.Builder getPersonNameBuilder() {
      if (personNameBuilder == null) {
        if (hasPersonName()) {
          setPersonNameBuilder(com.uhc.schema.model.eligibility.individual.PersonName.newBuilder(personName));
        } else {
          setPersonNameBuilder(com.uhc.schema.model.eligibility.individual.PersonName.newBuilder());
        }
      }
      return personNameBuilder;
    }

    /**
     * Sets the Builder instance for the 'personName' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setPersonNameBuilder(com.uhc.schema.model.eligibility.individual.PersonName.Builder value) {
      clearPersonName();
      personNameBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'personName' field has an active Builder instance
     * @return True if the 'personName' field has an active Builder instance
     */
    public boolean hasPersonNameBuilder() {
      return personNameBuilder != null;
    }

    /**
      * Clears the value of the 'personName' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearPersonName() {
      personName = null;
      personNameBuilder = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'physicalAttributes' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.PhysicalAttributes getPhysicalAttributes() {
      return physicalAttributes;
    }

    /**
      * Sets the value of the 'physicalAttributes' field.
      * @param value The value of 'physicalAttributes'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setPhysicalAttributes(com.uhc.schema.model.eligibility.individual.PhysicalAttributes value) {
      validate(fields()[41], value);
      this.physicalAttributesBuilder = null;
      this.physicalAttributes = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'physicalAttributes' field has been set.
      * @return True if the 'physicalAttributes' field has been set, false otherwise.
      */
    public boolean hasPhysicalAttributes() {
      return fieldSetFlags()[41];
    }

    /**
     * Gets the Builder instance for the 'physicalAttributes' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder getPhysicalAttributesBuilder() {
      if (physicalAttributesBuilder == null) {
        if (hasPhysicalAttributes()) {
          setPhysicalAttributesBuilder(com.uhc.schema.model.eligibility.individual.PhysicalAttributes.newBuilder(physicalAttributes));
        } else {
          setPhysicalAttributesBuilder(com.uhc.schema.model.eligibility.individual.PhysicalAttributes.newBuilder());
        }
      }
      return physicalAttributesBuilder;
    }

    /**
     * Sets the Builder instance for the 'physicalAttributes' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setPhysicalAttributesBuilder(com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder value) {
      clearPhysicalAttributes();
      physicalAttributesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'physicalAttributes' field has an active Builder instance
     * @return True if the 'physicalAttributes' field has an active Builder instance
     */
    public boolean hasPhysicalAttributesBuilder() {
      return physicalAttributesBuilder != null;
    }

    /**
      * Clears the value of the 'physicalAttributes' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearPhysicalAttributes() {
      physicalAttributes = null;
      physicalAttributesBuilder = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'policyAmounts' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.PolicyAmount> getPolicyAmounts() {
      return policyAmounts;
    }

    /**
      * Sets the value of the 'policyAmounts' field.
      * @param value The value of 'policyAmounts'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setPolicyAmounts(java.util.List<com.uhc.schema.model.eligibility.individual.PolicyAmount> value) {
      validate(fields()[42], value);
      this.policyAmounts = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'policyAmounts' field has been set.
      * @return True if the 'policyAmounts' field has been set, false otherwise.
      */
    public boolean hasPolicyAmounts() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'policyAmounts' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearPolicyAmounts() {
      policyAmounts = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'postalAddresses' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.PostalAddress> getPostalAddresses() {
      return postalAddresses;
    }

    /**
      * Sets the value of the 'postalAddresses' field.
      * @param value The value of 'postalAddresses'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setPostalAddresses(java.util.List<com.uhc.schema.model.eligibility.individual.PostalAddress> value) {
      validate(fields()[43], value);
      this.postalAddresses = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'postalAddresses' field has been set.
      * @return True if the 'postalAddresses' field has been set, false otherwise.
      */
    public boolean hasPostalAddresses() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'postalAddresses' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearPostalAddresses() {
      postalAddresses = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'primeDependentCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getPrimeDependentCode() {
      return primeDependentCode;
    }

    /**
      * Sets the value of the 'primeDependentCode' field.
      * @param value The value of 'primeDependentCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setPrimeDependentCode(java.lang.CharSequence value) {
      validate(fields()[44], value);
      this.primeDependentCode = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'primeDependentCode' field has been set.
      * @return True if the 'primeDependentCode' field has been set, false otherwise.
      */
    public boolean hasPrimeDependentCode() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'primeDependentCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearPrimeDependentCode() {
      primeDependentCode = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'priorMemberFacingIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.PriorMemberFacingIds> getPriorMemberFacingIds() {
      return priorMemberFacingIds;
    }

    /**
      * Sets the value of the 'priorMemberFacingIds' field.
      * @param value The value of 'priorMemberFacingIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setPriorMemberFacingIds(java.util.List<com.uhc.schema.model.eligibility.individual.PriorMemberFacingIds> value) {
      validate(fields()[45], value);
      this.priorMemberFacingIds = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'priorMemberFacingIds' field has been set.
      * @return True if the 'priorMemberFacingIds' field has been set, false otherwise.
      */
    public boolean hasPriorMemberFacingIds() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'priorMemberFacingIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearPriorMemberFacingIds() {
      priorMemberFacingIds = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'qmcsoIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getQmcsoIndicator() {
      return qmcsoIndicator;
    }

    /**
      * Sets the value of the 'qmcsoIndicator' field.
      * @param value The value of 'qmcsoIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setQmcsoIndicator(boolean value) {
      validate(fields()[46], value);
      this.qmcsoIndicator = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'qmcsoIndicator' field has been set.
      * @return True if the 'qmcsoIndicator' field has been set, false otherwise.
      */
    public boolean hasQmcsoIndicator() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'qmcsoIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearQmcsoIndicator() {
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'researchAuthorizationIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getResearchAuthorizationIndicator() {
      return researchAuthorizationIndicator;
    }

    /**
      * Sets the value of the 'researchAuthorizationIndicator' field.
      * @param value The value of 'researchAuthorizationIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setResearchAuthorizationIndicator(boolean value) {
      validate(fields()[47], value);
      this.researchAuthorizationIndicator = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'researchAuthorizationIndicator' field has been set.
      * @return True if the 'researchAuthorizationIndicator' field has been set, false otherwise.
      */
    public boolean hasResearchAuthorizationIndicator() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'researchAuthorizationIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearResearchAuthorizationIndicator() {
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'security' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.Security getSecurity() {
      return security;
    }

    /**
      * Sets the value of the 'security' field.
      * @param value The value of 'security'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setSecurity(com.uhc.schema.model.eligibility.common.Security value) {
      validate(fields()[48], value);
      this.securityBuilder = null;
      this.security = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'security' field has been set.
      * @return True if the 'security' field has been set, false otherwise.
      */
    public boolean hasSecurity() {
      return fieldSetFlags()[48];
    }

    /**
     * Gets the Builder instance for the 'security' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.Security.Builder getSecurityBuilder() {
      if (securityBuilder == null) {
        if (hasSecurity()) {
          setSecurityBuilder(com.uhc.schema.model.eligibility.common.Security.newBuilder(security));
        } else {
          setSecurityBuilder(com.uhc.schema.model.eligibility.common.Security.newBuilder());
        }
      }
      return securityBuilder;
    }

    /**
     * Sets the Builder instance for the 'security' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setSecurityBuilder(com.uhc.schema.model.eligibility.common.Security.Builder value) {
      clearSecurity();
      securityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'security' field has an active Builder instance
     * @return True if the 'security' field has an active Builder instance
     */
    public boolean hasSecurityBuilder() {
      return securityBuilder != null;
    }

    /**
      * Clears the value of the 'security' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearSecurity() {
      security = null;
      securityBuilder = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'socialSecurityNumber' field.
      * (DEPRECATED - use demographicInfo.socialSecurityNumber instead).  The primary SSN for the individual.  Additional SSNs may exist as alternateIdentifier values.
      * @return The value.
      */
    public java.lang.CharSequence getSocialSecurityNumber() {
      return socialSecurityNumber;
    }

    /**
      * Sets the value of the 'socialSecurityNumber' field.
      * (DEPRECATED - use demographicInfo.socialSecurityNumber instead).  The primary SSN for the individual.  Additional SSNs may exist as alternateIdentifier values.
      * @param value The value of 'socialSecurityNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setSocialSecurityNumber(java.lang.CharSequence value) {
      validate(fields()[49], value);
      this.socialSecurityNumber = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'socialSecurityNumber' field has been set.
      * (DEPRECATED - use demographicInfo.socialSecurityNumber instead).  The primary SSN for the individual.  Additional SSNs may exist as alternateIdentifier values.
      * @return True if the 'socialSecurityNumber' field has been set, false otherwise.
      */
    public boolean hasSocialSecurityNumber() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'socialSecurityNumber' field.
      * (DEPRECATED - use demographicInfo.socialSecurityNumber instead).  The primary SSN for the individual.  Additional SSNs may exist as alternateIdentifier values.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearSocialSecurityNumber() {
      socialSecurityNumber = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceSystemAttributes' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes getSourceSystemAttributes() {
      return sourceSystemAttributes;
    }

    /**
      * Sets the value of the 'sourceSystemAttributes' field.
      * @param value The value of 'sourceSystemAttributes'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setSourceSystemAttributes(com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes value) {
      validate(fields()[50], value);
      this.sourceSystemAttributesBuilder = null;
      this.sourceSystemAttributes = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceSystemAttributes' field has been set.
      * @return True if the 'sourceSystemAttributes' field has been set, false otherwise.
      */
    public boolean hasSourceSystemAttributes() {
      return fieldSetFlags()[50];
    }

    /**
     * Gets the Builder instance for the 'sourceSystemAttributes' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes.Builder getSourceSystemAttributesBuilder() {
      if (sourceSystemAttributesBuilder == null) {
        if (hasSourceSystemAttributes()) {
          setSourceSystemAttributesBuilder(com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes.newBuilder(sourceSystemAttributes));
        } else {
          setSourceSystemAttributesBuilder(com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes.newBuilder());
        }
      }
      return sourceSystemAttributesBuilder;
    }

    /**
     * Sets the Builder instance for the 'sourceSystemAttributes' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setSourceSystemAttributesBuilder(com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes.Builder value) {
      clearSourceSystemAttributes();
      sourceSystemAttributesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'sourceSystemAttributes' field has an active Builder instance
     * @return True if the 'sourceSystemAttributes' field has an active Builder instance
     */
    public boolean hasSourceSystemAttributesBuilder() {
      return sourceSystemAttributesBuilder != null;
    }

    /**
      * Clears the value of the 'sourceSystemAttributes' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearSourceSystemAttributes() {
      sourceSystemAttributes = null;
      sourceSystemAttributesBuilder = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceSystemCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceSystemCode() {
      return sourceSystemCode;
    }

    /**
      * Sets the value of the 'sourceSystemCode' field.
      * @param value The value of 'sourceSystemCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setSourceSystemCode(java.lang.CharSequence value) {
      validate(fields()[51], value);
      this.sourceSystemCode = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceSystemCode' field has been set.
      * @return True if the 'sourceSystemCode' field has been set, false otherwise.
      */
    public boolean hasSourceSystemCode() {
      return fieldSetFlags()[51];
    }


    /**
      * Clears the value of the 'sourceSystemCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearSourceSystemCode() {
      sourceSystemCode = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'substanceAbuseIndicator' field.
      * Indicates if the individual has abused alcohol or drugs in any form.
      * @return The value.
      */
    public java.lang.CharSequence getSubstanceAbuseIndicator() {
      return substanceAbuseIndicator;
    }

    /**
      * Sets the value of the 'substanceAbuseIndicator' field.
      * Indicates if the individual has abused alcohol or drugs in any form.
      * @param value The value of 'substanceAbuseIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setSubstanceAbuseIndicator(java.lang.CharSequence value) {
      validate(fields()[52], value);
      this.substanceAbuseIndicator = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'substanceAbuseIndicator' field has been set.
      * Indicates if the individual has abused alcohol or drugs in any form.
      * @return True if the 'substanceAbuseIndicator' field has been set, false otherwise.
      */
    public boolean hasSubstanceAbuseIndicator() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'substanceAbuseIndicator' field.
      * Indicates if the individual has abused alcohol or drugs in any form.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearSubstanceAbuseIndicator() {
      substanceAbuseIndicator = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
      * Gets the value of the 'taxIdStatuses' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.TaxIdStatus> getTaxIdStatuses() {
      return taxIdStatuses;
    }

    /**
      * Sets the value of the 'taxIdStatuses' field.
      * @param value The value of 'taxIdStatuses'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setTaxIdStatuses(java.util.List<com.uhc.schema.model.eligibility.individual.TaxIdStatus> value) {
      validate(fields()[53], value);
      this.taxIdStatuses = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
      * Checks whether the 'taxIdStatuses' field has been set.
      * @return True if the 'taxIdStatuses' field has been set, false otherwise.
      */
    public boolean hasTaxIdStatuses() {
      return fieldSetFlags()[53];
    }


    /**
      * Clears the value of the 'taxIdStatuses' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearTaxIdStatuses() {
      taxIdStatuses = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
      * Gets the value of the 'taxpayerIdentificationNumber' field.
      * Individual's Taxpayer Identification Number.
      * @return The value.
      */
    public java.lang.CharSequence getTaxpayerIdentificationNumber() {
      return taxpayerIdentificationNumber;
    }

    /**
      * Sets the value of the 'taxpayerIdentificationNumber' field.
      * Individual's Taxpayer Identification Number.
      * @param value The value of 'taxpayerIdentificationNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setTaxpayerIdentificationNumber(java.lang.CharSequence value) {
      validate(fields()[54], value);
      this.taxpayerIdentificationNumber = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
      * Checks whether the 'taxpayerIdentificationNumber' field has been set.
      * Individual's Taxpayer Identification Number.
      * @return True if the 'taxpayerIdentificationNumber' field has been set, false otherwise.
      */
    public boolean hasTaxpayerIdentificationNumber() {
      return fieldSetFlags()[54];
    }


    /**
      * Clears the value of the 'taxpayerIdentificationNumber' field.
      * Individual's Taxpayer Identification Number.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearTaxpayerIdentificationNumber() {
      taxpayerIdentificationNumber = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
      * Gets the value of the 'telephoneNumbers' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.TelephoneNumber> getTelephoneNumbers() {
      return telephoneNumbers;
    }

    /**
      * Sets the value of the 'telephoneNumbers' field.
      * @param value The value of 'telephoneNumbers'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setTelephoneNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.TelephoneNumber> value) {
      validate(fields()[55], value);
      this.telephoneNumbers = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
      * Checks whether the 'telephoneNumbers' field has been set.
      * @return True if the 'telephoneNumbers' field has been set, false otherwise.
      */
    public boolean hasTelephoneNumbers() {
      return fieldSetFlags()[55];
    }


    /**
      * Clears the value of the 'telephoneNumbers' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearTelephoneNumbers() {
      telephoneNumbers = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /**
      * Gets the value of the 'tobaccoUseIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getTobaccoUseIndicator() {
      return tobaccoUseIndicator;
    }

    /**
      * Sets the value of the 'tobaccoUseIndicator' field.
      * @param value The value of 'tobaccoUseIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setTobaccoUseIndicator(boolean value) {
      validate(fields()[56], value);
      this.tobaccoUseIndicator = value;
      fieldSetFlags()[56] = true;
      return this;
    }

    /**
      * Checks whether the 'tobaccoUseIndicator' field has been set.
      * @return True if the 'tobaccoUseIndicator' field has been set, false otherwise.
      */
    public boolean hasTobaccoUseIndicator() {
      return fieldSetFlags()[56];
    }


    /**
      * Clears the value of the 'tobaccoUseIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearTobaccoUseIndicator() {
      fieldSetFlags()[56] = false;
      return this;
    }

    /**
      * Gets the value of the 'tobaccoUseType' field.
      * Specifies the tobacco type in use by the individual.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getTobaccoUseType() {
      return tobaccoUseType;
    }

    /**
      * Sets the value of the 'tobaccoUseType' field.
      * Specifies the tobacco type in use by the individual.
      * @param value The value of 'tobaccoUseType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setTobaccoUseType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[57], value);
      this.tobaccoUseTypeBuilder = null;
      this.tobaccoUseType = value;
      fieldSetFlags()[57] = true;
      return this;
    }

    /**
      * Checks whether the 'tobaccoUseType' field has been set.
      * Specifies the tobacco type in use by the individual.
      * @return True if the 'tobaccoUseType' field has been set, false otherwise.
      */
    public boolean hasTobaccoUseType() {
      return fieldSetFlags()[57];
    }

    /**
     * Gets the Builder instance for the 'tobaccoUseType' field and creates one if it doesn't exist yet.
     * Specifies the tobacco type in use by the individual.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getTobaccoUseTypeBuilder() {
      if (tobaccoUseTypeBuilder == null) {
        if (hasTobaccoUseType()) {
          setTobaccoUseTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(tobaccoUseType));
        } else {
          setTobaccoUseTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return tobaccoUseTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'tobaccoUseType' field
     * Specifies the tobacco type in use by the individual.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setTobaccoUseTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearTobaccoUseType();
      tobaccoUseTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'tobaccoUseType' field has an active Builder instance
     * Specifies the tobacco type in use by the individual.
     * @return True if the 'tobaccoUseType' field has an active Builder instance
     */
    public boolean hasTobaccoUseTypeBuilder() {
      return tobaccoUseTypeBuilder != null;
    }

    /**
      * Clears the value of the 'tobaccoUseType' field.
      * Specifies the tobacco type in use by the individual.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearTobaccoUseType() {
      tobaccoUseType = null;
      tobaccoUseTypeBuilder = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /**
      * Gets the value of the 'vipIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getVipIndicator() {
      return vipIndicator;
    }

    /**
      * Sets the value of the 'vipIndicator' field.
      * @param value The value of 'vipIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder setVipIndicator(boolean value) {
      validate(fields()[58], value);
      this.vipIndicator = value;
      fieldSetFlags()[58] = true;
      return this;
    }

    /**
      * Checks whether the 'vipIndicator' field has been set.
      * @return True if the 'vipIndicator' field has been set, false otherwise.
      */
    public boolean hasVipIndicator() {
      return fieldSetFlags()[58];
    }


    /**
      * Clears the value of the 'vipIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.SourceIndividual.Builder clearVipIndicator() {
      fieldSetFlags()[58] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SourceIndividual build() {
      try {
        SourceIndividual record = new SourceIndividual();
        record.active = fieldSetFlags()[0] ? this.active : (java.lang.Boolean) defaultValue(fields()[0]);
        if (alternateIdentifiersBuilder != null) {
          record.alternateIdentifiers = this.alternateIdentifiersBuilder.build();
        } else {
          record.alternateIdentifiers = fieldSetFlags()[1] ? this.alternateIdentifiers : (com.uhc.schema.model.eligibility.individual.AlternateIdentifiers) defaultValue(fields()[1]);
        }
        record.atOccupationTypeCode = fieldSetFlags()[2] ? this.atOccupationTypeCode : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.authoritativeRepresentatives = fieldSetFlags()[3] ? this.authoritativeRepresentatives : (java.util.List<com.uhc.schema.model.eligibility.individual.AuthoritativeRepresentative>) defaultValue(fields()[3]);
        record.birthSequenceNumber = fieldSetFlags()[4] ? this.birthSequenceNumber : (java.lang.CharSequence) defaultValue(fields()[4]);
        if (citizenshipStatusTypeBuilder != null) {
          record.citizenshipStatusType = this.citizenshipStatusTypeBuilder.build();
        } else {
          record.citizenshipStatusType = fieldSetFlags()[5] ? this.citizenshipStatusType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[5]);
        }
        record.customerDefineds = fieldSetFlags()[6] ? this.customerDefineds : (java.util.List<com.uhc.schema.model.eligibility.individual.CustomerDefined>) defaultValue(fields()[6]);
        if (demographicInfoBuilder != null) {
          record.demographicInfo = this.demographicInfoBuilder.build();
        } else {
          record.demographicInfo = fieldSetFlags()[7] ? this.demographicInfo : (com.uhc.schema.model.eligibility.individual.DemographicInfo) defaultValue(fields()[7]);
        }
        record.disabilities = fieldSetFlags()[8] ? this.disabilities : (java.util.List<com.uhc.schema.model.eligibility.individual.Disability>) defaultValue(fields()[8]);
        record.electronicAddresses = fieldSetFlags()[9] ? this.electronicAddresses : (java.util.List<com.uhc.schema.model.eligibility.individual.ElectronicAddress>) defaultValue(fields()[9]);
        if (eligibilityAttributesBuilder != null) {
          record.eligibilityAttributes = this.eligibilityAttributesBuilder.build();
        } else {
          record.eligibilityAttributes = fieldSetFlags()[10] ? this.eligibilityAttributes : (com.uhc.schema.model.eligibility.individual.EligibilityAttributes) defaultValue(fields()[10]);
        }
        if (employmentBuilder != null) {
          record.employment = this.employmentBuilder.build();
        } else {
          record.employment = fieldSetFlags()[11] ? this.employment : (com.uhc.schema.model.eligibility.individual.Employment) defaultValue(fields()[11]);
        }
        record.enrolleeSourceCode = fieldSetFlags()[12] ? this.enrolleeSourceCode : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.enrolleeSourceId = fieldSetFlags()[13] ? this.enrolleeSourceId : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.exPatriateIndicator = fieldSetFlags()[14] ? this.exPatriateIndicator : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.exSpouseSubscriberId = fieldSetFlags()[15] ? this.exSpouseSubscriberId : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.exSpouseTypeCode = fieldSetFlags()[16] ? this.exSpouseTypeCode : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.hccIndicator = fieldSetFlags()[17] ? this.hccIndicator : (java.lang.CharSequence) defaultValue(fields()[17]);
        if (healthCoverageTransferEffectiveDatesBuilder != null) {
          record.healthCoverageTransferEffectiveDates = this.healthCoverageTransferEffectiveDatesBuilder.build();
        } else {
          record.healthCoverageTransferEffectiveDates = fieldSetFlags()[18] ? this.healthCoverageTransferEffectiveDates : (com.uhc.schema.model.eligibility.common.DateRangeType) defaultValue(fields()[18]);
        }
        record.individualIdentifier = fieldSetFlags()[19] ? this.individualIdentifier : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.individualRelationship = fieldSetFlags()[20] ? this.individualRelationship : (java.util.List<com.uhc.schema.model.eligibility.individual.IndividualRelationship>) defaultValue(fields()[20]);
        record.labInfos = fieldSetFlags()[21] ? this.labInfos : (java.util.List<com.uhc.schema.model.eligibility.individual.LabInfo>) defaultValue(fields()[21]);
        if (lastUpdatedBuilder != null) {
          record.lastUpdated = this.lastUpdatedBuilder.build();
        } else {
          record.lastUpdated = fieldSetFlags()[22] ? this.lastUpdated : (com.uhc.schema.model.eligibility.common.LastUpdated) defaultValue(fields()[22]);
        }
        if (legacyAttributesBuilder != null) {
          record.legacyAttributes = this.legacyAttributesBuilder.build();
        } else {
          record.legacyAttributes = fieldSetFlags()[23] ? this.legacyAttributes : (com.uhc.schema.model.eligibility.individual.IndividualLegacyAttributes) defaultValue(fields()[23]);
        }
        record.lifeEvents = fieldSetFlags()[24] ? this.lifeEvents : (java.util.List<com.uhc.schema.model.eligibility.individual.IndividualLifeEvent>) defaultValue(fields()[24]);
        record.lineOfBusiness = fieldSetFlags()[25] ? this.lineOfBusiness : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.lowIncomeSubsidy = fieldSetFlags()[26] ? this.lowIncomeSubsidy : (java.util.List<com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy>) defaultValue(fields()[26]);
        record.marketingIndicator = fieldSetFlags()[27] ? this.marketingIndicator : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.marketingSourceCode = fieldSetFlags()[28] ? this.marketingSourceCode : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.medicareAnocSegment = fieldSetFlags()[29] ? this.medicareAnocSegment : (java.lang.CharSequence) defaultValue(fields()[29]);
        if (medicareEntitlementBuilder != null) {
          record.medicareEntitlement = this.medicareEntitlementBuilder.build();
        } else {
          record.medicareEntitlement = fieldSetFlags()[30] ? this.medicareEntitlement : (com.uhc.schema.model.eligibility.individual.MedicareEntitlement) defaultValue(fields()[30]);
        }
        record.medicareAndRetirementEmployers = fieldSetFlags()[31] ? this.medicareAndRetirementEmployers : (java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementEmployer>) defaultValue(fields()[31]);
        record.medicareAndRetirementHouseholdProfiles = fieldSetFlags()[32] ? this.medicareAndRetirementHouseholdProfiles : (java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile>) defaultValue(fields()[32]);
        record.medicareAndRetirementIndividualProfiles = fieldSetFlags()[33] ? this.medicareAndRetirementIndividualProfiles : (java.util.List<com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile>) defaultValue(fields()[33]);
        if (medicareAndRetirementLineOfBusinessBuilder != null) {
          record.medicareAndRetirementLineOfBusiness = this.medicareAndRetirementLineOfBusinessBuilder.build();
        } else {
          record.medicareAndRetirementLineOfBusiness = fieldSetFlags()[34] ? this.medicareAndRetirementLineOfBusiness : (com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementLineOfBusiness) defaultValue(fields()[34]);
        }
        record.onshoreOnlyIndicator = fieldSetFlags()[35] ? this.onshoreOnlyIndicator : (java.lang.CharSequence) defaultValue(fields()[35]);
        record.organizationIdentifier = fieldSetFlags()[36] ? this.organizationIdentifier : (java.lang.CharSequence) defaultValue(fields()[36]);
        if (organizationTypeBuilder != null) {
          record.organizationType = this.organizationTypeBuilder.build();
        } else {
          record.organizationType = fieldSetFlags()[37] ? this.organizationType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[37]);
        }
        record.outOfAreaIndicator = fieldSetFlags()[38] ? this.outOfAreaIndicator : (java.lang.CharSequence) defaultValue(fields()[38]);
        record.outOfAreaDisenrollmentDate = fieldSetFlags()[39] ? this.outOfAreaDisenrollmentDate : (java.lang.CharSequence) defaultValue(fields()[39]);
        if (personNameBuilder != null) {
          record.personName = this.personNameBuilder.build();
        } else {
          record.personName = fieldSetFlags()[40] ? this.personName : (com.uhc.schema.model.eligibility.individual.PersonName) defaultValue(fields()[40]);
        }
        if (physicalAttributesBuilder != null) {
          record.physicalAttributes = this.physicalAttributesBuilder.build();
        } else {
          record.physicalAttributes = fieldSetFlags()[41] ? this.physicalAttributes : (com.uhc.schema.model.eligibility.individual.PhysicalAttributes) defaultValue(fields()[41]);
        }
        record.policyAmounts = fieldSetFlags()[42] ? this.policyAmounts : (java.util.List<com.uhc.schema.model.eligibility.individual.PolicyAmount>) defaultValue(fields()[42]);
        record.postalAddresses = fieldSetFlags()[43] ? this.postalAddresses : (java.util.List<com.uhc.schema.model.eligibility.individual.PostalAddress>) defaultValue(fields()[43]);
        record.primeDependentCode = fieldSetFlags()[44] ? this.primeDependentCode : (java.lang.CharSequence) defaultValue(fields()[44]);
        record.priorMemberFacingIds = fieldSetFlags()[45] ? this.priorMemberFacingIds : (java.util.List<com.uhc.schema.model.eligibility.individual.PriorMemberFacingIds>) defaultValue(fields()[45]);
        record.qmcsoIndicator = fieldSetFlags()[46] ? this.qmcsoIndicator : (java.lang.Boolean) defaultValue(fields()[46]);
        record.researchAuthorizationIndicator = fieldSetFlags()[47] ? this.researchAuthorizationIndicator : (java.lang.Boolean) defaultValue(fields()[47]);
        if (securityBuilder != null) {
          record.security = this.securityBuilder.build();
        } else {
          record.security = fieldSetFlags()[48] ? this.security : (com.uhc.schema.model.eligibility.common.Security) defaultValue(fields()[48]);
        }
        record.socialSecurityNumber = fieldSetFlags()[49] ? this.socialSecurityNumber : (java.lang.CharSequence) defaultValue(fields()[49]);
        if (sourceSystemAttributesBuilder != null) {
          record.sourceSystemAttributes = this.sourceSystemAttributesBuilder.build();
        } else {
          record.sourceSystemAttributes = fieldSetFlags()[50] ? this.sourceSystemAttributes : (com.uhc.schema.model.eligibility.individual.IndividualSourceSystemAttributes) defaultValue(fields()[50]);
        }
        record.sourceSystemCode = fieldSetFlags()[51] ? this.sourceSystemCode : (java.lang.CharSequence) defaultValue(fields()[51]);
        record.substanceAbuseIndicator = fieldSetFlags()[52] ? this.substanceAbuseIndicator : (java.lang.CharSequence) defaultValue(fields()[52]);
        record.taxIdStatuses = fieldSetFlags()[53] ? this.taxIdStatuses : (java.util.List<com.uhc.schema.model.eligibility.individual.TaxIdStatus>) defaultValue(fields()[53]);
        record.taxpayerIdentificationNumber = fieldSetFlags()[54] ? this.taxpayerIdentificationNumber : (java.lang.CharSequence) defaultValue(fields()[54]);
        record.telephoneNumbers = fieldSetFlags()[55] ? this.telephoneNumbers : (java.util.List<com.uhc.schema.model.eligibility.individual.TelephoneNumber>) defaultValue(fields()[55]);
        record.tobaccoUseIndicator = fieldSetFlags()[56] ? this.tobaccoUseIndicator : (java.lang.Boolean) defaultValue(fields()[56]);
        if (tobaccoUseTypeBuilder != null) {
          record.tobaccoUseType = this.tobaccoUseTypeBuilder.build();
        } else {
          record.tobaccoUseType = fieldSetFlags()[57] ? this.tobaccoUseType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[57]);
        }
        record.vipIndicator = fieldSetFlags()[58] ? this.vipIndicator : (java.lang.Boolean) defaultValue(fields()[58]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SourceIndividual>
    WRITER$ = (org.apache.avro.io.DatumWriter<SourceIndividual>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SourceIndividual>
    READER$ = (org.apache.avro.io.DatumReader<SourceIndividual>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
