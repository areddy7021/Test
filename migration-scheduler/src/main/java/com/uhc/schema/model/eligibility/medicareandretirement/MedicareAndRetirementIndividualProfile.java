/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.medicareandretirement;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MedicareAndRetirementIndividualProfile extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8253481170821632797L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MedicareAndRetirementIndividualProfile\",\"namespace\":\"com.uhc.schema.model.eligibility.medicareandretirement\",\"fields\":[{\"name\":\"chronicCareIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"chronicVerifiedIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"esrdDialysisIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"esrdIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"esrdKidneyTransplantIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"esrdMspIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"hospiceIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"institutionalizedIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LastUpdated\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"doc\":\"Information about the last update made to a given entity.\",\"fields\":[{\"name\":\"sourceSystemTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the source system (CDB ROW_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"sourceTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the originating source (CDB SRC_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",\"string\"],\"doc\":\"The last person or application to update the entity.\",\"default\":null}]}],\"default\":null},{\"name\":\"medicaidDualStatusCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"medicaidIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"medicaidNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"mmrLisIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"mmrMedicaidIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nursingHomeCertIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"profileDates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DateRangeType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"startDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null}]}],\"default\":null},{\"name\":\"workingAgeIndicator\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MedicareAndRetirementIndividualProfile> ENCODER =
      new BinaryMessageEncoder<MedicareAndRetirementIndividualProfile>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MedicareAndRetirementIndividualProfile> DECODER =
      new BinaryMessageDecoder<MedicareAndRetirementIndividualProfile>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MedicareAndRetirementIndividualProfile> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MedicareAndRetirementIndividualProfile> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MedicareAndRetirementIndividualProfile>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MedicareAndRetirementIndividualProfile to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MedicareAndRetirementIndividualProfile from a ByteBuffer. */
  public static MedicareAndRetirementIndividualProfile fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence chronicCareIndicator;
  @Deprecated public java.lang.CharSequence chronicVerifiedIndicator;
  @Deprecated public java.lang.CharSequence esrdDialysisIndicator;
  @Deprecated public java.lang.CharSequence esrdIndicator;
  @Deprecated public java.lang.CharSequence esrdKidneyTransplantIndicator;
  @Deprecated public java.lang.CharSequence esrdMspIndicator;
  @Deprecated public java.lang.CharSequence hospiceIndicator;
  @Deprecated public java.lang.CharSequence institutionalizedIndicator;
  @Deprecated public com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
  @Deprecated public java.lang.CharSequence medicaidDualStatusCode;
  @Deprecated public java.lang.CharSequence medicaidIndicator;
  @Deprecated public java.lang.CharSequence medicaidNumber;
  @Deprecated public java.lang.CharSequence mmrLisIndicator;
  @Deprecated public java.lang.CharSequence mmrMedicaidIndicator;
  @Deprecated public java.lang.CharSequence nursingHomeCertIndicator;
  @Deprecated public com.uhc.schema.model.eligibility.common.DateRangeType profileDates;
  @Deprecated public java.lang.CharSequence workingAgeIndicator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MedicareAndRetirementIndividualProfile() {}

  /**
   * All-args constructor.
   * @param chronicCareIndicator The new value for chronicCareIndicator
   * @param chronicVerifiedIndicator The new value for chronicVerifiedIndicator
   * @param esrdDialysisIndicator The new value for esrdDialysisIndicator
   * @param esrdIndicator The new value for esrdIndicator
   * @param esrdKidneyTransplantIndicator The new value for esrdKidneyTransplantIndicator
   * @param esrdMspIndicator The new value for esrdMspIndicator
   * @param hospiceIndicator The new value for hospiceIndicator
   * @param institutionalizedIndicator The new value for institutionalizedIndicator
   * @param lastUpdated The new value for lastUpdated
   * @param medicaidDualStatusCode The new value for medicaidDualStatusCode
   * @param medicaidIndicator The new value for medicaidIndicator
   * @param medicaidNumber The new value for medicaidNumber
   * @param mmrLisIndicator The new value for mmrLisIndicator
   * @param mmrMedicaidIndicator The new value for mmrMedicaidIndicator
   * @param nursingHomeCertIndicator The new value for nursingHomeCertIndicator
   * @param profileDates The new value for profileDates
   * @param workingAgeIndicator The new value for workingAgeIndicator
   */
  public MedicareAndRetirementIndividualProfile(java.lang.CharSequence chronicCareIndicator, java.lang.CharSequence chronicVerifiedIndicator, java.lang.CharSequence esrdDialysisIndicator, java.lang.CharSequence esrdIndicator, java.lang.CharSequence esrdKidneyTransplantIndicator, java.lang.CharSequence esrdMspIndicator, java.lang.CharSequence hospiceIndicator, java.lang.CharSequence institutionalizedIndicator, com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated, java.lang.CharSequence medicaidDualStatusCode, java.lang.CharSequence medicaidIndicator, java.lang.CharSequence medicaidNumber, java.lang.CharSequence mmrLisIndicator, java.lang.CharSequence mmrMedicaidIndicator, java.lang.CharSequence nursingHomeCertIndicator, com.uhc.schema.model.eligibility.common.DateRangeType profileDates, java.lang.CharSequence workingAgeIndicator) {
    this.chronicCareIndicator = chronicCareIndicator;
    this.chronicVerifiedIndicator = chronicVerifiedIndicator;
    this.esrdDialysisIndicator = esrdDialysisIndicator;
    this.esrdIndicator = esrdIndicator;
    this.esrdKidneyTransplantIndicator = esrdKidneyTransplantIndicator;
    this.esrdMspIndicator = esrdMspIndicator;
    this.hospiceIndicator = hospiceIndicator;
    this.institutionalizedIndicator = institutionalizedIndicator;
    this.lastUpdated = lastUpdated;
    this.medicaidDualStatusCode = medicaidDualStatusCode;
    this.medicaidIndicator = medicaidIndicator;
    this.medicaidNumber = medicaidNumber;
    this.mmrLisIndicator = mmrLisIndicator;
    this.mmrMedicaidIndicator = mmrMedicaidIndicator;
    this.nursingHomeCertIndicator = nursingHomeCertIndicator;
    this.profileDates = profileDates;
    this.workingAgeIndicator = workingAgeIndicator;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return chronicCareIndicator;
    case 1: return chronicVerifiedIndicator;
    case 2: return esrdDialysisIndicator;
    case 3: return esrdIndicator;
    case 4: return esrdKidneyTransplantIndicator;
    case 5: return esrdMspIndicator;
    case 6: return hospiceIndicator;
    case 7: return institutionalizedIndicator;
    case 8: return lastUpdated;
    case 9: return medicaidDualStatusCode;
    case 10: return medicaidIndicator;
    case 11: return medicaidNumber;
    case 12: return mmrLisIndicator;
    case 13: return mmrMedicaidIndicator;
    case 14: return nursingHomeCertIndicator;
    case 15: return profileDates;
    case 16: return workingAgeIndicator;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: chronicCareIndicator = (java.lang.CharSequence)value$; break;
    case 1: chronicVerifiedIndicator = (java.lang.CharSequence)value$; break;
    case 2: esrdDialysisIndicator = (java.lang.CharSequence)value$; break;
    case 3: esrdIndicator = (java.lang.CharSequence)value$; break;
    case 4: esrdKidneyTransplantIndicator = (java.lang.CharSequence)value$; break;
    case 5: esrdMspIndicator = (java.lang.CharSequence)value$; break;
    case 6: hospiceIndicator = (java.lang.CharSequence)value$; break;
    case 7: institutionalizedIndicator = (java.lang.CharSequence)value$; break;
    case 8: lastUpdated = (com.uhc.schema.model.eligibility.common.LastUpdated)value$; break;
    case 9: medicaidDualStatusCode = (java.lang.CharSequence)value$; break;
    case 10: medicaidIndicator = (java.lang.CharSequence)value$; break;
    case 11: medicaidNumber = (java.lang.CharSequence)value$; break;
    case 12: mmrLisIndicator = (java.lang.CharSequence)value$; break;
    case 13: mmrMedicaidIndicator = (java.lang.CharSequence)value$; break;
    case 14: nursingHomeCertIndicator = (java.lang.CharSequence)value$; break;
    case 15: profileDates = (com.uhc.schema.model.eligibility.common.DateRangeType)value$; break;
    case 16: workingAgeIndicator = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'chronicCareIndicator' field.
   * @return The value of the 'chronicCareIndicator' field.
   */
  public java.lang.CharSequence getChronicCareIndicator() {
    return chronicCareIndicator;
  }

  /**
   * Sets the value of the 'chronicCareIndicator' field.
   * @param value the value to set.
   */
  public void setChronicCareIndicator(java.lang.CharSequence value) {
    this.chronicCareIndicator = value;
  }

  /**
   * Gets the value of the 'chronicVerifiedIndicator' field.
   * @return The value of the 'chronicVerifiedIndicator' field.
   */
  public java.lang.CharSequence getChronicVerifiedIndicator() {
    return chronicVerifiedIndicator;
  }

  /**
   * Sets the value of the 'chronicVerifiedIndicator' field.
   * @param value the value to set.
   */
  public void setChronicVerifiedIndicator(java.lang.CharSequence value) {
    this.chronicVerifiedIndicator = value;
  }

  /**
   * Gets the value of the 'esrdDialysisIndicator' field.
   * @return The value of the 'esrdDialysisIndicator' field.
   */
  public java.lang.CharSequence getEsrdDialysisIndicator() {
    return esrdDialysisIndicator;
  }

  /**
   * Sets the value of the 'esrdDialysisIndicator' field.
   * @param value the value to set.
   */
  public void setEsrdDialysisIndicator(java.lang.CharSequence value) {
    this.esrdDialysisIndicator = value;
  }

  /**
   * Gets the value of the 'esrdIndicator' field.
   * @return The value of the 'esrdIndicator' field.
   */
  public java.lang.CharSequence getEsrdIndicator() {
    return esrdIndicator;
  }

  /**
   * Sets the value of the 'esrdIndicator' field.
   * @param value the value to set.
   */
  public void setEsrdIndicator(java.lang.CharSequence value) {
    this.esrdIndicator = value;
  }

  /**
   * Gets the value of the 'esrdKidneyTransplantIndicator' field.
   * @return The value of the 'esrdKidneyTransplantIndicator' field.
   */
  public java.lang.CharSequence getEsrdKidneyTransplantIndicator() {
    return esrdKidneyTransplantIndicator;
  }

  /**
   * Sets the value of the 'esrdKidneyTransplantIndicator' field.
   * @param value the value to set.
   */
  public void setEsrdKidneyTransplantIndicator(java.lang.CharSequence value) {
    this.esrdKidneyTransplantIndicator = value;
  }

  /**
   * Gets the value of the 'esrdMspIndicator' field.
   * @return The value of the 'esrdMspIndicator' field.
   */
  public java.lang.CharSequence getEsrdMspIndicator() {
    return esrdMspIndicator;
  }

  /**
   * Sets the value of the 'esrdMspIndicator' field.
   * @param value the value to set.
   */
  public void setEsrdMspIndicator(java.lang.CharSequence value) {
    this.esrdMspIndicator = value;
  }

  /**
   * Gets the value of the 'hospiceIndicator' field.
   * @return The value of the 'hospiceIndicator' field.
   */
  public java.lang.CharSequence getHospiceIndicator() {
    return hospiceIndicator;
  }

  /**
   * Sets the value of the 'hospiceIndicator' field.
   * @param value the value to set.
   */
  public void setHospiceIndicator(java.lang.CharSequence value) {
    this.hospiceIndicator = value;
  }

  /**
   * Gets the value of the 'institutionalizedIndicator' field.
   * @return The value of the 'institutionalizedIndicator' field.
   */
  public java.lang.CharSequence getInstitutionalizedIndicator() {
    return institutionalizedIndicator;
  }

  /**
   * Sets the value of the 'institutionalizedIndicator' field.
   * @param value the value to set.
   */
  public void setInstitutionalizedIndicator(java.lang.CharSequence value) {
    this.institutionalizedIndicator = value;
  }

  /**
   * Gets the value of the 'lastUpdated' field.
   * @return The value of the 'lastUpdated' field.
   */
  public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
    return lastUpdated;
  }

  /**
   * Sets the value of the 'lastUpdated' field.
   * @param value the value to set.
   */
  public void setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
    this.lastUpdated = value;
  }

  /**
   * Gets the value of the 'medicaidDualStatusCode' field.
   * @return The value of the 'medicaidDualStatusCode' field.
   */
  public java.lang.CharSequence getMedicaidDualStatusCode() {
    return medicaidDualStatusCode;
  }

  /**
   * Sets the value of the 'medicaidDualStatusCode' field.
   * @param value the value to set.
   */
  public void setMedicaidDualStatusCode(java.lang.CharSequence value) {
    this.medicaidDualStatusCode = value;
  }

  /**
   * Gets the value of the 'medicaidIndicator' field.
   * @return The value of the 'medicaidIndicator' field.
   */
  public java.lang.CharSequence getMedicaidIndicator() {
    return medicaidIndicator;
  }

  /**
   * Sets the value of the 'medicaidIndicator' field.
   * @param value the value to set.
   */
  public void setMedicaidIndicator(java.lang.CharSequence value) {
    this.medicaidIndicator = value;
  }

  /**
   * Gets the value of the 'medicaidNumber' field.
   * @return The value of the 'medicaidNumber' field.
   */
  public java.lang.CharSequence getMedicaidNumber() {
    return medicaidNumber;
  }

  /**
   * Sets the value of the 'medicaidNumber' field.
   * @param value the value to set.
   */
  public void setMedicaidNumber(java.lang.CharSequence value) {
    this.medicaidNumber = value;
  }

  /**
   * Gets the value of the 'mmrLisIndicator' field.
   * @return The value of the 'mmrLisIndicator' field.
   */
  public java.lang.CharSequence getMmrLisIndicator() {
    return mmrLisIndicator;
  }

  /**
   * Sets the value of the 'mmrLisIndicator' field.
   * @param value the value to set.
   */
  public void setMmrLisIndicator(java.lang.CharSequence value) {
    this.mmrLisIndicator = value;
  }

  /**
   * Gets the value of the 'mmrMedicaidIndicator' field.
   * @return The value of the 'mmrMedicaidIndicator' field.
   */
  public java.lang.CharSequence getMmrMedicaidIndicator() {
    return mmrMedicaidIndicator;
  }

  /**
   * Sets the value of the 'mmrMedicaidIndicator' field.
   * @param value the value to set.
   */
  public void setMmrMedicaidIndicator(java.lang.CharSequence value) {
    this.mmrMedicaidIndicator = value;
  }

  /**
   * Gets the value of the 'nursingHomeCertIndicator' field.
   * @return The value of the 'nursingHomeCertIndicator' field.
   */
  public java.lang.CharSequence getNursingHomeCertIndicator() {
    return nursingHomeCertIndicator;
  }

  /**
   * Sets the value of the 'nursingHomeCertIndicator' field.
   * @param value the value to set.
   */
  public void setNursingHomeCertIndicator(java.lang.CharSequence value) {
    this.nursingHomeCertIndicator = value;
  }

  /**
   * Gets the value of the 'profileDates' field.
   * @return The value of the 'profileDates' field.
   */
  public com.uhc.schema.model.eligibility.common.DateRangeType getProfileDates() {
    return profileDates;
  }

  /**
   * Sets the value of the 'profileDates' field.
   * @param value the value to set.
   */
  public void setProfileDates(com.uhc.schema.model.eligibility.common.DateRangeType value) {
    this.profileDates = value;
  }

  /**
   * Gets the value of the 'workingAgeIndicator' field.
   * @return The value of the 'workingAgeIndicator' field.
   */
  public java.lang.CharSequence getWorkingAgeIndicator() {
    return workingAgeIndicator;
  }

  /**
   * Sets the value of the 'workingAgeIndicator' field.
   * @param value the value to set.
   */
  public void setWorkingAgeIndicator(java.lang.CharSequence value) {
    this.workingAgeIndicator = value;
  }

  /**
   * Creates a new MedicareAndRetirementIndividualProfile RecordBuilder.
   * @return A new MedicareAndRetirementIndividualProfile RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder();
  }

  /**
   * Creates a new MedicareAndRetirementIndividualProfile RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MedicareAndRetirementIndividualProfile RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder newBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder other) {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder(other);
  }

  /**
   * Creates a new MedicareAndRetirementIndividualProfile RecordBuilder by copying an existing MedicareAndRetirementIndividualProfile instance.
   * @param other The existing instance to copy.
   * @return A new MedicareAndRetirementIndividualProfile RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder newBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile other) {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder(other);
  }

  /**
   * RecordBuilder for MedicareAndRetirementIndividualProfile instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MedicareAndRetirementIndividualProfile>
    implements org.apache.avro.data.RecordBuilder<MedicareAndRetirementIndividualProfile> {

    private java.lang.CharSequence chronicCareIndicator;
    private java.lang.CharSequence chronicVerifiedIndicator;
    private java.lang.CharSequence esrdDialysisIndicator;
    private java.lang.CharSequence esrdIndicator;
    private java.lang.CharSequence esrdKidneyTransplantIndicator;
    private java.lang.CharSequence esrdMspIndicator;
    private java.lang.CharSequence hospiceIndicator;
    private java.lang.CharSequence institutionalizedIndicator;
    private com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
    private com.uhc.schema.model.eligibility.common.LastUpdated.Builder lastUpdatedBuilder;
    private java.lang.CharSequence medicaidDualStatusCode;
    private java.lang.CharSequence medicaidIndicator;
    private java.lang.CharSequence medicaidNumber;
    private java.lang.CharSequence mmrLisIndicator;
    private java.lang.CharSequence mmrMedicaidIndicator;
    private java.lang.CharSequence nursingHomeCertIndicator;
    private com.uhc.schema.model.eligibility.common.DateRangeType profileDates;
    private com.uhc.schema.model.eligibility.common.DateRangeType.Builder profileDatesBuilder;
    private java.lang.CharSequence workingAgeIndicator;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.chronicCareIndicator)) {
        this.chronicCareIndicator = data().deepCopy(fields()[0].schema(), other.chronicCareIndicator);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.chronicVerifiedIndicator)) {
        this.chronicVerifiedIndicator = data().deepCopy(fields()[1].schema(), other.chronicVerifiedIndicator);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.esrdDialysisIndicator)) {
        this.esrdDialysisIndicator = data().deepCopy(fields()[2].schema(), other.esrdDialysisIndicator);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.esrdIndicator)) {
        this.esrdIndicator = data().deepCopy(fields()[3].schema(), other.esrdIndicator);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.esrdKidneyTransplantIndicator)) {
        this.esrdKidneyTransplantIndicator = data().deepCopy(fields()[4].schema(), other.esrdKidneyTransplantIndicator);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.esrdMspIndicator)) {
        this.esrdMspIndicator = data().deepCopy(fields()[5].schema(), other.esrdMspIndicator);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.hospiceIndicator)) {
        this.hospiceIndicator = data().deepCopy(fields()[6].schema(), other.hospiceIndicator);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.institutionalizedIndicator)) {
        this.institutionalizedIndicator = data().deepCopy(fields()[7].schema(), other.institutionalizedIndicator);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[8].schema(), other.lastUpdated);
        fieldSetFlags()[8] = true;
      }
      if (other.hasLastUpdatedBuilder()) {
        this.lastUpdatedBuilder = com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(other.getLastUpdatedBuilder());
      }
      if (isValidValue(fields()[9], other.medicaidDualStatusCode)) {
        this.medicaidDualStatusCode = data().deepCopy(fields()[9].schema(), other.medicaidDualStatusCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.medicaidIndicator)) {
        this.medicaidIndicator = data().deepCopy(fields()[10].schema(), other.medicaidIndicator);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.medicaidNumber)) {
        this.medicaidNumber = data().deepCopy(fields()[11].schema(), other.medicaidNumber);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.mmrLisIndicator)) {
        this.mmrLisIndicator = data().deepCopy(fields()[12].schema(), other.mmrLisIndicator);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.mmrMedicaidIndicator)) {
        this.mmrMedicaidIndicator = data().deepCopy(fields()[13].schema(), other.mmrMedicaidIndicator);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.nursingHomeCertIndicator)) {
        this.nursingHomeCertIndicator = data().deepCopy(fields()[14].schema(), other.nursingHomeCertIndicator);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.profileDates)) {
        this.profileDates = data().deepCopy(fields()[15].schema(), other.profileDates);
        fieldSetFlags()[15] = true;
      }
      if (other.hasProfileDatesBuilder()) {
        this.profileDatesBuilder = com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder(other.getProfileDatesBuilder());
      }
      if (isValidValue(fields()[16], other.workingAgeIndicator)) {
        this.workingAgeIndicator = data().deepCopy(fields()[16].schema(), other.workingAgeIndicator);
        fieldSetFlags()[16] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MedicareAndRetirementIndividualProfile instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.chronicCareIndicator)) {
        this.chronicCareIndicator = data().deepCopy(fields()[0].schema(), other.chronicCareIndicator);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.chronicVerifiedIndicator)) {
        this.chronicVerifiedIndicator = data().deepCopy(fields()[1].schema(), other.chronicVerifiedIndicator);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.esrdDialysisIndicator)) {
        this.esrdDialysisIndicator = data().deepCopy(fields()[2].schema(), other.esrdDialysisIndicator);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.esrdIndicator)) {
        this.esrdIndicator = data().deepCopy(fields()[3].schema(), other.esrdIndicator);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.esrdKidneyTransplantIndicator)) {
        this.esrdKidneyTransplantIndicator = data().deepCopy(fields()[4].schema(), other.esrdKidneyTransplantIndicator);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.esrdMspIndicator)) {
        this.esrdMspIndicator = data().deepCopy(fields()[5].schema(), other.esrdMspIndicator);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.hospiceIndicator)) {
        this.hospiceIndicator = data().deepCopy(fields()[6].schema(), other.hospiceIndicator);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.institutionalizedIndicator)) {
        this.institutionalizedIndicator = data().deepCopy(fields()[7].schema(), other.institutionalizedIndicator);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[8].schema(), other.lastUpdated);
        fieldSetFlags()[8] = true;
      }
      this.lastUpdatedBuilder = null;
      if (isValidValue(fields()[9], other.medicaidDualStatusCode)) {
        this.medicaidDualStatusCode = data().deepCopy(fields()[9].schema(), other.medicaidDualStatusCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.medicaidIndicator)) {
        this.medicaidIndicator = data().deepCopy(fields()[10].schema(), other.medicaidIndicator);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.medicaidNumber)) {
        this.medicaidNumber = data().deepCopy(fields()[11].schema(), other.medicaidNumber);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.mmrLisIndicator)) {
        this.mmrLisIndicator = data().deepCopy(fields()[12].schema(), other.mmrLisIndicator);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.mmrMedicaidIndicator)) {
        this.mmrMedicaidIndicator = data().deepCopy(fields()[13].schema(), other.mmrMedicaidIndicator);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.nursingHomeCertIndicator)) {
        this.nursingHomeCertIndicator = data().deepCopy(fields()[14].schema(), other.nursingHomeCertIndicator);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.profileDates)) {
        this.profileDates = data().deepCopy(fields()[15].schema(), other.profileDates);
        fieldSetFlags()[15] = true;
      }
      this.profileDatesBuilder = null;
      if (isValidValue(fields()[16], other.workingAgeIndicator)) {
        this.workingAgeIndicator = data().deepCopy(fields()[16].schema(), other.workingAgeIndicator);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'chronicCareIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getChronicCareIndicator() {
      return chronicCareIndicator;
    }

    /**
      * Sets the value of the 'chronicCareIndicator' field.
      * @param value The value of 'chronicCareIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setChronicCareIndicator(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.chronicCareIndicator = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'chronicCareIndicator' field has been set.
      * @return True if the 'chronicCareIndicator' field has been set, false otherwise.
      */
    public boolean hasChronicCareIndicator() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'chronicCareIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearChronicCareIndicator() {
      chronicCareIndicator = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'chronicVerifiedIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getChronicVerifiedIndicator() {
      return chronicVerifiedIndicator;
    }

    /**
      * Sets the value of the 'chronicVerifiedIndicator' field.
      * @param value The value of 'chronicVerifiedIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setChronicVerifiedIndicator(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.chronicVerifiedIndicator = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'chronicVerifiedIndicator' field has been set.
      * @return True if the 'chronicVerifiedIndicator' field has been set, false otherwise.
      */
    public boolean hasChronicVerifiedIndicator() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'chronicVerifiedIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearChronicVerifiedIndicator() {
      chronicVerifiedIndicator = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'esrdDialysisIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getEsrdDialysisIndicator() {
      return esrdDialysisIndicator;
    }

    /**
      * Sets the value of the 'esrdDialysisIndicator' field.
      * @param value The value of 'esrdDialysisIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setEsrdDialysisIndicator(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.esrdDialysisIndicator = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'esrdDialysisIndicator' field has been set.
      * @return True if the 'esrdDialysisIndicator' field has been set, false otherwise.
      */
    public boolean hasEsrdDialysisIndicator() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'esrdDialysisIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearEsrdDialysisIndicator() {
      esrdDialysisIndicator = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'esrdIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getEsrdIndicator() {
      return esrdIndicator;
    }

    /**
      * Sets the value of the 'esrdIndicator' field.
      * @param value The value of 'esrdIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setEsrdIndicator(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.esrdIndicator = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'esrdIndicator' field has been set.
      * @return True if the 'esrdIndicator' field has been set, false otherwise.
      */
    public boolean hasEsrdIndicator() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'esrdIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearEsrdIndicator() {
      esrdIndicator = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'esrdKidneyTransplantIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getEsrdKidneyTransplantIndicator() {
      return esrdKidneyTransplantIndicator;
    }

    /**
      * Sets the value of the 'esrdKidneyTransplantIndicator' field.
      * @param value The value of 'esrdKidneyTransplantIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setEsrdKidneyTransplantIndicator(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.esrdKidneyTransplantIndicator = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'esrdKidneyTransplantIndicator' field has been set.
      * @return True if the 'esrdKidneyTransplantIndicator' field has been set, false otherwise.
      */
    public boolean hasEsrdKidneyTransplantIndicator() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'esrdKidneyTransplantIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearEsrdKidneyTransplantIndicator() {
      esrdKidneyTransplantIndicator = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'esrdMspIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getEsrdMspIndicator() {
      return esrdMspIndicator;
    }

    /**
      * Sets the value of the 'esrdMspIndicator' field.
      * @param value The value of 'esrdMspIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setEsrdMspIndicator(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.esrdMspIndicator = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'esrdMspIndicator' field has been set.
      * @return True if the 'esrdMspIndicator' field has been set, false otherwise.
      */
    public boolean hasEsrdMspIndicator() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'esrdMspIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearEsrdMspIndicator() {
      esrdMspIndicator = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'hospiceIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getHospiceIndicator() {
      return hospiceIndicator;
    }

    /**
      * Sets the value of the 'hospiceIndicator' field.
      * @param value The value of 'hospiceIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setHospiceIndicator(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.hospiceIndicator = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'hospiceIndicator' field has been set.
      * @return True if the 'hospiceIndicator' field has been set, false otherwise.
      */
    public boolean hasHospiceIndicator() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'hospiceIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearHospiceIndicator() {
      hospiceIndicator = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'institutionalizedIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getInstitutionalizedIndicator() {
      return institutionalizedIndicator;
    }

    /**
      * Sets the value of the 'institutionalizedIndicator' field.
      * @param value The value of 'institutionalizedIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setInstitutionalizedIndicator(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.institutionalizedIndicator = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'institutionalizedIndicator' field has been set.
      * @return True if the 'institutionalizedIndicator' field has been set, false otherwise.
      */
    public boolean hasInstitutionalizedIndicator() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'institutionalizedIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearInstitutionalizedIndicator() {
      institutionalizedIndicator = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdated' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
      return lastUpdated;
    }

    /**
      * Sets the value of the 'lastUpdated' field.
      * @param value The value of 'lastUpdated'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
      validate(fields()[8], value);
      this.lastUpdatedBuilder = null;
      this.lastUpdated = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdated' field has been set.
      * @return True if the 'lastUpdated' field has been set, false otherwise.
      */
    public boolean hasLastUpdated() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'lastUpdated' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.LastUpdated.Builder getLastUpdatedBuilder() {
      if (lastUpdatedBuilder == null) {
        if (hasLastUpdated()) {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(lastUpdated));
        } else {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder());
        }
      }
      return lastUpdatedBuilder;
    }

    /**
     * Sets the Builder instance for the 'lastUpdated' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.Builder value) {
      clearLastUpdated();
      lastUpdatedBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'lastUpdated' field has an active Builder instance
     * @return True if the 'lastUpdated' field has an active Builder instance
     */
    public boolean hasLastUpdatedBuilder() {
      return lastUpdatedBuilder != null;
    }

    /**
      * Clears the value of the 'lastUpdated' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearLastUpdated() {
      lastUpdated = null;
      lastUpdatedBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicaidDualStatusCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getMedicaidDualStatusCode() {
      return medicaidDualStatusCode;
    }

    /**
      * Sets the value of the 'medicaidDualStatusCode' field.
      * @param value The value of 'medicaidDualStatusCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setMedicaidDualStatusCode(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.medicaidDualStatusCode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'medicaidDualStatusCode' field has been set.
      * @return True if the 'medicaidDualStatusCode' field has been set, false otherwise.
      */
    public boolean hasMedicaidDualStatusCode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'medicaidDualStatusCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearMedicaidDualStatusCode() {
      medicaidDualStatusCode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicaidIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getMedicaidIndicator() {
      return medicaidIndicator;
    }

    /**
      * Sets the value of the 'medicaidIndicator' field.
      * @param value The value of 'medicaidIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setMedicaidIndicator(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.medicaidIndicator = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'medicaidIndicator' field has been set.
      * @return True if the 'medicaidIndicator' field has been set, false otherwise.
      */
    public boolean hasMedicaidIndicator() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'medicaidIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearMedicaidIndicator() {
      medicaidIndicator = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicaidNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getMedicaidNumber() {
      return medicaidNumber;
    }

    /**
      * Sets the value of the 'medicaidNumber' field.
      * @param value The value of 'medicaidNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setMedicaidNumber(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.medicaidNumber = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'medicaidNumber' field has been set.
      * @return True if the 'medicaidNumber' field has been set, false otherwise.
      */
    public boolean hasMedicaidNumber() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'medicaidNumber' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearMedicaidNumber() {
      medicaidNumber = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'mmrLisIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getMmrLisIndicator() {
      return mmrLisIndicator;
    }

    /**
      * Sets the value of the 'mmrLisIndicator' field.
      * @param value The value of 'mmrLisIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setMmrLisIndicator(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.mmrLisIndicator = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'mmrLisIndicator' field has been set.
      * @return True if the 'mmrLisIndicator' field has been set, false otherwise.
      */
    public boolean hasMmrLisIndicator() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'mmrLisIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearMmrLisIndicator() {
      mmrLisIndicator = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'mmrMedicaidIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getMmrMedicaidIndicator() {
      return mmrMedicaidIndicator;
    }

    /**
      * Sets the value of the 'mmrMedicaidIndicator' field.
      * @param value The value of 'mmrMedicaidIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setMmrMedicaidIndicator(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.mmrMedicaidIndicator = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'mmrMedicaidIndicator' field has been set.
      * @return True if the 'mmrMedicaidIndicator' field has been set, false otherwise.
      */
    public boolean hasMmrMedicaidIndicator() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'mmrMedicaidIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearMmrMedicaidIndicator() {
      mmrMedicaidIndicator = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'nursingHomeCertIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getNursingHomeCertIndicator() {
      return nursingHomeCertIndicator;
    }

    /**
      * Sets the value of the 'nursingHomeCertIndicator' field.
      * @param value The value of 'nursingHomeCertIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setNursingHomeCertIndicator(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.nursingHomeCertIndicator = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'nursingHomeCertIndicator' field has been set.
      * @return True if the 'nursingHomeCertIndicator' field has been set, false otherwise.
      */
    public boolean hasNursingHomeCertIndicator() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'nursingHomeCertIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearNursingHomeCertIndicator() {
      nursingHomeCertIndicator = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'profileDates' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DateRangeType getProfileDates() {
      return profileDates;
    }

    /**
      * Sets the value of the 'profileDates' field.
      * @param value The value of 'profileDates'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setProfileDates(com.uhc.schema.model.eligibility.common.DateRangeType value) {
      validate(fields()[15], value);
      this.profileDatesBuilder = null;
      this.profileDates = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'profileDates' field has been set.
      * @return True if the 'profileDates' field has been set, false otherwise.
      */
    public boolean hasProfileDates() {
      return fieldSetFlags()[15];
    }

    /**
     * Gets the Builder instance for the 'profileDates' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DateRangeType.Builder getProfileDatesBuilder() {
      if (profileDatesBuilder == null) {
        if (hasProfileDates()) {
          setProfileDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder(profileDates));
        } else {
          setProfileDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder());
        }
      }
      return profileDatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'profileDates' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setProfileDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.Builder value) {
      clearProfileDates();
      profileDatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'profileDates' field has an active Builder instance
     * @return True if the 'profileDates' field has an active Builder instance
     */
    public boolean hasProfileDatesBuilder() {
      return profileDatesBuilder != null;
    }

    /**
      * Clears the value of the 'profileDates' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearProfileDates() {
      profileDates = null;
      profileDatesBuilder = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'workingAgeIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getWorkingAgeIndicator() {
      return workingAgeIndicator;
    }

    /**
      * Sets the value of the 'workingAgeIndicator' field.
      * @param value The value of 'workingAgeIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder setWorkingAgeIndicator(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.workingAgeIndicator = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'workingAgeIndicator' field has been set.
      * @return True if the 'workingAgeIndicator' field has been set, false otherwise.
      */
    public boolean hasWorkingAgeIndicator() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'workingAgeIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualProfile.Builder clearWorkingAgeIndicator() {
      workingAgeIndicator = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MedicareAndRetirementIndividualProfile build() {
      try {
        MedicareAndRetirementIndividualProfile record = new MedicareAndRetirementIndividualProfile();
        record.chronicCareIndicator = fieldSetFlags()[0] ? this.chronicCareIndicator : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.chronicVerifiedIndicator = fieldSetFlags()[1] ? this.chronicVerifiedIndicator : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.esrdDialysisIndicator = fieldSetFlags()[2] ? this.esrdDialysisIndicator : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.esrdIndicator = fieldSetFlags()[3] ? this.esrdIndicator : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.esrdKidneyTransplantIndicator = fieldSetFlags()[4] ? this.esrdKidneyTransplantIndicator : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.esrdMspIndicator = fieldSetFlags()[5] ? this.esrdMspIndicator : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.hospiceIndicator = fieldSetFlags()[6] ? this.hospiceIndicator : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.institutionalizedIndicator = fieldSetFlags()[7] ? this.institutionalizedIndicator : (java.lang.CharSequence) defaultValue(fields()[7]);
        if (lastUpdatedBuilder != null) {
          record.lastUpdated = this.lastUpdatedBuilder.build();
        } else {
          record.lastUpdated = fieldSetFlags()[8] ? this.lastUpdated : (com.uhc.schema.model.eligibility.common.LastUpdated) defaultValue(fields()[8]);
        }
        record.medicaidDualStatusCode = fieldSetFlags()[9] ? this.medicaidDualStatusCode : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.medicaidIndicator = fieldSetFlags()[10] ? this.medicaidIndicator : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.medicaidNumber = fieldSetFlags()[11] ? this.medicaidNumber : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.mmrLisIndicator = fieldSetFlags()[12] ? this.mmrLisIndicator : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.mmrMedicaidIndicator = fieldSetFlags()[13] ? this.mmrMedicaidIndicator : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.nursingHomeCertIndicator = fieldSetFlags()[14] ? this.nursingHomeCertIndicator : (java.lang.CharSequence) defaultValue(fields()[14]);
        if (profileDatesBuilder != null) {
          record.profileDates = this.profileDatesBuilder.build();
        } else {
          record.profileDates = fieldSetFlags()[15] ? this.profileDates : (com.uhc.schema.model.eligibility.common.DateRangeType) defaultValue(fields()[15]);
        }
        record.workingAgeIndicator = fieldSetFlags()[16] ? this.workingAgeIndicator : (java.lang.CharSequence) defaultValue(fields()[16]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MedicareAndRetirementIndividualProfile>
    WRITER$ = (org.apache.avro.io.DatumWriter<MedicareAndRetirementIndividualProfile>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MedicareAndRetirementIndividualProfile>
    READER$ = (org.apache.avro.io.DatumReader<MedicareAndRetirementIndividualProfile>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
