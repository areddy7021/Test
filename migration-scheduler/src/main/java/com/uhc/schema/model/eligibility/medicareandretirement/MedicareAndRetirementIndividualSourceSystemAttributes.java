/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.medicareandretirement;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MedicareAndRetirementIndividualSourceSystemAttributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4667779818326126833L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MedicareAndRetirementIndividualSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.medicareandretirement\",\"fields\":[{\"name\":\"insuredCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"migratedSourceSystem\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"specialHandling\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"com.uhc.schema.model.eligibility.common.DescriptionType\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MedicareAndRetirementIndividualSourceSystemAttributes> ENCODER =
      new BinaryMessageEncoder<MedicareAndRetirementIndividualSourceSystemAttributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MedicareAndRetirementIndividualSourceSystemAttributes> DECODER =
      new BinaryMessageDecoder<MedicareAndRetirementIndividualSourceSystemAttributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MedicareAndRetirementIndividualSourceSystemAttributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MedicareAndRetirementIndividualSourceSystemAttributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MedicareAndRetirementIndividualSourceSystemAttributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MedicareAndRetirementIndividualSourceSystemAttributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MedicareAndRetirementIndividualSourceSystemAttributes from a ByteBuffer. */
  public static MedicareAndRetirementIndividualSourceSystemAttributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence insuredCode;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType migratedSourceSystem;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.common.DescriptionType> specialHandling;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MedicareAndRetirementIndividualSourceSystemAttributes() {}

  /**
   * All-args constructor.
   * @param insuredCode The new value for insuredCode
   * @param migratedSourceSystem The new value for migratedSourceSystem
   * @param specialHandling The new value for specialHandling
   */
  public MedicareAndRetirementIndividualSourceSystemAttributes(java.lang.CharSequence insuredCode, com.uhc.schema.model.eligibility.common.DescriptionType migratedSourceSystem, java.util.List<com.uhc.schema.model.eligibility.common.DescriptionType> specialHandling) {
    this.insuredCode = insuredCode;
    this.migratedSourceSystem = migratedSourceSystem;
    this.specialHandling = specialHandling;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return insuredCode;
    case 1: return migratedSourceSystem;
    case 2: return specialHandling;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: insuredCode = (java.lang.CharSequence)value$; break;
    case 1: migratedSourceSystem = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 2: specialHandling = (java.util.List<com.uhc.schema.model.eligibility.common.DescriptionType>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'insuredCode' field.
   * @return The value of the 'insuredCode' field.
   */
  public java.lang.CharSequence getInsuredCode() {
    return insuredCode;
  }

  /**
   * Sets the value of the 'insuredCode' field.
   * @param value the value to set.
   */
  public void setInsuredCode(java.lang.CharSequence value) {
    this.insuredCode = value;
  }

  /**
   * Gets the value of the 'migratedSourceSystem' field.
   * @return The value of the 'migratedSourceSystem' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getMigratedSourceSystem() {
    return migratedSourceSystem;
  }

  /**
   * Sets the value of the 'migratedSourceSystem' field.
   * @param value the value to set.
   */
  public void setMigratedSourceSystem(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.migratedSourceSystem = value;
  }

  /**
   * Gets the value of the 'specialHandling' field.
   * @return The value of the 'specialHandling' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.common.DescriptionType> getSpecialHandling() {
    return specialHandling;
  }

  /**
   * Sets the value of the 'specialHandling' field.
   * @param value the value to set.
   */
  public void setSpecialHandling(java.util.List<com.uhc.schema.model.eligibility.common.DescriptionType> value) {
    this.specialHandling = value;
  }

  /**
   * Creates a new MedicareAndRetirementIndividualSourceSystemAttributes RecordBuilder.
   * @return A new MedicareAndRetirementIndividualSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder();
  }

  /**
   * Creates a new MedicareAndRetirementIndividualSourceSystemAttributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MedicareAndRetirementIndividualSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder other) {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder(other);
  }

  /**
   * Creates a new MedicareAndRetirementIndividualSourceSystemAttributes RecordBuilder by copying an existing MedicareAndRetirementIndividualSourceSystemAttributes instance.
   * @param other The existing instance to copy.
   * @return A new MedicareAndRetirementIndividualSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes other) {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder(other);
  }

  /**
   * RecordBuilder for MedicareAndRetirementIndividualSourceSystemAttributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MedicareAndRetirementIndividualSourceSystemAttributes>
    implements org.apache.avro.data.RecordBuilder<MedicareAndRetirementIndividualSourceSystemAttributes> {

    private java.lang.CharSequence insuredCode;
    private com.uhc.schema.model.eligibility.common.DescriptionType migratedSourceSystem;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder migratedSourceSystemBuilder;
    private java.util.List<com.uhc.schema.model.eligibility.common.DescriptionType> specialHandling;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.insuredCode)) {
        this.insuredCode = data().deepCopy(fields()[0].schema(), other.insuredCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.migratedSourceSystem)) {
        this.migratedSourceSystem = data().deepCopy(fields()[1].schema(), other.migratedSourceSystem);
        fieldSetFlags()[1] = true;
      }
      if (other.hasMigratedSourceSystemBuilder()) {
        this.migratedSourceSystemBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getMigratedSourceSystemBuilder());
      }
      if (isValidValue(fields()[2], other.specialHandling)) {
        this.specialHandling = data().deepCopy(fields()[2].schema(), other.specialHandling);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MedicareAndRetirementIndividualSourceSystemAttributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.insuredCode)) {
        this.insuredCode = data().deepCopy(fields()[0].schema(), other.insuredCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.migratedSourceSystem)) {
        this.migratedSourceSystem = data().deepCopy(fields()[1].schema(), other.migratedSourceSystem);
        fieldSetFlags()[1] = true;
      }
      this.migratedSourceSystemBuilder = null;
      if (isValidValue(fields()[2], other.specialHandling)) {
        this.specialHandling = data().deepCopy(fields()[2].schema(), other.specialHandling);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'insuredCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getInsuredCode() {
      return insuredCode;
    }

    /**
      * Sets the value of the 'insuredCode' field.
      * @param value The value of 'insuredCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder setInsuredCode(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.insuredCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'insuredCode' field has been set.
      * @return True if the 'insuredCode' field has been set, false otherwise.
      */
    public boolean hasInsuredCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'insuredCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder clearInsuredCode() {
      insuredCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'migratedSourceSystem' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getMigratedSourceSystem() {
      return migratedSourceSystem;
    }

    /**
      * Sets the value of the 'migratedSourceSystem' field.
      * @param value The value of 'migratedSourceSystem'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder setMigratedSourceSystem(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[1], value);
      this.migratedSourceSystemBuilder = null;
      this.migratedSourceSystem = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'migratedSourceSystem' field has been set.
      * @return True if the 'migratedSourceSystem' field has been set, false otherwise.
      */
    public boolean hasMigratedSourceSystem() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'migratedSourceSystem' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getMigratedSourceSystemBuilder() {
      if (migratedSourceSystemBuilder == null) {
        if (hasMigratedSourceSystem()) {
          setMigratedSourceSystemBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(migratedSourceSystem));
        } else {
          setMigratedSourceSystemBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return migratedSourceSystemBuilder;
    }

    /**
     * Sets the Builder instance for the 'migratedSourceSystem' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder setMigratedSourceSystemBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearMigratedSourceSystem();
      migratedSourceSystemBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'migratedSourceSystem' field has an active Builder instance
     * @return True if the 'migratedSourceSystem' field has an active Builder instance
     */
    public boolean hasMigratedSourceSystemBuilder() {
      return migratedSourceSystemBuilder != null;
    }

    /**
      * Clears the value of the 'migratedSourceSystem' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder clearMigratedSourceSystem() {
      migratedSourceSystem = null;
      migratedSourceSystemBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'specialHandling' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.common.DescriptionType> getSpecialHandling() {
      return specialHandling;
    }

    /**
      * Sets the value of the 'specialHandling' field.
      * @param value The value of 'specialHandling'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder setSpecialHandling(java.util.List<com.uhc.schema.model.eligibility.common.DescriptionType> value) {
      validate(fields()[2], value);
      this.specialHandling = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'specialHandling' field has been set.
      * @return True if the 'specialHandling' field has been set, false otherwise.
      */
    public boolean hasSpecialHandling() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'specialHandling' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementIndividualSourceSystemAttributes.Builder clearSpecialHandling() {
      specialHandling = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MedicareAndRetirementIndividualSourceSystemAttributes build() {
      try {
        MedicareAndRetirementIndividualSourceSystemAttributes record = new MedicareAndRetirementIndividualSourceSystemAttributes();
        record.insuredCode = fieldSetFlags()[0] ? this.insuredCode : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (migratedSourceSystemBuilder != null) {
          record.migratedSourceSystem = this.migratedSourceSystemBuilder.build();
        } else {
          record.migratedSourceSystem = fieldSetFlags()[1] ? this.migratedSourceSystem : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[1]);
        }
        record.specialHandling = fieldSetFlags()[2] ? this.specialHandling : (java.util.List<com.uhc.schema.model.eligibility.common.DescriptionType>) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MedicareAndRetirementIndividualSourceSystemAttributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<MedicareAndRetirementIndividualSourceSystemAttributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MedicareAndRetirementIndividualSourceSystemAttributes>
    READER$ = (org.apache.avro.io.DatumReader<MedicareAndRetirementIndividualSourceSystemAttributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
