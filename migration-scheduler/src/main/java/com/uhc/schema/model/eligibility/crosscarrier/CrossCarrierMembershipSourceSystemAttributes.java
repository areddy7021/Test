/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.crosscarrier;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CrossCarrierMembershipSourceSystemAttributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8864013073954813067L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CrossCarrierMembershipSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.crosscarrier\",\"fields\":[{\"name\":\"carrierName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"fileName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"pKey\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CrossCarrierMembershipSourceSystemAttributes> ENCODER =
      new BinaryMessageEncoder<CrossCarrierMembershipSourceSystemAttributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CrossCarrierMembershipSourceSystemAttributes> DECODER =
      new BinaryMessageDecoder<CrossCarrierMembershipSourceSystemAttributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CrossCarrierMembershipSourceSystemAttributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CrossCarrierMembershipSourceSystemAttributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CrossCarrierMembershipSourceSystemAttributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CrossCarrierMembershipSourceSystemAttributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CrossCarrierMembershipSourceSystemAttributes from a ByteBuffer. */
  public static CrossCarrierMembershipSourceSystemAttributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence carrierName;
  @Deprecated public java.lang.CharSequence fileName;
  @Deprecated public java.lang.CharSequence pKey;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CrossCarrierMembershipSourceSystemAttributes() {}

  /**
   * All-args constructor.
   * @param carrierName The new value for carrierName
   * @param fileName The new value for fileName
   * @param pKey The new value for pKey
   */
  public CrossCarrierMembershipSourceSystemAttributes(java.lang.CharSequence carrierName, java.lang.CharSequence fileName, java.lang.CharSequence pKey) {
    this.carrierName = carrierName;
    this.fileName = fileName;
    this.pKey = pKey;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return carrierName;
    case 1: return fileName;
    case 2: return pKey;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: carrierName = (java.lang.CharSequence)value$; break;
    case 1: fileName = (java.lang.CharSequence)value$; break;
    case 2: pKey = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'carrierName' field.
   * @return The value of the 'carrierName' field.
   */
  public java.lang.CharSequence getCarrierName() {
    return carrierName;
  }

  /**
   * Sets the value of the 'carrierName' field.
   * @param value the value to set.
   */
  public void setCarrierName(java.lang.CharSequence value) {
    this.carrierName = value;
  }

  /**
   * Gets the value of the 'fileName' field.
   * @return The value of the 'fileName' field.
   */
  public java.lang.CharSequence getFileName() {
    return fileName;
  }

  /**
   * Sets the value of the 'fileName' field.
   * @param value the value to set.
   */
  public void setFileName(java.lang.CharSequence value) {
    this.fileName = value;
  }

  /**
   * Gets the value of the 'pKey' field.
   * @return The value of the 'pKey' field.
   */
  public java.lang.CharSequence getPKey() {
    return pKey;
  }

  /**
   * Sets the value of the 'pKey' field.
   * @param value the value to set.
   */
  public void setPKey(java.lang.CharSequence value) {
    this.pKey = value;
  }

  /**
   * Creates a new CrossCarrierMembershipSourceSystemAttributes RecordBuilder.
   * @return A new CrossCarrierMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder();
  }

  /**
   * Creates a new CrossCarrierMembershipSourceSystemAttributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CrossCarrierMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder other) {
    return new com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder(other);
  }

  /**
   * Creates a new CrossCarrierMembershipSourceSystemAttributes RecordBuilder by copying an existing CrossCarrierMembershipSourceSystemAttributes instance.
   * @param other The existing instance to copy.
   * @return A new CrossCarrierMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes other) {
    return new com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder(other);
  }

  /**
   * RecordBuilder for CrossCarrierMembershipSourceSystemAttributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CrossCarrierMembershipSourceSystemAttributes>
    implements org.apache.avro.data.RecordBuilder<CrossCarrierMembershipSourceSystemAttributes> {

    private java.lang.CharSequence carrierName;
    private java.lang.CharSequence fileName;
    private java.lang.CharSequence pKey;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.carrierName)) {
        this.carrierName = data().deepCopy(fields()[0].schema(), other.carrierName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fileName)) {
        this.fileName = data().deepCopy(fields()[1].schema(), other.fileName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pKey)) {
        this.pKey = data().deepCopy(fields()[2].schema(), other.pKey);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CrossCarrierMembershipSourceSystemAttributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.carrierName)) {
        this.carrierName = data().deepCopy(fields()[0].schema(), other.carrierName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fileName)) {
        this.fileName = data().deepCopy(fields()[1].schema(), other.fileName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pKey)) {
        this.pKey = data().deepCopy(fields()[2].schema(), other.pKey);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'carrierName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCarrierName() {
      return carrierName;
    }

    /**
      * Sets the value of the 'carrierName' field.
      * @param value The value of 'carrierName'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder setCarrierName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.carrierName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'carrierName' field has been set.
      * @return True if the 'carrierName' field has been set, false otherwise.
      */
    public boolean hasCarrierName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'carrierName' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder clearCarrierName() {
      carrierName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'fileName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFileName() {
      return fileName;
    }

    /**
      * Sets the value of the 'fileName' field.
      * @param value The value of 'fileName'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder setFileName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.fileName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'fileName' field has been set.
      * @return True if the 'fileName' field has been set, false otherwise.
      */
    public boolean hasFileName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'fileName' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder clearFileName() {
      fileName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'pKey' field.
      * @return The value.
      */
    public java.lang.CharSequence getPKey() {
      return pKey;
    }

    /**
      * Sets the value of the 'pKey' field.
      * @param value The value of 'pKey'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder setPKey(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.pKey = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'pKey' field has been set.
      * @return True if the 'pKey' field has been set, false otherwise.
      */
    public boolean hasPKey() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'pKey' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder clearPKey() {
      pKey = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CrossCarrierMembershipSourceSystemAttributes build() {
      try {
        CrossCarrierMembershipSourceSystemAttributes record = new CrossCarrierMembershipSourceSystemAttributes();
        record.carrierName = fieldSetFlags()[0] ? this.carrierName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.fileName = fieldSetFlags()[1] ? this.fileName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.pKey = fieldSetFlags()[2] ? this.pKey : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CrossCarrierMembershipSourceSystemAttributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<CrossCarrierMembershipSourceSystemAttributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CrossCarrierMembershipSourceSystemAttributes>
    READER$ = (org.apache.avro.io.DatumReader<CrossCarrierMembershipSourceSystemAttributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
