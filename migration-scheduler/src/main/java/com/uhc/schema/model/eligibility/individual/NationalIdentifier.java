/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.individual;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class NationalIdentifier extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8185236225392074960L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NationalIdentifier\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"abbreviatedIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Abbreviated value for national identifier. E.g., last four didgets of SSN.\",\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Value for national identifer.\",\"default\":null},{\"name\":\"isoCountry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"doc\":\"The country code for the national identifier.\",\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LastUpdated\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"doc\":\"Information about the last update made to a given entity.\",\"fields\":[{\"name\":\"sourceSystemTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the source system (CDB ROW_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"sourceTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the originating source (CDB SRC_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",\"string\"],\"doc\":\"The last person or application to update the entity.\",\"default\":null}]}],\"doc\":\"Last update date for national identifier.\",\"default\":null},{\"name\":\"nationalIdentiferType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<NationalIdentifier> ENCODER =
      new BinaryMessageEncoder<NationalIdentifier>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<NationalIdentifier> DECODER =
      new BinaryMessageDecoder<NationalIdentifier>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<NationalIdentifier> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<NationalIdentifier> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<NationalIdentifier>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this NationalIdentifier to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a NationalIdentifier from a ByteBuffer. */
  public static NationalIdentifier fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Abbreviated value for national identifier. E.g., last four didgets of SSN. */
  @Deprecated public java.lang.CharSequence abbreviatedIdentifier;
  /** Value for national identifer. */
  @Deprecated public java.lang.CharSequence identifier;
  /** The country code for the national identifier. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType isoCountry;
  /** Last update date for national identifier. */
  @Deprecated public com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
  /** Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType nationalIdentiferType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NationalIdentifier() {}

  /**
   * All-args constructor.
   * @param abbreviatedIdentifier Abbreviated value for national identifier. E.g., last four didgets of SSN.
   * @param identifier Value for national identifer.
   * @param isoCountry The country code for the national identifier.
   * @param lastUpdated Last update date for national identifier.
   * @param nationalIdentiferType Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.
   */
  public NationalIdentifier(java.lang.CharSequence abbreviatedIdentifier, java.lang.CharSequence identifier, com.uhc.schema.model.eligibility.common.DescriptionType isoCountry, com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated, com.uhc.schema.model.eligibility.common.DescriptionType nationalIdentiferType) {
    this.abbreviatedIdentifier = abbreviatedIdentifier;
    this.identifier = identifier;
    this.isoCountry = isoCountry;
    this.lastUpdated = lastUpdated;
    this.nationalIdentiferType = nationalIdentiferType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return abbreviatedIdentifier;
    case 1: return identifier;
    case 2: return isoCountry;
    case 3: return lastUpdated;
    case 4: return nationalIdentiferType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: abbreviatedIdentifier = (java.lang.CharSequence)value$; break;
    case 1: identifier = (java.lang.CharSequence)value$; break;
    case 2: isoCountry = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 3: lastUpdated = (com.uhc.schema.model.eligibility.common.LastUpdated)value$; break;
    case 4: nationalIdentiferType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'abbreviatedIdentifier' field.
   * @return Abbreviated value for national identifier. E.g., last four didgets of SSN.
   */
  public java.lang.CharSequence getAbbreviatedIdentifier() {
    return abbreviatedIdentifier;
  }

  /**
   * Sets the value of the 'abbreviatedIdentifier' field.
   * Abbreviated value for national identifier. E.g., last four didgets of SSN.
   * @param value the value to set.
   */
  public void setAbbreviatedIdentifier(java.lang.CharSequence value) {
    this.abbreviatedIdentifier = value;
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return Value for national identifer.
   */
  public java.lang.CharSequence getIdentifier() {
    return identifier;
  }

  /**
   * Sets the value of the 'identifier' field.
   * Value for national identifer.
   * @param value the value to set.
   */
  public void setIdentifier(java.lang.CharSequence value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'isoCountry' field.
   * @return The country code for the national identifier.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getIsoCountry() {
    return isoCountry;
  }

  /**
   * Sets the value of the 'isoCountry' field.
   * The country code for the national identifier.
   * @param value the value to set.
   */
  public void setIsoCountry(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.isoCountry = value;
  }

  /**
   * Gets the value of the 'lastUpdated' field.
   * @return Last update date for national identifier.
   */
  public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
    return lastUpdated;
  }

  /**
   * Sets the value of the 'lastUpdated' field.
   * Last update date for national identifier.
   * @param value the value to set.
   */
  public void setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
    this.lastUpdated = value;
  }

  /**
   * Gets the value of the 'nationalIdentiferType' field.
   * @return Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getNationalIdentiferType() {
    return nationalIdentiferType;
  }

  /**
   * Sets the value of the 'nationalIdentiferType' field.
   * Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.
   * @param value the value to set.
   */
  public void setNationalIdentiferType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.nationalIdentiferType = value;
  }

  /**
   * Creates a new NationalIdentifier RecordBuilder.
   * @return A new NationalIdentifier RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder();
  }

  /**
   * Creates a new NationalIdentifier RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new NationalIdentifier RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder newBuilder(com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder other) {
    return new com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder(other);
  }

  /**
   * Creates a new NationalIdentifier RecordBuilder by copying an existing NationalIdentifier instance.
   * @param other The existing instance to copy.
   * @return A new NationalIdentifier RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder newBuilder(com.uhc.schema.model.eligibility.individual.NationalIdentifier other) {
    return new com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder(other);
  }

  /**
   * RecordBuilder for NationalIdentifier instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NationalIdentifier>
    implements org.apache.avro.data.RecordBuilder<NationalIdentifier> {

    /** Abbreviated value for national identifier. E.g., last four didgets of SSN. */
    private java.lang.CharSequence abbreviatedIdentifier;
    /** Value for national identifer. */
    private java.lang.CharSequence identifier;
    /** The country code for the national identifier. */
    private com.uhc.schema.model.eligibility.common.DescriptionType isoCountry;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder isoCountryBuilder;
    /** Last update date for national identifier. */
    private com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
    private com.uhc.schema.model.eligibility.common.LastUpdated.Builder lastUpdatedBuilder;
    /** Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc. */
    private com.uhc.schema.model.eligibility.common.DescriptionType nationalIdentiferType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder nationalIdentiferTypeBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.abbreviatedIdentifier)) {
        this.abbreviatedIdentifier = data().deepCopy(fields()[0].schema(), other.abbreviatedIdentifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.identifier)) {
        this.identifier = data().deepCopy(fields()[1].schema(), other.identifier);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.isoCountry)) {
        this.isoCountry = data().deepCopy(fields()[2].schema(), other.isoCountry);
        fieldSetFlags()[2] = true;
      }
      if (other.hasIsoCountryBuilder()) {
        this.isoCountryBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getIsoCountryBuilder());
      }
      if (isValidValue(fields()[3], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[3].schema(), other.lastUpdated);
        fieldSetFlags()[3] = true;
      }
      if (other.hasLastUpdatedBuilder()) {
        this.lastUpdatedBuilder = com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(other.getLastUpdatedBuilder());
      }
      if (isValidValue(fields()[4], other.nationalIdentiferType)) {
        this.nationalIdentiferType = data().deepCopy(fields()[4].schema(), other.nationalIdentiferType);
        fieldSetFlags()[4] = true;
      }
      if (other.hasNationalIdentiferTypeBuilder()) {
        this.nationalIdentiferTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getNationalIdentiferTypeBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing NationalIdentifier instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.NationalIdentifier other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.abbreviatedIdentifier)) {
        this.abbreviatedIdentifier = data().deepCopy(fields()[0].schema(), other.abbreviatedIdentifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.identifier)) {
        this.identifier = data().deepCopy(fields()[1].schema(), other.identifier);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.isoCountry)) {
        this.isoCountry = data().deepCopy(fields()[2].schema(), other.isoCountry);
        fieldSetFlags()[2] = true;
      }
      this.isoCountryBuilder = null;
      if (isValidValue(fields()[3], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[3].schema(), other.lastUpdated);
        fieldSetFlags()[3] = true;
      }
      this.lastUpdatedBuilder = null;
      if (isValidValue(fields()[4], other.nationalIdentiferType)) {
        this.nationalIdentiferType = data().deepCopy(fields()[4].schema(), other.nationalIdentiferType);
        fieldSetFlags()[4] = true;
      }
      this.nationalIdentiferTypeBuilder = null;
    }

    /**
      * Gets the value of the 'abbreviatedIdentifier' field.
      * Abbreviated value for national identifier. E.g., last four didgets of SSN.
      * @return The value.
      */
    public java.lang.CharSequence getAbbreviatedIdentifier() {
      return abbreviatedIdentifier;
    }

    /**
      * Sets the value of the 'abbreviatedIdentifier' field.
      * Abbreviated value for national identifier. E.g., last four didgets of SSN.
      * @param value The value of 'abbreviatedIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder setAbbreviatedIdentifier(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.abbreviatedIdentifier = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'abbreviatedIdentifier' field has been set.
      * Abbreviated value for national identifier. E.g., last four didgets of SSN.
      * @return True if the 'abbreviatedIdentifier' field has been set, false otherwise.
      */
    public boolean hasAbbreviatedIdentifier() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'abbreviatedIdentifier' field.
      * Abbreviated value for national identifier. E.g., last four didgets of SSN.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder clearAbbreviatedIdentifier() {
      abbreviatedIdentifier = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'identifier' field.
      * Value for national identifer.
      * @return The value.
      */
    public java.lang.CharSequence getIdentifier() {
      return identifier;
    }

    /**
      * Sets the value of the 'identifier' field.
      * Value for national identifer.
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder setIdentifier(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.identifier = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * Value for national identifer.
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'identifier' field.
      * Value for national identifer.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder clearIdentifier() {
      identifier = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'isoCountry' field.
      * The country code for the national identifier.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getIsoCountry() {
      return isoCountry;
    }

    /**
      * Sets the value of the 'isoCountry' field.
      * The country code for the national identifier.
      * @param value The value of 'isoCountry'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder setIsoCountry(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[2], value);
      this.isoCountryBuilder = null;
      this.isoCountry = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'isoCountry' field has been set.
      * The country code for the national identifier.
      * @return True if the 'isoCountry' field has been set, false otherwise.
      */
    public boolean hasIsoCountry() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'isoCountry' field and creates one if it doesn't exist yet.
     * The country code for the national identifier.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getIsoCountryBuilder() {
      if (isoCountryBuilder == null) {
        if (hasIsoCountry()) {
          setIsoCountryBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(isoCountry));
        } else {
          setIsoCountryBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return isoCountryBuilder;
    }

    /**
     * Sets the Builder instance for the 'isoCountry' field
     * The country code for the national identifier.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder setIsoCountryBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearIsoCountry();
      isoCountryBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'isoCountry' field has an active Builder instance
     * The country code for the national identifier.
     * @return True if the 'isoCountry' field has an active Builder instance
     */
    public boolean hasIsoCountryBuilder() {
      return isoCountryBuilder != null;
    }

    /**
      * Clears the value of the 'isoCountry' field.
      * The country code for the national identifier.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder clearIsoCountry() {
      isoCountry = null;
      isoCountryBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdated' field.
      * Last update date for national identifier.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
      return lastUpdated;
    }

    /**
      * Sets the value of the 'lastUpdated' field.
      * Last update date for national identifier.
      * @param value The value of 'lastUpdated'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
      validate(fields()[3], value);
      this.lastUpdatedBuilder = null;
      this.lastUpdated = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdated' field has been set.
      * Last update date for national identifier.
      * @return True if the 'lastUpdated' field has been set, false otherwise.
      */
    public boolean hasLastUpdated() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'lastUpdated' field and creates one if it doesn't exist yet.
     * Last update date for national identifier.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.LastUpdated.Builder getLastUpdatedBuilder() {
      if (lastUpdatedBuilder == null) {
        if (hasLastUpdated()) {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(lastUpdated));
        } else {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder());
        }
      }
      return lastUpdatedBuilder;
    }

    /**
     * Sets the Builder instance for the 'lastUpdated' field
     * Last update date for national identifier.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.Builder value) {
      clearLastUpdated();
      lastUpdatedBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'lastUpdated' field has an active Builder instance
     * Last update date for national identifier.
     * @return True if the 'lastUpdated' field has an active Builder instance
     */
    public boolean hasLastUpdatedBuilder() {
      return lastUpdatedBuilder != null;
    }

    /**
      * Clears the value of the 'lastUpdated' field.
      * Last update date for national identifier.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder clearLastUpdated() {
      lastUpdated = null;
      lastUpdatedBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'nationalIdentiferType' field.
      * Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getNationalIdentiferType() {
      return nationalIdentiferType;
    }

    /**
      * Sets the value of the 'nationalIdentiferType' field.
      * Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.
      * @param value The value of 'nationalIdentiferType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder setNationalIdentiferType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[4], value);
      this.nationalIdentiferTypeBuilder = null;
      this.nationalIdentiferType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'nationalIdentiferType' field has been set.
      * Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.
      * @return True if the 'nationalIdentiferType' field has been set, false otherwise.
      */
    public boolean hasNationalIdentiferType() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'nationalIdentiferType' field and creates one if it doesn't exist yet.
     * Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getNationalIdentiferTypeBuilder() {
      if (nationalIdentiferTypeBuilder == null) {
        if (hasNationalIdentiferType()) {
          setNationalIdentiferTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(nationalIdentiferType));
        } else {
          setNationalIdentiferTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return nationalIdentiferTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'nationalIdentiferType' field
     * Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder setNationalIdentiferTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearNationalIdentiferType();
      nationalIdentiferTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'nationalIdentiferType' field has an active Builder instance
     * Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.
     * @return True if the 'nationalIdentiferType' field has an active Builder instance
     */
    public boolean hasNationalIdentiferTypeBuilder() {
      return nationalIdentiferTypeBuilder != null;
    }

    /**
      * Clears the value of the 'nationalIdentiferType' field.
      * Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.NationalIdentifier.Builder clearNationalIdentiferType() {
      nationalIdentiferType = null;
      nationalIdentiferTypeBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public NationalIdentifier build() {
      try {
        NationalIdentifier record = new NationalIdentifier();
        record.abbreviatedIdentifier = fieldSetFlags()[0] ? this.abbreviatedIdentifier : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.identifier = fieldSetFlags()[1] ? this.identifier : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (isoCountryBuilder != null) {
          record.isoCountry = this.isoCountryBuilder.build();
        } else {
          record.isoCountry = fieldSetFlags()[2] ? this.isoCountry : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[2]);
        }
        if (lastUpdatedBuilder != null) {
          record.lastUpdated = this.lastUpdatedBuilder.build();
        } else {
          record.lastUpdated = fieldSetFlags()[3] ? this.lastUpdated : (com.uhc.schema.model.eligibility.common.LastUpdated) defaultValue(fields()[3]);
        }
        if (nationalIdentiferTypeBuilder != null) {
          record.nationalIdentiferType = this.nationalIdentiferTypeBuilder.build();
        } else {
          record.nationalIdentiferType = fieldSetFlags()[4] ? this.nationalIdentiferType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[4]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<NationalIdentifier>
    WRITER$ = (org.apache.avro.io.DatumWriter<NationalIdentifier>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<NationalIdentifier>
    READER$ = (org.apache.avro.io.DatumReader<NationalIdentifier>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
