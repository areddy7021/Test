/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.individual;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ElectronicAddress extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5338419944165493087L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ElectronicAddress\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"communicationType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"contactStatusType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"electronicAddress\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"invalidEmailIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"lastUpdated\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LastUpdated\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"doc\":\"Information about the last update made to a given entity.\",\"fields\":[{\"name\":\"sourceSystemTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the source system (CDB ROW_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"sourceTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the originating source (CDB SRC_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",\"string\"],\"doc\":\"The last person or application to update the entity.\",\"default\":null}]}],\"default\":null},{\"name\":\"messageFormatType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"optOutIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"preferredIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"primaryIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sourceCode\",\"type\":[\"null\",\"string\"],\"default\":null,\"aliases\":[\"sourceSystemCode\"]},{\"name\":\"standardFormattingIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"textOnlyIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"undeliverableReason\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ElectronicAddress> ENCODER =
      new BinaryMessageEncoder<ElectronicAddress>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ElectronicAddress> DECODER =
      new BinaryMessageDecoder<ElectronicAddress>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ElectronicAddress> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ElectronicAddress> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ElectronicAddress>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ElectronicAddress to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ElectronicAddress from a ByteBuffer. */
  public static ElectronicAddress fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public boolean active;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType communicationType;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType contactStatusType;
  @Deprecated public java.lang.CharSequence electronicAddress;
  @Deprecated public boolean invalidEmailIndicator;
  @Deprecated public com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType messageFormatType;
  @Deprecated public boolean optOutIndicator;
  @Deprecated public boolean preferredIndicator;
  @Deprecated public boolean primaryIndicator;
  @Deprecated public java.lang.CharSequence sourceCode;
  @Deprecated public boolean standardFormattingIndicator;
  @Deprecated public boolean textOnlyIndicator;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType undeliverableReason;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ElectronicAddress() {}

  /**
   * All-args constructor.
   * @param active The new value for active
   * @param communicationType The new value for communicationType
   * @param contactStatusType The new value for contactStatusType
   * @param electronicAddress The new value for electronicAddress
   * @param invalidEmailIndicator The new value for invalidEmailIndicator
   * @param lastUpdated The new value for lastUpdated
   * @param messageFormatType The new value for messageFormatType
   * @param optOutIndicator The new value for optOutIndicator
   * @param preferredIndicator The new value for preferredIndicator
   * @param primaryIndicator The new value for primaryIndicator
   * @param sourceCode The new value for sourceCode
   * @param standardFormattingIndicator The new value for standardFormattingIndicator
   * @param textOnlyIndicator The new value for textOnlyIndicator
   * @param undeliverableReason The new value for undeliverableReason
   */
  public ElectronicAddress(java.lang.Boolean active, com.uhc.schema.model.eligibility.common.DescriptionType communicationType, com.uhc.schema.model.eligibility.common.DescriptionType contactStatusType, java.lang.CharSequence electronicAddress, java.lang.Boolean invalidEmailIndicator, com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated, com.uhc.schema.model.eligibility.common.DescriptionType messageFormatType, java.lang.Boolean optOutIndicator, java.lang.Boolean preferredIndicator, java.lang.Boolean primaryIndicator, java.lang.CharSequence sourceCode, java.lang.Boolean standardFormattingIndicator, java.lang.Boolean textOnlyIndicator, com.uhc.schema.model.eligibility.common.DescriptionType undeliverableReason) {
    this.active = active;
    this.communicationType = communicationType;
    this.contactStatusType = contactStatusType;
    this.electronicAddress = electronicAddress;
    this.invalidEmailIndicator = invalidEmailIndicator;
    this.lastUpdated = lastUpdated;
    this.messageFormatType = messageFormatType;
    this.optOutIndicator = optOutIndicator;
    this.preferredIndicator = preferredIndicator;
    this.primaryIndicator = primaryIndicator;
    this.sourceCode = sourceCode;
    this.standardFormattingIndicator = standardFormattingIndicator;
    this.textOnlyIndicator = textOnlyIndicator;
    this.undeliverableReason = undeliverableReason;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return active;
    case 1: return communicationType;
    case 2: return contactStatusType;
    case 3: return electronicAddress;
    case 4: return invalidEmailIndicator;
    case 5: return lastUpdated;
    case 6: return messageFormatType;
    case 7: return optOutIndicator;
    case 8: return preferredIndicator;
    case 9: return primaryIndicator;
    case 10: return sourceCode;
    case 11: return standardFormattingIndicator;
    case 12: return textOnlyIndicator;
    case 13: return undeliverableReason;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: active = (java.lang.Boolean)value$; break;
    case 1: communicationType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 2: contactStatusType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 3: electronicAddress = (java.lang.CharSequence)value$; break;
    case 4: invalidEmailIndicator = (java.lang.Boolean)value$; break;
    case 5: lastUpdated = (com.uhc.schema.model.eligibility.common.LastUpdated)value$; break;
    case 6: messageFormatType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 7: optOutIndicator = (java.lang.Boolean)value$; break;
    case 8: preferredIndicator = (java.lang.Boolean)value$; break;
    case 9: primaryIndicator = (java.lang.Boolean)value$; break;
    case 10: sourceCode = (java.lang.CharSequence)value$; break;
    case 11: standardFormattingIndicator = (java.lang.Boolean)value$; break;
    case 12: textOnlyIndicator = (java.lang.Boolean)value$; break;
    case 13: undeliverableReason = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public java.lang.Boolean getActive() {
    return active;
  }

  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'communicationType' field.
   * @return The value of the 'communicationType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getCommunicationType() {
    return communicationType;
  }

  /**
   * Sets the value of the 'communicationType' field.
   * @param value the value to set.
   */
  public void setCommunicationType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.communicationType = value;
  }

  /**
   * Gets the value of the 'contactStatusType' field.
   * @return The value of the 'contactStatusType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getContactStatusType() {
    return contactStatusType;
  }

  /**
   * Sets the value of the 'contactStatusType' field.
   * @param value the value to set.
   */
  public void setContactStatusType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.contactStatusType = value;
  }

  /**
   * Gets the value of the 'electronicAddress' field.
   * @return The value of the 'electronicAddress' field.
   */
  public java.lang.CharSequence getElectronicAddress() {
    return electronicAddress;
  }

  /**
   * Sets the value of the 'electronicAddress' field.
   * @param value the value to set.
   */
  public void setElectronicAddress(java.lang.CharSequence value) {
    this.electronicAddress = value;
  }

  /**
   * Gets the value of the 'invalidEmailIndicator' field.
   * @return The value of the 'invalidEmailIndicator' field.
   */
  public java.lang.Boolean getInvalidEmailIndicator() {
    return invalidEmailIndicator;
  }

  /**
   * Sets the value of the 'invalidEmailIndicator' field.
   * @param value the value to set.
   */
  public void setInvalidEmailIndicator(java.lang.Boolean value) {
    this.invalidEmailIndicator = value;
  }

  /**
   * Gets the value of the 'lastUpdated' field.
   * @return The value of the 'lastUpdated' field.
   */
  public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
    return lastUpdated;
  }

  /**
   * Sets the value of the 'lastUpdated' field.
   * @param value the value to set.
   */
  public void setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
    this.lastUpdated = value;
  }

  /**
   * Gets the value of the 'messageFormatType' field.
   * @return The value of the 'messageFormatType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getMessageFormatType() {
    return messageFormatType;
  }

  /**
   * Sets the value of the 'messageFormatType' field.
   * @param value the value to set.
   */
  public void setMessageFormatType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.messageFormatType = value;
  }

  /**
   * Gets the value of the 'optOutIndicator' field.
   * @return The value of the 'optOutIndicator' field.
   */
  public java.lang.Boolean getOptOutIndicator() {
    return optOutIndicator;
  }

  /**
   * Sets the value of the 'optOutIndicator' field.
   * @param value the value to set.
   */
  public void setOptOutIndicator(java.lang.Boolean value) {
    this.optOutIndicator = value;
  }

  /**
   * Gets the value of the 'preferredIndicator' field.
   * @return The value of the 'preferredIndicator' field.
   */
  public java.lang.Boolean getPreferredIndicator() {
    return preferredIndicator;
  }

  /**
   * Sets the value of the 'preferredIndicator' field.
   * @param value the value to set.
   */
  public void setPreferredIndicator(java.lang.Boolean value) {
    this.preferredIndicator = value;
  }

  /**
   * Gets the value of the 'primaryIndicator' field.
   * @return The value of the 'primaryIndicator' field.
   */
  public java.lang.Boolean getPrimaryIndicator() {
    return primaryIndicator;
  }

  /**
   * Sets the value of the 'primaryIndicator' field.
   * @param value the value to set.
   */
  public void setPrimaryIndicator(java.lang.Boolean value) {
    this.primaryIndicator = value;
  }

  /**
   * Gets the value of the 'sourceCode' field.
   * @return The value of the 'sourceCode' field.
   */
  public java.lang.CharSequence getSourceCode() {
    return sourceCode;
  }

  /**
   * Sets the value of the 'sourceCode' field.
   * @param value the value to set.
   */
  public void setSourceCode(java.lang.CharSequence value) {
    this.sourceCode = value;
  }

  /**
   * Gets the value of the 'standardFormattingIndicator' field.
   * @return The value of the 'standardFormattingIndicator' field.
   */
  public java.lang.Boolean getStandardFormattingIndicator() {
    return standardFormattingIndicator;
  }

  /**
   * Sets the value of the 'standardFormattingIndicator' field.
   * @param value the value to set.
   */
  public void setStandardFormattingIndicator(java.lang.Boolean value) {
    this.standardFormattingIndicator = value;
  }

  /**
   * Gets the value of the 'textOnlyIndicator' field.
   * @return The value of the 'textOnlyIndicator' field.
   */
  public java.lang.Boolean getTextOnlyIndicator() {
    return textOnlyIndicator;
  }

  /**
   * Sets the value of the 'textOnlyIndicator' field.
   * @param value the value to set.
   */
  public void setTextOnlyIndicator(java.lang.Boolean value) {
    this.textOnlyIndicator = value;
  }

  /**
   * Gets the value of the 'undeliverableReason' field.
   * @return The value of the 'undeliverableReason' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getUndeliverableReason() {
    return undeliverableReason;
  }

  /**
   * Sets the value of the 'undeliverableReason' field.
   * @param value the value to set.
   */
  public void setUndeliverableReason(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.undeliverableReason = value;
  }

  /**
   * Creates a new ElectronicAddress RecordBuilder.
   * @return A new ElectronicAddress RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder();
  }

  /**
   * Creates a new ElectronicAddress RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ElectronicAddress RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder newBuilder(com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder other) {
    return new com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder(other);
  }

  /**
   * Creates a new ElectronicAddress RecordBuilder by copying an existing ElectronicAddress instance.
   * @param other The existing instance to copy.
   * @return A new ElectronicAddress RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder newBuilder(com.uhc.schema.model.eligibility.individual.ElectronicAddress other) {
    return new com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder(other);
  }

  /**
   * RecordBuilder for ElectronicAddress instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ElectronicAddress>
    implements org.apache.avro.data.RecordBuilder<ElectronicAddress> {

    private boolean active;
    private com.uhc.schema.model.eligibility.common.DescriptionType communicationType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder communicationTypeBuilder;
    private com.uhc.schema.model.eligibility.common.DescriptionType contactStatusType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder contactStatusTypeBuilder;
    private java.lang.CharSequence electronicAddress;
    private boolean invalidEmailIndicator;
    private com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
    private com.uhc.schema.model.eligibility.common.LastUpdated.Builder lastUpdatedBuilder;
    private com.uhc.schema.model.eligibility.common.DescriptionType messageFormatType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder messageFormatTypeBuilder;
    private boolean optOutIndicator;
    private boolean preferredIndicator;
    private boolean primaryIndicator;
    private java.lang.CharSequence sourceCode;
    private boolean standardFormattingIndicator;
    private boolean textOnlyIndicator;
    private com.uhc.schema.model.eligibility.common.DescriptionType undeliverableReason;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder undeliverableReasonBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.communicationType)) {
        this.communicationType = data().deepCopy(fields()[1].schema(), other.communicationType);
        fieldSetFlags()[1] = true;
      }
      if (other.hasCommunicationTypeBuilder()) {
        this.communicationTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getCommunicationTypeBuilder());
      }
      if (isValidValue(fields()[2], other.contactStatusType)) {
        this.contactStatusType = data().deepCopy(fields()[2].schema(), other.contactStatusType);
        fieldSetFlags()[2] = true;
      }
      if (other.hasContactStatusTypeBuilder()) {
        this.contactStatusTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getContactStatusTypeBuilder());
      }
      if (isValidValue(fields()[3], other.electronicAddress)) {
        this.electronicAddress = data().deepCopy(fields()[3].schema(), other.electronicAddress);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.invalidEmailIndicator)) {
        this.invalidEmailIndicator = data().deepCopy(fields()[4].schema(), other.invalidEmailIndicator);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[5].schema(), other.lastUpdated);
        fieldSetFlags()[5] = true;
      }
      if (other.hasLastUpdatedBuilder()) {
        this.lastUpdatedBuilder = com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(other.getLastUpdatedBuilder());
      }
      if (isValidValue(fields()[6], other.messageFormatType)) {
        this.messageFormatType = data().deepCopy(fields()[6].schema(), other.messageFormatType);
        fieldSetFlags()[6] = true;
      }
      if (other.hasMessageFormatTypeBuilder()) {
        this.messageFormatTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getMessageFormatTypeBuilder());
      }
      if (isValidValue(fields()[7], other.optOutIndicator)) {
        this.optOutIndicator = data().deepCopy(fields()[7].schema(), other.optOutIndicator);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.preferredIndicator)) {
        this.preferredIndicator = data().deepCopy(fields()[8].schema(), other.preferredIndicator);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.primaryIndicator)) {
        this.primaryIndicator = data().deepCopy(fields()[9].schema(), other.primaryIndicator);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.sourceCode)) {
        this.sourceCode = data().deepCopy(fields()[10].schema(), other.sourceCode);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.standardFormattingIndicator)) {
        this.standardFormattingIndicator = data().deepCopy(fields()[11].schema(), other.standardFormattingIndicator);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.textOnlyIndicator)) {
        this.textOnlyIndicator = data().deepCopy(fields()[12].schema(), other.textOnlyIndicator);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.undeliverableReason)) {
        this.undeliverableReason = data().deepCopy(fields()[13].schema(), other.undeliverableReason);
        fieldSetFlags()[13] = true;
      }
      if (other.hasUndeliverableReasonBuilder()) {
        this.undeliverableReasonBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getUndeliverableReasonBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing ElectronicAddress instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.ElectronicAddress other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.communicationType)) {
        this.communicationType = data().deepCopy(fields()[1].schema(), other.communicationType);
        fieldSetFlags()[1] = true;
      }
      this.communicationTypeBuilder = null;
      if (isValidValue(fields()[2], other.contactStatusType)) {
        this.contactStatusType = data().deepCopy(fields()[2].schema(), other.contactStatusType);
        fieldSetFlags()[2] = true;
      }
      this.contactStatusTypeBuilder = null;
      if (isValidValue(fields()[3], other.electronicAddress)) {
        this.electronicAddress = data().deepCopy(fields()[3].schema(), other.electronicAddress);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.invalidEmailIndicator)) {
        this.invalidEmailIndicator = data().deepCopy(fields()[4].schema(), other.invalidEmailIndicator);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[5].schema(), other.lastUpdated);
        fieldSetFlags()[5] = true;
      }
      this.lastUpdatedBuilder = null;
      if (isValidValue(fields()[6], other.messageFormatType)) {
        this.messageFormatType = data().deepCopy(fields()[6].schema(), other.messageFormatType);
        fieldSetFlags()[6] = true;
      }
      this.messageFormatTypeBuilder = null;
      if (isValidValue(fields()[7], other.optOutIndicator)) {
        this.optOutIndicator = data().deepCopy(fields()[7].schema(), other.optOutIndicator);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.preferredIndicator)) {
        this.preferredIndicator = data().deepCopy(fields()[8].schema(), other.preferredIndicator);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.primaryIndicator)) {
        this.primaryIndicator = data().deepCopy(fields()[9].schema(), other.primaryIndicator);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.sourceCode)) {
        this.sourceCode = data().deepCopy(fields()[10].schema(), other.sourceCode);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.standardFormattingIndicator)) {
        this.standardFormattingIndicator = data().deepCopy(fields()[11].schema(), other.standardFormattingIndicator);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.textOnlyIndicator)) {
        this.textOnlyIndicator = data().deepCopy(fields()[12].schema(), other.textOnlyIndicator);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.undeliverableReason)) {
        this.undeliverableReason = data().deepCopy(fields()[13].schema(), other.undeliverableReason);
        fieldSetFlags()[13] = true;
      }
      this.undeliverableReasonBuilder = null;
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public java.lang.Boolean getActive() {
      return active;
    }

    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setActive(boolean value) {
      validate(fields()[0], value);
      this.active = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearActive() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'communicationType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getCommunicationType() {
      return communicationType;
    }

    /**
      * Sets the value of the 'communicationType' field.
      * @param value The value of 'communicationType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setCommunicationType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[1], value);
      this.communicationTypeBuilder = null;
      this.communicationType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'communicationType' field has been set.
      * @return True if the 'communicationType' field has been set, false otherwise.
      */
    public boolean hasCommunicationType() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'communicationType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getCommunicationTypeBuilder() {
      if (communicationTypeBuilder == null) {
        if (hasCommunicationType()) {
          setCommunicationTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(communicationType));
        } else {
          setCommunicationTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return communicationTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'communicationType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setCommunicationTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearCommunicationType();
      communicationTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'communicationType' field has an active Builder instance
     * @return True if the 'communicationType' field has an active Builder instance
     */
    public boolean hasCommunicationTypeBuilder() {
      return communicationTypeBuilder != null;
    }

    /**
      * Clears the value of the 'communicationType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearCommunicationType() {
      communicationType = null;
      communicationTypeBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'contactStatusType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getContactStatusType() {
      return contactStatusType;
    }

    /**
      * Sets the value of the 'contactStatusType' field.
      * @param value The value of 'contactStatusType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setContactStatusType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[2], value);
      this.contactStatusTypeBuilder = null;
      this.contactStatusType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'contactStatusType' field has been set.
      * @return True if the 'contactStatusType' field has been set, false otherwise.
      */
    public boolean hasContactStatusType() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'contactStatusType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getContactStatusTypeBuilder() {
      if (contactStatusTypeBuilder == null) {
        if (hasContactStatusType()) {
          setContactStatusTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(contactStatusType));
        } else {
          setContactStatusTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return contactStatusTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'contactStatusType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setContactStatusTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearContactStatusType();
      contactStatusTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'contactStatusType' field has an active Builder instance
     * @return True if the 'contactStatusType' field has an active Builder instance
     */
    public boolean hasContactStatusTypeBuilder() {
      return contactStatusTypeBuilder != null;
    }

    /**
      * Clears the value of the 'contactStatusType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearContactStatusType() {
      contactStatusType = null;
      contactStatusTypeBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'electronicAddress' field.
      * @return The value.
      */
    public java.lang.CharSequence getElectronicAddress() {
      return electronicAddress;
    }

    /**
      * Sets the value of the 'electronicAddress' field.
      * @param value The value of 'electronicAddress'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setElectronicAddress(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.electronicAddress = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'electronicAddress' field has been set.
      * @return True if the 'electronicAddress' field has been set, false otherwise.
      */
    public boolean hasElectronicAddress() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'electronicAddress' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearElectronicAddress() {
      electronicAddress = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'invalidEmailIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getInvalidEmailIndicator() {
      return invalidEmailIndicator;
    }

    /**
      * Sets the value of the 'invalidEmailIndicator' field.
      * @param value The value of 'invalidEmailIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setInvalidEmailIndicator(boolean value) {
      validate(fields()[4], value);
      this.invalidEmailIndicator = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'invalidEmailIndicator' field has been set.
      * @return True if the 'invalidEmailIndicator' field has been set, false otherwise.
      */
    public boolean hasInvalidEmailIndicator() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'invalidEmailIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearInvalidEmailIndicator() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdated' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
      return lastUpdated;
    }

    /**
      * Sets the value of the 'lastUpdated' field.
      * @param value The value of 'lastUpdated'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
      validate(fields()[5], value);
      this.lastUpdatedBuilder = null;
      this.lastUpdated = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdated' field has been set.
      * @return True if the 'lastUpdated' field has been set, false otherwise.
      */
    public boolean hasLastUpdated() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'lastUpdated' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.LastUpdated.Builder getLastUpdatedBuilder() {
      if (lastUpdatedBuilder == null) {
        if (hasLastUpdated()) {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(lastUpdated));
        } else {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder());
        }
      }
      return lastUpdatedBuilder;
    }

    /**
     * Sets the Builder instance for the 'lastUpdated' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.Builder value) {
      clearLastUpdated();
      lastUpdatedBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'lastUpdated' field has an active Builder instance
     * @return True if the 'lastUpdated' field has an active Builder instance
     */
    public boolean hasLastUpdatedBuilder() {
      return lastUpdatedBuilder != null;
    }

    /**
      * Clears the value of the 'lastUpdated' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearLastUpdated() {
      lastUpdated = null;
      lastUpdatedBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'messageFormatType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getMessageFormatType() {
      return messageFormatType;
    }

    /**
      * Sets the value of the 'messageFormatType' field.
      * @param value The value of 'messageFormatType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setMessageFormatType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[6], value);
      this.messageFormatTypeBuilder = null;
      this.messageFormatType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'messageFormatType' field has been set.
      * @return True if the 'messageFormatType' field has been set, false otherwise.
      */
    public boolean hasMessageFormatType() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'messageFormatType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getMessageFormatTypeBuilder() {
      if (messageFormatTypeBuilder == null) {
        if (hasMessageFormatType()) {
          setMessageFormatTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(messageFormatType));
        } else {
          setMessageFormatTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return messageFormatTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'messageFormatType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setMessageFormatTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearMessageFormatType();
      messageFormatTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'messageFormatType' field has an active Builder instance
     * @return True if the 'messageFormatType' field has an active Builder instance
     */
    public boolean hasMessageFormatTypeBuilder() {
      return messageFormatTypeBuilder != null;
    }

    /**
      * Clears the value of the 'messageFormatType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearMessageFormatType() {
      messageFormatType = null;
      messageFormatTypeBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'optOutIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getOptOutIndicator() {
      return optOutIndicator;
    }

    /**
      * Sets the value of the 'optOutIndicator' field.
      * @param value The value of 'optOutIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setOptOutIndicator(boolean value) {
      validate(fields()[7], value);
      this.optOutIndicator = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'optOutIndicator' field has been set.
      * @return True if the 'optOutIndicator' field has been set, false otherwise.
      */
    public boolean hasOptOutIndicator() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'optOutIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearOptOutIndicator() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'preferredIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getPreferredIndicator() {
      return preferredIndicator;
    }

    /**
      * Sets the value of the 'preferredIndicator' field.
      * @param value The value of 'preferredIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setPreferredIndicator(boolean value) {
      validate(fields()[8], value);
      this.preferredIndicator = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'preferredIndicator' field has been set.
      * @return True if the 'preferredIndicator' field has been set, false otherwise.
      */
    public boolean hasPreferredIndicator() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'preferredIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearPreferredIndicator() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'primaryIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getPrimaryIndicator() {
      return primaryIndicator;
    }

    /**
      * Sets the value of the 'primaryIndicator' field.
      * @param value The value of 'primaryIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setPrimaryIndicator(boolean value) {
      validate(fields()[9], value);
      this.primaryIndicator = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'primaryIndicator' field has been set.
      * @return True if the 'primaryIndicator' field has been set, false otherwise.
      */
    public boolean hasPrimaryIndicator() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'primaryIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearPrimaryIndicator() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceCode() {
      return sourceCode;
    }

    /**
      * Sets the value of the 'sourceCode' field.
      * @param value The value of 'sourceCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setSourceCode(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.sourceCode = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceCode' field has been set.
      * @return True if the 'sourceCode' field has been set, false otherwise.
      */
    public boolean hasSourceCode() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'sourceCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearSourceCode() {
      sourceCode = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'standardFormattingIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getStandardFormattingIndicator() {
      return standardFormattingIndicator;
    }

    /**
      * Sets the value of the 'standardFormattingIndicator' field.
      * @param value The value of 'standardFormattingIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setStandardFormattingIndicator(boolean value) {
      validate(fields()[11], value);
      this.standardFormattingIndicator = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'standardFormattingIndicator' field has been set.
      * @return True if the 'standardFormattingIndicator' field has been set, false otherwise.
      */
    public boolean hasStandardFormattingIndicator() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'standardFormattingIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearStandardFormattingIndicator() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'textOnlyIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getTextOnlyIndicator() {
      return textOnlyIndicator;
    }

    /**
      * Sets the value of the 'textOnlyIndicator' field.
      * @param value The value of 'textOnlyIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setTextOnlyIndicator(boolean value) {
      validate(fields()[12], value);
      this.textOnlyIndicator = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'textOnlyIndicator' field has been set.
      * @return True if the 'textOnlyIndicator' field has been set, false otherwise.
      */
    public boolean hasTextOnlyIndicator() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'textOnlyIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearTextOnlyIndicator() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'undeliverableReason' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getUndeliverableReason() {
      return undeliverableReason;
    }

    /**
      * Sets the value of the 'undeliverableReason' field.
      * @param value The value of 'undeliverableReason'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setUndeliverableReason(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[13], value);
      this.undeliverableReasonBuilder = null;
      this.undeliverableReason = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'undeliverableReason' field has been set.
      * @return True if the 'undeliverableReason' field has been set, false otherwise.
      */
    public boolean hasUndeliverableReason() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'undeliverableReason' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getUndeliverableReasonBuilder() {
      if (undeliverableReasonBuilder == null) {
        if (hasUndeliverableReason()) {
          setUndeliverableReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(undeliverableReason));
        } else {
          setUndeliverableReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return undeliverableReasonBuilder;
    }

    /**
     * Sets the Builder instance for the 'undeliverableReason' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder setUndeliverableReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearUndeliverableReason();
      undeliverableReasonBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'undeliverableReason' field has an active Builder instance
     * @return True if the 'undeliverableReason' field has an active Builder instance
     */
    public boolean hasUndeliverableReasonBuilder() {
      return undeliverableReasonBuilder != null;
    }

    /**
      * Clears the value of the 'undeliverableReason' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.ElectronicAddress.Builder clearUndeliverableReason() {
      undeliverableReason = null;
      undeliverableReasonBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ElectronicAddress build() {
      try {
        ElectronicAddress record = new ElectronicAddress();
        record.active = fieldSetFlags()[0] ? this.active : (java.lang.Boolean) defaultValue(fields()[0]);
        if (communicationTypeBuilder != null) {
          record.communicationType = this.communicationTypeBuilder.build();
        } else {
          record.communicationType = fieldSetFlags()[1] ? this.communicationType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[1]);
        }
        if (contactStatusTypeBuilder != null) {
          record.contactStatusType = this.contactStatusTypeBuilder.build();
        } else {
          record.contactStatusType = fieldSetFlags()[2] ? this.contactStatusType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[2]);
        }
        record.electronicAddress = fieldSetFlags()[3] ? this.electronicAddress : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.invalidEmailIndicator = fieldSetFlags()[4] ? this.invalidEmailIndicator : (java.lang.Boolean) defaultValue(fields()[4]);
        if (lastUpdatedBuilder != null) {
          record.lastUpdated = this.lastUpdatedBuilder.build();
        } else {
          record.lastUpdated = fieldSetFlags()[5] ? this.lastUpdated : (com.uhc.schema.model.eligibility.common.LastUpdated) defaultValue(fields()[5]);
        }
        if (messageFormatTypeBuilder != null) {
          record.messageFormatType = this.messageFormatTypeBuilder.build();
        } else {
          record.messageFormatType = fieldSetFlags()[6] ? this.messageFormatType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[6]);
        }
        record.optOutIndicator = fieldSetFlags()[7] ? this.optOutIndicator : (java.lang.Boolean) defaultValue(fields()[7]);
        record.preferredIndicator = fieldSetFlags()[8] ? this.preferredIndicator : (java.lang.Boolean) defaultValue(fields()[8]);
        record.primaryIndicator = fieldSetFlags()[9] ? this.primaryIndicator : (java.lang.Boolean) defaultValue(fields()[9]);
        record.sourceCode = fieldSetFlags()[10] ? this.sourceCode : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.standardFormattingIndicator = fieldSetFlags()[11] ? this.standardFormattingIndicator : (java.lang.Boolean) defaultValue(fields()[11]);
        record.textOnlyIndicator = fieldSetFlags()[12] ? this.textOnlyIndicator : (java.lang.Boolean) defaultValue(fields()[12]);
        if (undeliverableReasonBuilder != null) {
          record.undeliverableReason = this.undeliverableReasonBuilder.build();
        } else {
          record.undeliverableReason = fieldSetFlags()[13] ? this.undeliverableReason : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[13]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ElectronicAddress>
    WRITER$ = (org.apache.avro.io.DatumWriter<ElectronicAddress>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ElectronicAddress>
    READER$ = (org.apache.avro.io.DatumReader<ElectronicAddress>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
