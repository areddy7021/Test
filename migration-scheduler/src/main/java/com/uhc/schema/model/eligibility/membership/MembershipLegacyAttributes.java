/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.membership;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MembershipLegacyAttributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1344109964860517251L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MembershipLegacyAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.membership\",\"fields\":[{\"name\":\"cancelReasonType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"coverageLevel\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"governmentProgramType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"railRoadBenefitGroupChoiceTxt\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"railRoadBenefitGroupNumberId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"railRoadBranchRepresentativeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"railRoadOptOutPlanIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"railRoadUnionCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"stateIssueCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"travelBenefitIndicator\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MembershipLegacyAttributes> ENCODER =
      new BinaryMessageEncoder<MembershipLegacyAttributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MembershipLegacyAttributes> DECODER =
      new BinaryMessageDecoder<MembershipLegacyAttributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MembershipLegacyAttributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MembershipLegacyAttributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MembershipLegacyAttributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MembershipLegacyAttributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MembershipLegacyAttributes from a ByteBuffer. */
  public static MembershipLegacyAttributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType cancelReasonType;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType coverageLevel;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType governmentProgramType;
  @Deprecated public java.lang.CharSequence railRoadBenefitGroupChoiceTxt;
  @Deprecated public java.lang.CharSequence railRoadBenefitGroupNumberId;
  @Deprecated public java.lang.CharSequence railRoadBranchRepresentativeCode;
  @Deprecated public java.lang.CharSequence railRoadOptOutPlanIndicator;
  @Deprecated public java.lang.CharSequence railRoadUnionCode;
  @Deprecated public java.lang.CharSequence stateIssueCode;
  @Deprecated public java.lang.CharSequence travelBenefitIndicator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MembershipLegacyAttributes() {}

  /**
   * All-args constructor.
   * @param cancelReasonType The new value for cancelReasonType
   * @param coverageLevel The new value for coverageLevel
   * @param governmentProgramType The new value for governmentProgramType
   * @param railRoadBenefitGroupChoiceTxt The new value for railRoadBenefitGroupChoiceTxt
   * @param railRoadBenefitGroupNumberId The new value for railRoadBenefitGroupNumberId
   * @param railRoadBranchRepresentativeCode The new value for railRoadBranchRepresentativeCode
   * @param railRoadOptOutPlanIndicator The new value for railRoadOptOutPlanIndicator
   * @param railRoadUnionCode The new value for railRoadUnionCode
   * @param stateIssueCode The new value for stateIssueCode
   * @param travelBenefitIndicator The new value for travelBenefitIndicator
   */
  public MembershipLegacyAttributes(com.uhc.schema.model.eligibility.common.DescriptionType cancelReasonType, com.uhc.schema.model.eligibility.common.DescriptionType coverageLevel, com.uhc.schema.model.eligibility.common.DescriptionType governmentProgramType, java.lang.CharSequence railRoadBenefitGroupChoiceTxt, java.lang.CharSequence railRoadBenefitGroupNumberId, java.lang.CharSequence railRoadBranchRepresentativeCode, java.lang.CharSequence railRoadOptOutPlanIndicator, java.lang.CharSequence railRoadUnionCode, java.lang.CharSequence stateIssueCode, java.lang.CharSequence travelBenefitIndicator) {
    this.cancelReasonType = cancelReasonType;
    this.coverageLevel = coverageLevel;
    this.governmentProgramType = governmentProgramType;
    this.railRoadBenefitGroupChoiceTxt = railRoadBenefitGroupChoiceTxt;
    this.railRoadBenefitGroupNumberId = railRoadBenefitGroupNumberId;
    this.railRoadBranchRepresentativeCode = railRoadBranchRepresentativeCode;
    this.railRoadOptOutPlanIndicator = railRoadOptOutPlanIndicator;
    this.railRoadUnionCode = railRoadUnionCode;
    this.stateIssueCode = stateIssueCode;
    this.travelBenefitIndicator = travelBenefitIndicator;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return cancelReasonType;
    case 1: return coverageLevel;
    case 2: return governmentProgramType;
    case 3: return railRoadBenefitGroupChoiceTxt;
    case 4: return railRoadBenefitGroupNumberId;
    case 5: return railRoadBranchRepresentativeCode;
    case 6: return railRoadOptOutPlanIndicator;
    case 7: return railRoadUnionCode;
    case 8: return stateIssueCode;
    case 9: return travelBenefitIndicator;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: cancelReasonType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 1: coverageLevel = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 2: governmentProgramType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 3: railRoadBenefitGroupChoiceTxt = (java.lang.CharSequence)value$; break;
    case 4: railRoadBenefitGroupNumberId = (java.lang.CharSequence)value$; break;
    case 5: railRoadBranchRepresentativeCode = (java.lang.CharSequence)value$; break;
    case 6: railRoadOptOutPlanIndicator = (java.lang.CharSequence)value$; break;
    case 7: railRoadUnionCode = (java.lang.CharSequence)value$; break;
    case 8: stateIssueCode = (java.lang.CharSequence)value$; break;
    case 9: travelBenefitIndicator = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'cancelReasonType' field.
   * @return The value of the 'cancelReasonType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getCancelReasonType() {
    return cancelReasonType;
  }

  /**
   * Sets the value of the 'cancelReasonType' field.
   * @param value the value to set.
   */
  public void setCancelReasonType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.cancelReasonType = value;
  }

  /**
   * Gets the value of the 'coverageLevel' field.
   * @return The value of the 'coverageLevel' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getCoverageLevel() {
    return coverageLevel;
  }

  /**
   * Sets the value of the 'coverageLevel' field.
   * @param value the value to set.
   */
  public void setCoverageLevel(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.coverageLevel = value;
  }

  /**
   * Gets the value of the 'governmentProgramType' field.
   * @return The value of the 'governmentProgramType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getGovernmentProgramType() {
    return governmentProgramType;
  }

  /**
   * Sets the value of the 'governmentProgramType' field.
   * @param value the value to set.
   */
  public void setGovernmentProgramType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.governmentProgramType = value;
  }

  /**
   * Gets the value of the 'railRoadBenefitGroupChoiceTxt' field.
   * @return The value of the 'railRoadBenefitGroupChoiceTxt' field.
   */
  public java.lang.CharSequence getRailRoadBenefitGroupChoiceTxt() {
    return railRoadBenefitGroupChoiceTxt;
  }

  /**
   * Sets the value of the 'railRoadBenefitGroupChoiceTxt' field.
   * @param value the value to set.
   */
  public void setRailRoadBenefitGroupChoiceTxt(java.lang.CharSequence value) {
    this.railRoadBenefitGroupChoiceTxt = value;
  }

  /**
   * Gets the value of the 'railRoadBenefitGroupNumberId' field.
   * @return The value of the 'railRoadBenefitGroupNumberId' field.
   */
  public java.lang.CharSequence getRailRoadBenefitGroupNumberId() {
    return railRoadBenefitGroupNumberId;
  }

  /**
   * Sets the value of the 'railRoadBenefitGroupNumberId' field.
   * @param value the value to set.
   */
  public void setRailRoadBenefitGroupNumberId(java.lang.CharSequence value) {
    this.railRoadBenefitGroupNumberId = value;
  }

  /**
   * Gets the value of the 'railRoadBranchRepresentativeCode' field.
   * @return The value of the 'railRoadBranchRepresentativeCode' field.
   */
  public java.lang.CharSequence getRailRoadBranchRepresentativeCode() {
    return railRoadBranchRepresentativeCode;
  }

  /**
   * Sets the value of the 'railRoadBranchRepresentativeCode' field.
   * @param value the value to set.
   */
  public void setRailRoadBranchRepresentativeCode(java.lang.CharSequence value) {
    this.railRoadBranchRepresentativeCode = value;
  }

  /**
   * Gets the value of the 'railRoadOptOutPlanIndicator' field.
   * @return The value of the 'railRoadOptOutPlanIndicator' field.
   */
  public java.lang.CharSequence getRailRoadOptOutPlanIndicator() {
    return railRoadOptOutPlanIndicator;
  }

  /**
   * Sets the value of the 'railRoadOptOutPlanIndicator' field.
   * @param value the value to set.
   */
  public void setRailRoadOptOutPlanIndicator(java.lang.CharSequence value) {
    this.railRoadOptOutPlanIndicator = value;
  }

  /**
   * Gets the value of the 'railRoadUnionCode' field.
   * @return The value of the 'railRoadUnionCode' field.
   */
  public java.lang.CharSequence getRailRoadUnionCode() {
    return railRoadUnionCode;
  }

  /**
   * Sets the value of the 'railRoadUnionCode' field.
   * @param value the value to set.
   */
  public void setRailRoadUnionCode(java.lang.CharSequence value) {
    this.railRoadUnionCode = value;
  }

  /**
   * Gets the value of the 'stateIssueCode' field.
   * @return The value of the 'stateIssueCode' field.
   */
  public java.lang.CharSequence getStateIssueCode() {
    return stateIssueCode;
  }

  /**
   * Sets the value of the 'stateIssueCode' field.
   * @param value the value to set.
   */
  public void setStateIssueCode(java.lang.CharSequence value) {
    this.stateIssueCode = value;
  }

  /**
   * Gets the value of the 'travelBenefitIndicator' field.
   * @return The value of the 'travelBenefitIndicator' field.
   */
  public java.lang.CharSequence getTravelBenefitIndicator() {
    return travelBenefitIndicator;
  }

  /**
   * Sets the value of the 'travelBenefitIndicator' field.
   * @param value the value to set.
   */
  public void setTravelBenefitIndicator(java.lang.CharSequence value) {
    this.travelBenefitIndicator = value;
  }

  /**
   * Creates a new MembershipLegacyAttributes RecordBuilder.
   * @return A new MembershipLegacyAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder();
  }

  /**
   * Creates a new MembershipLegacyAttributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MembershipLegacyAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder other) {
    return new com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder(other);
  }

  /**
   * Creates a new MembershipLegacyAttributes RecordBuilder by copying an existing MembershipLegacyAttributes instance.
   * @param other The existing instance to copy.
   * @return A new MembershipLegacyAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes other) {
    return new com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder(other);
  }

  /**
   * RecordBuilder for MembershipLegacyAttributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MembershipLegacyAttributes>
    implements org.apache.avro.data.RecordBuilder<MembershipLegacyAttributes> {

    private com.uhc.schema.model.eligibility.common.DescriptionType cancelReasonType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder cancelReasonTypeBuilder;
    private com.uhc.schema.model.eligibility.common.DescriptionType coverageLevel;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder coverageLevelBuilder;
    private com.uhc.schema.model.eligibility.common.DescriptionType governmentProgramType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder governmentProgramTypeBuilder;
    private java.lang.CharSequence railRoadBenefitGroupChoiceTxt;
    private java.lang.CharSequence railRoadBenefitGroupNumberId;
    private java.lang.CharSequence railRoadBranchRepresentativeCode;
    private java.lang.CharSequence railRoadOptOutPlanIndicator;
    private java.lang.CharSequence railRoadUnionCode;
    private java.lang.CharSequence stateIssueCode;
    private java.lang.CharSequence travelBenefitIndicator;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.cancelReasonType)) {
        this.cancelReasonType = data().deepCopy(fields()[0].schema(), other.cancelReasonType);
        fieldSetFlags()[0] = true;
      }
      if (other.hasCancelReasonTypeBuilder()) {
        this.cancelReasonTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getCancelReasonTypeBuilder());
      }
      if (isValidValue(fields()[1], other.coverageLevel)) {
        this.coverageLevel = data().deepCopy(fields()[1].schema(), other.coverageLevel);
        fieldSetFlags()[1] = true;
      }
      if (other.hasCoverageLevelBuilder()) {
        this.coverageLevelBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getCoverageLevelBuilder());
      }
      if (isValidValue(fields()[2], other.governmentProgramType)) {
        this.governmentProgramType = data().deepCopy(fields()[2].schema(), other.governmentProgramType);
        fieldSetFlags()[2] = true;
      }
      if (other.hasGovernmentProgramTypeBuilder()) {
        this.governmentProgramTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getGovernmentProgramTypeBuilder());
      }
      if (isValidValue(fields()[3], other.railRoadBenefitGroupChoiceTxt)) {
        this.railRoadBenefitGroupChoiceTxt = data().deepCopy(fields()[3].schema(), other.railRoadBenefitGroupChoiceTxt);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.railRoadBenefitGroupNumberId)) {
        this.railRoadBenefitGroupNumberId = data().deepCopy(fields()[4].schema(), other.railRoadBenefitGroupNumberId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.railRoadBranchRepresentativeCode)) {
        this.railRoadBranchRepresentativeCode = data().deepCopy(fields()[5].schema(), other.railRoadBranchRepresentativeCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.railRoadOptOutPlanIndicator)) {
        this.railRoadOptOutPlanIndicator = data().deepCopy(fields()[6].schema(), other.railRoadOptOutPlanIndicator);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.railRoadUnionCode)) {
        this.railRoadUnionCode = data().deepCopy(fields()[7].schema(), other.railRoadUnionCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.stateIssueCode)) {
        this.stateIssueCode = data().deepCopy(fields()[8].schema(), other.stateIssueCode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.travelBenefitIndicator)) {
        this.travelBenefitIndicator = data().deepCopy(fields()[9].schema(), other.travelBenefitIndicator);
        fieldSetFlags()[9] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MembershipLegacyAttributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.cancelReasonType)) {
        this.cancelReasonType = data().deepCopy(fields()[0].schema(), other.cancelReasonType);
        fieldSetFlags()[0] = true;
      }
      this.cancelReasonTypeBuilder = null;
      if (isValidValue(fields()[1], other.coverageLevel)) {
        this.coverageLevel = data().deepCopy(fields()[1].schema(), other.coverageLevel);
        fieldSetFlags()[1] = true;
      }
      this.coverageLevelBuilder = null;
      if (isValidValue(fields()[2], other.governmentProgramType)) {
        this.governmentProgramType = data().deepCopy(fields()[2].schema(), other.governmentProgramType);
        fieldSetFlags()[2] = true;
      }
      this.governmentProgramTypeBuilder = null;
      if (isValidValue(fields()[3], other.railRoadBenefitGroupChoiceTxt)) {
        this.railRoadBenefitGroupChoiceTxt = data().deepCopy(fields()[3].schema(), other.railRoadBenefitGroupChoiceTxt);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.railRoadBenefitGroupNumberId)) {
        this.railRoadBenefitGroupNumberId = data().deepCopy(fields()[4].schema(), other.railRoadBenefitGroupNumberId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.railRoadBranchRepresentativeCode)) {
        this.railRoadBranchRepresentativeCode = data().deepCopy(fields()[5].schema(), other.railRoadBranchRepresentativeCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.railRoadOptOutPlanIndicator)) {
        this.railRoadOptOutPlanIndicator = data().deepCopy(fields()[6].schema(), other.railRoadOptOutPlanIndicator);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.railRoadUnionCode)) {
        this.railRoadUnionCode = data().deepCopy(fields()[7].schema(), other.railRoadUnionCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.stateIssueCode)) {
        this.stateIssueCode = data().deepCopy(fields()[8].schema(), other.stateIssueCode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.travelBenefitIndicator)) {
        this.travelBenefitIndicator = data().deepCopy(fields()[9].schema(), other.travelBenefitIndicator);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'cancelReasonType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getCancelReasonType() {
      return cancelReasonType;
    }

    /**
      * Sets the value of the 'cancelReasonType' field.
      * @param value The value of 'cancelReasonType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setCancelReasonType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[0], value);
      this.cancelReasonTypeBuilder = null;
      this.cancelReasonType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'cancelReasonType' field has been set.
      * @return True if the 'cancelReasonType' field has been set, false otherwise.
      */
    public boolean hasCancelReasonType() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'cancelReasonType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getCancelReasonTypeBuilder() {
      if (cancelReasonTypeBuilder == null) {
        if (hasCancelReasonType()) {
          setCancelReasonTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(cancelReasonType));
        } else {
          setCancelReasonTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return cancelReasonTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'cancelReasonType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setCancelReasonTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearCancelReasonType();
      cancelReasonTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'cancelReasonType' field has an active Builder instance
     * @return True if the 'cancelReasonType' field has an active Builder instance
     */
    public boolean hasCancelReasonTypeBuilder() {
      return cancelReasonTypeBuilder != null;
    }

    /**
      * Clears the value of the 'cancelReasonType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder clearCancelReasonType() {
      cancelReasonType = null;
      cancelReasonTypeBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'coverageLevel' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getCoverageLevel() {
      return coverageLevel;
    }

    /**
      * Sets the value of the 'coverageLevel' field.
      * @param value The value of 'coverageLevel'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setCoverageLevel(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[1], value);
      this.coverageLevelBuilder = null;
      this.coverageLevel = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'coverageLevel' field has been set.
      * @return True if the 'coverageLevel' field has been set, false otherwise.
      */
    public boolean hasCoverageLevel() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'coverageLevel' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getCoverageLevelBuilder() {
      if (coverageLevelBuilder == null) {
        if (hasCoverageLevel()) {
          setCoverageLevelBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(coverageLevel));
        } else {
          setCoverageLevelBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return coverageLevelBuilder;
    }

    /**
     * Sets the Builder instance for the 'coverageLevel' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setCoverageLevelBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearCoverageLevel();
      coverageLevelBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'coverageLevel' field has an active Builder instance
     * @return True if the 'coverageLevel' field has an active Builder instance
     */
    public boolean hasCoverageLevelBuilder() {
      return coverageLevelBuilder != null;
    }

    /**
      * Clears the value of the 'coverageLevel' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder clearCoverageLevel() {
      coverageLevel = null;
      coverageLevelBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'governmentProgramType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getGovernmentProgramType() {
      return governmentProgramType;
    }

    /**
      * Sets the value of the 'governmentProgramType' field.
      * @param value The value of 'governmentProgramType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setGovernmentProgramType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[2], value);
      this.governmentProgramTypeBuilder = null;
      this.governmentProgramType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'governmentProgramType' field has been set.
      * @return True if the 'governmentProgramType' field has been set, false otherwise.
      */
    public boolean hasGovernmentProgramType() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'governmentProgramType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getGovernmentProgramTypeBuilder() {
      if (governmentProgramTypeBuilder == null) {
        if (hasGovernmentProgramType()) {
          setGovernmentProgramTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(governmentProgramType));
        } else {
          setGovernmentProgramTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return governmentProgramTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'governmentProgramType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setGovernmentProgramTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearGovernmentProgramType();
      governmentProgramTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'governmentProgramType' field has an active Builder instance
     * @return True if the 'governmentProgramType' field has an active Builder instance
     */
    public boolean hasGovernmentProgramTypeBuilder() {
      return governmentProgramTypeBuilder != null;
    }

    /**
      * Clears the value of the 'governmentProgramType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder clearGovernmentProgramType() {
      governmentProgramType = null;
      governmentProgramTypeBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'railRoadBenefitGroupChoiceTxt' field.
      * @return The value.
      */
    public java.lang.CharSequence getRailRoadBenefitGroupChoiceTxt() {
      return railRoadBenefitGroupChoiceTxt;
    }

    /**
      * Sets the value of the 'railRoadBenefitGroupChoiceTxt' field.
      * @param value The value of 'railRoadBenefitGroupChoiceTxt'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setRailRoadBenefitGroupChoiceTxt(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.railRoadBenefitGroupChoiceTxt = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'railRoadBenefitGroupChoiceTxt' field has been set.
      * @return True if the 'railRoadBenefitGroupChoiceTxt' field has been set, false otherwise.
      */
    public boolean hasRailRoadBenefitGroupChoiceTxt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'railRoadBenefitGroupChoiceTxt' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder clearRailRoadBenefitGroupChoiceTxt() {
      railRoadBenefitGroupChoiceTxt = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'railRoadBenefitGroupNumberId' field.
      * @return The value.
      */
    public java.lang.CharSequence getRailRoadBenefitGroupNumberId() {
      return railRoadBenefitGroupNumberId;
    }

    /**
      * Sets the value of the 'railRoadBenefitGroupNumberId' field.
      * @param value The value of 'railRoadBenefitGroupNumberId'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setRailRoadBenefitGroupNumberId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.railRoadBenefitGroupNumberId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'railRoadBenefitGroupNumberId' field has been set.
      * @return True if the 'railRoadBenefitGroupNumberId' field has been set, false otherwise.
      */
    public boolean hasRailRoadBenefitGroupNumberId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'railRoadBenefitGroupNumberId' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder clearRailRoadBenefitGroupNumberId() {
      railRoadBenefitGroupNumberId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'railRoadBranchRepresentativeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getRailRoadBranchRepresentativeCode() {
      return railRoadBranchRepresentativeCode;
    }

    /**
      * Sets the value of the 'railRoadBranchRepresentativeCode' field.
      * @param value The value of 'railRoadBranchRepresentativeCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setRailRoadBranchRepresentativeCode(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.railRoadBranchRepresentativeCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'railRoadBranchRepresentativeCode' field has been set.
      * @return True if the 'railRoadBranchRepresentativeCode' field has been set, false otherwise.
      */
    public boolean hasRailRoadBranchRepresentativeCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'railRoadBranchRepresentativeCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder clearRailRoadBranchRepresentativeCode() {
      railRoadBranchRepresentativeCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'railRoadOptOutPlanIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getRailRoadOptOutPlanIndicator() {
      return railRoadOptOutPlanIndicator;
    }

    /**
      * Sets the value of the 'railRoadOptOutPlanIndicator' field.
      * @param value The value of 'railRoadOptOutPlanIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setRailRoadOptOutPlanIndicator(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.railRoadOptOutPlanIndicator = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'railRoadOptOutPlanIndicator' field has been set.
      * @return True if the 'railRoadOptOutPlanIndicator' field has been set, false otherwise.
      */
    public boolean hasRailRoadOptOutPlanIndicator() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'railRoadOptOutPlanIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder clearRailRoadOptOutPlanIndicator() {
      railRoadOptOutPlanIndicator = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'railRoadUnionCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getRailRoadUnionCode() {
      return railRoadUnionCode;
    }

    /**
      * Sets the value of the 'railRoadUnionCode' field.
      * @param value The value of 'railRoadUnionCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setRailRoadUnionCode(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.railRoadUnionCode = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'railRoadUnionCode' field has been set.
      * @return True if the 'railRoadUnionCode' field has been set, false otherwise.
      */
    public boolean hasRailRoadUnionCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'railRoadUnionCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder clearRailRoadUnionCode() {
      railRoadUnionCode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'stateIssueCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getStateIssueCode() {
      return stateIssueCode;
    }

    /**
      * Sets the value of the 'stateIssueCode' field.
      * @param value The value of 'stateIssueCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setStateIssueCode(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.stateIssueCode = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'stateIssueCode' field has been set.
      * @return True if the 'stateIssueCode' field has been set, false otherwise.
      */
    public boolean hasStateIssueCode() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'stateIssueCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder clearStateIssueCode() {
      stateIssueCode = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'travelBenefitIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getTravelBenefitIndicator() {
      return travelBenefitIndicator;
    }

    /**
      * Sets the value of the 'travelBenefitIndicator' field.
      * @param value The value of 'travelBenefitIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder setTravelBenefitIndicator(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.travelBenefitIndicator = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'travelBenefitIndicator' field has been set.
      * @return True if the 'travelBenefitIndicator' field has been set, false otherwise.
      */
    public boolean hasTravelBenefitIndicator() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'travelBenefitIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipLegacyAttributes.Builder clearTravelBenefitIndicator() {
      travelBenefitIndicator = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MembershipLegacyAttributes build() {
      try {
        MembershipLegacyAttributes record = new MembershipLegacyAttributes();
        if (cancelReasonTypeBuilder != null) {
          record.cancelReasonType = this.cancelReasonTypeBuilder.build();
        } else {
          record.cancelReasonType = fieldSetFlags()[0] ? this.cancelReasonType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[0]);
        }
        if (coverageLevelBuilder != null) {
          record.coverageLevel = this.coverageLevelBuilder.build();
        } else {
          record.coverageLevel = fieldSetFlags()[1] ? this.coverageLevel : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[1]);
        }
        if (governmentProgramTypeBuilder != null) {
          record.governmentProgramType = this.governmentProgramTypeBuilder.build();
        } else {
          record.governmentProgramType = fieldSetFlags()[2] ? this.governmentProgramType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[2]);
        }
        record.railRoadBenefitGroupChoiceTxt = fieldSetFlags()[3] ? this.railRoadBenefitGroupChoiceTxt : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.railRoadBenefitGroupNumberId = fieldSetFlags()[4] ? this.railRoadBenefitGroupNumberId : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.railRoadBranchRepresentativeCode = fieldSetFlags()[5] ? this.railRoadBranchRepresentativeCode : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.railRoadOptOutPlanIndicator = fieldSetFlags()[6] ? this.railRoadOptOutPlanIndicator : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.railRoadUnionCode = fieldSetFlags()[7] ? this.railRoadUnionCode : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.stateIssueCode = fieldSetFlags()[8] ? this.stateIssueCode : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.travelBenefitIndicator = fieldSetFlags()[9] ? this.travelBenefitIndicator : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MembershipLegacyAttributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<MembershipLegacyAttributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MembershipLegacyAttributes>
    READER$ = (org.apache.avro.io.DatumReader<MembershipLegacyAttributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
