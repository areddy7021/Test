/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.membership;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** source-specific attributes about a membership */
@org.apache.avro.specific.AvroGenerated
public class MembershipSourceSystemAttributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2064596090136907059L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MembershipSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.membership\",\"doc\":\"source-specific attributes about a membership\",\"fields\":[{\"name\":\"boss\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BossMembershipSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.boss\",\"fields\":[{\"name\":\"customerAccountIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"The customerAccountIdentifier as stored in BOSS (ie. padded with leading zeroes to minimum length of 9)\",\"default\":null}]}],\"default\":null},{\"name\":\"cdb\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CdbMembershipSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.cdb\",\"fields\":[{\"name\":\"cesGroupNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"legacyProductCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"legacyProductId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nonCs\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"NonCsMembershipSourceSystemAttributes\",\"fields\":[{\"name\":\"legalEntityName\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"planCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"referenceData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CdbMembershipReferenceData\",\"fields\":[{\"name\":\"coverageLevelTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"coveragePaidThruReasonCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"coverageTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"healthServiceProductCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"healthServiceProductLineCode\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"cirrus\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CirrusMembershipSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.cirrus\",\"fields\":[{\"name\":\"coverageLevelHistory\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CoverageLevelHistory\",\"fields\":[{\"name\":\"coverageLevel\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null}]}}],\"default\":null},{\"name\":\"originalEffectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD\",\"default\":null}]}],\"default\":null},{\"name\":\"crossCarrier\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CrossCarrierMembershipSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.crosscarrier\",\"fields\":[{\"name\":\"carrierName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"fileName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"pKey\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"medicareAndRetirement\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MedicareAndRetirementMembershipSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.medicareandretirement\",\"fields\":[{\"name\":\"conservationReason\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"electionType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"enrollmentSource\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"marketProductName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"regionPlanIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"terminationReason\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MembershipSourceSystemAttributes> ENCODER =
      new BinaryMessageEncoder<MembershipSourceSystemAttributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MembershipSourceSystemAttributes> DECODER =
      new BinaryMessageDecoder<MembershipSourceSystemAttributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MembershipSourceSystemAttributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MembershipSourceSystemAttributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MembershipSourceSystemAttributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MembershipSourceSystemAttributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MembershipSourceSystemAttributes from a ByteBuffer. */
  public static MembershipSourceSystemAttributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes boss;
  @Deprecated public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes cdb;
  @Deprecated public com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes cirrus;
  @Deprecated public com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes crossCarrier;
  @Deprecated public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes medicareAndRetirement;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MembershipSourceSystemAttributes() {}

  /**
   * All-args constructor.
   * @param boss The new value for boss
   * @param cdb The new value for cdb
   * @param cirrus The new value for cirrus
   * @param crossCarrier The new value for crossCarrier
   * @param medicareAndRetirement The new value for medicareAndRetirement
   */
  public MembershipSourceSystemAttributes(com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes boss, com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes cdb, com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes cirrus, com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes crossCarrier, com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes medicareAndRetirement) {
    this.boss = boss;
    this.cdb = cdb;
    this.cirrus = cirrus;
    this.crossCarrier = crossCarrier;
    this.medicareAndRetirement = medicareAndRetirement;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return boss;
    case 1: return cdb;
    case 2: return cirrus;
    case 3: return crossCarrier;
    case 4: return medicareAndRetirement;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: boss = (com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes)value$; break;
    case 1: cdb = (com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes)value$; break;
    case 2: cirrus = (com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes)value$; break;
    case 3: crossCarrier = (com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes)value$; break;
    case 4: medicareAndRetirement = (com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'boss' field.
   * @return The value of the 'boss' field.
   */
  public com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes getBoss() {
    return boss;
  }

  /**
   * Sets the value of the 'boss' field.
   * @param value the value to set.
   */
  public void setBoss(com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes value) {
    this.boss = value;
  }

  /**
   * Gets the value of the 'cdb' field.
   * @return The value of the 'cdb' field.
   */
  public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes getCdb() {
    return cdb;
  }

  /**
   * Sets the value of the 'cdb' field.
   * @param value the value to set.
   */
  public void setCdb(com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes value) {
    this.cdb = value;
  }

  /**
   * Gets the value of the 'cirrus' field.
   * @return The value of the 'cirrus' field.
   */
  public com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes getCirrus() {
    return cirrus;
  }

  /**
   * Sets the value of the 'cirrus' field.
   * @param value the value to set.
   */
  public void setCirrus(com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes value) {
    this.cirrus = value;
  }

  /**
   * Gets the value of the 'crossCarrier' field.
   * @return The value of the 'crossCarrier' field.
   */
  public com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes getCrossCarrier() {
    return crossCarrier;
  }

  /**
   * Sets the value of the 'crossCarrier' field.
   * @param value the value to set.
   */
  public void setCrossCarrier(com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes value) {
    this.crossCarrier = value;
  }

  /**
   * Gets the value of the 'medicareAndRetirement' field.
   * @return The value of the 'medicareAndRetirement' field.
   */
  public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes getMedicareAndRetirement() {
    return medicareAndRetirement;
  }

  /**
   * Sets the value of the 'medicareAndRetirement' field.
   * @param value the value to set.
   */
  public void setMedicareAndRetirement(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes value) {
    this.medicareAndRetirement = value;
  }

  /**
   * Creates a new MembershipSourceSystemAttributes RecordBuilder.
   * @return A new MembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder();
  }

  /**
   * Creates a new MembershipSourceSystemAttributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder other) {
    return new com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder(other);
  }

  /**
   * Creates a new MembershipSourceSystemAttributes RecordBuilder by copying an existing MembershipSourceSystemAttributes instance.
   * @param other The existing instance to copy.
   * @return A new MembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes other) {
    return new com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder(other);
  }

  /**
   * RecordBuilder for MembershipSourceSystemAttributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MembershipSourceSystemAttributes>
    implements org.apache.avro.data.RecordBuilder<MembershipSourceSystemAttributes> {

    private com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes boss;
    private com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes.Builder bossBuilder;
    private com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes cdb;
    private com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder cdbBuilder;
    private com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes cirrus;
    private com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder cirrusBuilder;
    private com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes crossCarrier;
    private com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder crossCarrierBuilder;
    private com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes medicareAndRetirement;
    private com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder medicareAndRetirementBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.boss)) {
        this.boss = data().deepCopy(fields()[0].schema(), other.boss);
        fieldSetFlags()[0] = true;
      }
      if (other.hasBossBuilder()) {
        this.bossBuilder = com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes.newBuilder(other.getBossBuilder());
      }
      if (isValidValue(fields()[1], other.cdb)) {
        this.cdb = data().deepCopy(fields()[1].schema(), other.cdb);
        fieldSetFlags()[1] = true;
      }
      if (other.hasCdbBuilder()) {
        this.cdbBuilder = com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.newBuilder(other.getCdbBuilder());
      }
      if (isValidValue(fields()[2], other.cirrus)) {
        this.cirrus = data().deepCopy(fields()[2].schema(), other.cirrus);
        fieldSetFlags()[2] = true;
      }
      if (other.hasCirrusBuilder()) {
        this.cirrusBuilder = com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.newBuilder(other.getCirrusBuilder());
      }
      if (isValidValue(fields()[3], other.crossCarrier)) {
        this.crossCarrier = data().deepCopy(fields()[3].schema(), other.crossCarrier);
        fieldSetFlags()[3] = true;
      }
      if (other.hasCrossCarrierBuilder()) {
        this.crossCarrierBuilder = com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.newBuilder(other.getCrossCarrierBuilder());
      }
      if (isValidValue(fields()[4], other.medicareAndRetirement)) {
        this.medicareAndRetirement = data().deepCopy(fields()[4].schema(), other.medicareAndRetirement);
        fieldSetFlags()[4] = true;
      }
      if (other.hasMedicareAndRetirementBuilder()) {
        this.medicareAndRetirementBuilder = com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.newBuilder(other.getMedicareAndRetirementBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MembershipSourceSystemAttributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.boss)) {
        this.boss = data().deepCopy(fields()[0].schema(), other.boss);
        fieldSetFlags()[0] = true;
      }
      this.bossBuilder = null;
      if (isValidValue(fields()[1], other.cdb)) {
        this.cdb = data().deepCopy(fields()[1].schema(), other.cdb);
        fieldSetFlags()[1] = true;
      }
      this.cdbBuilder = null;
      if (isValidValue(fields()[2], other.cirrus)) {
        this.cirrus = data().deepCopy(fields()[2].schema(), other.cirrus);
        fieldSetFlags()[2] = true;
      }
      this.cirrusBuilder = null;
      if (isValidValue(fields()[3], other.crossCarrier)) {
        this.crossCarrier = data().deepCopy(fields()[3].schema(), other.crossCarrier);
        fieldSetFlags()[3] = true;
      }
      this.crossCarrierBuilder = null;
      if (isValidValue(fields()[4], other.medicareAndRetirement)) {
        this.medicareAndRetirement = data().deepCopy(fields()[4].schema(), other.medicareAndRetirement);
        fieldSetFlags()[4] = true;
      }
      this.medicareAndRetirementBuilder = null;
    }

    /**
      * Gets the value of the 'boss' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes getBoss() {
      return boss;
    }

    /**
      * Sets the value of the 'boss' field.
      * @param value The value of 'boss'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder setBoss(com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes value) {
      validate(fields()[0], value);
      this.bossBuilder = null;
      this.boss = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'boss' field has been set.
      * @return True if the 'boss' field has been set, false otherwise.
      */
    public boolean hasBoss() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'boss' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes.Builder getBossBuilder() {
      if (bossBuilder == null) {
        if (hasBoss()) {
          setBossBuilder(com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes.newBuilder(boss));
        } else {
          setBossBuilder(com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes.newBuilder());
        }
      }
      return bossBuilder;
    }

    /**
     * Sets the Builder instance for the 'boss' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder setBossBuilder(com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes.Builder value) {
      clearBoss();
      bossBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'boss' field has an active Builder instance
     * @return True if the 'boss' field has an active Builder instance
     */
    public boolean hasBossBuilder() {
      return bossBuilder != null;
    }

    /**
      * Clears the value of the 'boss' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder clearBoss() {
      boss = null;
      bossBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'cdb' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes getCdb() {
      return cdb;
    }

    /**
      * Sets the value of the 'cdb' field.
      * @param value The value of 'cdb'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder setCdb(com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes value) {
      validate(fields()[1], value);
      this.cdbBuilder = null;
      this.cdb = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'cdb' field has been set.
      * @return True if the 'cdb' field has been set, false otherwise.
      */
    public boolean hasCdb() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'cdb' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder getCdbBuilder() {
      if (cdbBuilder == null) {
        if (hasCdb()) {
          setCdbBuilder(com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.newBuilder(cdb));
        } else {
          setCdbBuilder(com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.newBuilder());
        }
      }
      return cdbBuilder;
    }

    /**
     * Sets the Builder instance for the 'cdb' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder setCdbBuilder(com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder value) {
      clearCdb();
      cdbBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'cdb' field has an active Builder instance
     * @return True if the 'cdb' field has an active Builder instance
     */
    public boolean hasCdbBuilder() {
      return cdbBuilder != null;
    }

    /**
      * Clears the value of the 'cdb' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder clearCdb() {
      cdb = null;
      cdbBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'cirrus' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes getCirrus() {
      return cirrus;
    }

    /**
      * Sets the value of the 'cirrus' field.
      * @param value The value of 'cirrus'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder setCirrus(com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes value) {
      validate(fields()[2], value);
      this.cirrusBuilder = null;
      this.cirrus = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'cirrus' field has been set.
      * @return True if the 'cirrus' field has been set, false otherwise.
      */
    public boolean hasCirrus() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'cirrus' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder getCirrusBuilder() {
      if (cirrusBuilder == null) {
        if (hasCirrus()) {
          setCirrusBuilder(com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.newBuilder(cirrus));
        } else {
          setCirrusBuilder(com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.newBuilder());
        }
      }
      return cirrusBuilder;
    }

    /**
     * Sets the Builder instance for the 'cirrus' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder setCirrusBuilder(com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder value) {
      clearCirrus();
      cirrusBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'cirrus' field has an active Builder instance
     * @return True if the 'cirrus' field has an active Builder instance
     */
    public boolean hasCirrusBuilder() {
      return cirrusBuilder != null;
    }

    /**
      * Clears the value of the 'cirrus' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder clearCirrus() {
      cirrus = null;
      cirrusBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'crossCarrier' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes getCrossCarrier() {
      return crossCarrier;
    }

    /**
      * Sets the value of the 'crossCarrier' field.
      * @param value The value of 'crossCarrier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder setCrossCarrier(com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes value) {
      validate(fields()[3], value);
      this.crossCarrierBuilder = null;
      this.crossCarrier = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'crossCarrier' field has been set.
      * @return True if the 'crossCarrier' field has been set, false otherwise.
      */
    public boolean hasCrossCarrier() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'crossCarrier' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder getCrossCarrierBuilder() {
      if (crossCarrierBuilder == null) {
        if (hasCrossCarrier()) {
          setCrossCarrierBuilder(com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.newBuilder(crossCarrier));
        } else {
          setCrossCarrierBuilder(com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.newBuilder());
        }
      }
      return crossCarrierBuilder;
    }

    /**
     * Sets the Builder instance for the 'crossCarrier' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder setCrossCarrierBuilder(com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes.Builder value) {
      clearCrossCarrier();
      crossCarrierBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'crossCarrier' field has an active Builder instance
     * @return True if the 'crossCarrier' field has an active Builder instance
     */
    public boolean hasCrossCarrierBuilder() {
      return crossCarrierBuilder != null;
    }

    /**
      * Clears the value of the 'crossCarrier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder clearCrossCarrier() {
      crossCarrier = null;
      crossCarrierBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicareAndRetirement' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes getMedicareAndRetirement() {
      return medicareAndRetirement;
    }

    /**
      * Sets the value of the 'medicareAndRetirement' field.
      * @param value The value of 'medicareAndRetirement'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder setMedicareAndRetirement(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes value) {
      validate(fields()[4], value);
      this.medicareAndRetirementBuilder = null;
      this.medicareAndRetirement = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'medicareAndRetirement' field has been set.
      * @return True if the 'medicareAndRetirement' field has been set, false otherwise.
      */
    public boolean hasMedicareAndRetirement() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'medicareAndRetirement' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder getMedicareAndRetirementBuilder() {
      if (medicareAndRetirementBuilder == null) {
        if (hasMedicareAndRetirement()) {
          setMedicareAndRetirementBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.newBuilder(medicareAndRetirement));
        } else {
          setMedicareAndRetirementBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.newBuilder());
        }
      }
      return medicareAndRetirementBuilder;
    }

    /**
     * Sets the Builder instance for the 'medicareAndRetirement' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder setMedicareAndRetirementBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder value) {
      clearMedicareAndRetirement();
      medicareAndRetirementBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'medicareAndRetirement' field has an active Builder instance
     * @return True if the 'medicareAndRetirement' field has an active Builder instance
     */
    public boolean hasMedicareAndRetirementBuilder() {
      return medicareAndRetirementBuilder != null;
    }

    /**
      * Clears the value of the 'medicareAndRetirement' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MembershipSourceSystemAttributes.Builder clearMedicareAndRetirement() {
      medicareAndRetirement = null;
      medicareAndRetirementBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MembershipSourceSystemAttributes build() {
      try {
        MembershipSourceSystemAttributes record = new MembershipSourceSystemAttributes();
        if (bossBuilder != null) {
          record.boss = this.bossBuilder.build();
        } else {
          record.boss = fieldSetFlags()[0] ? this.boss : (com.uhc.schema.model.eligibility.boss.BossMembershipSourceSystemAttributes) defaultValue(fields()[0]);
        }
        if (cdbBuilder != null) {
          record.cdb = this.cdbBuilder.build();
        } else {
          record.cdb = fieldSetFlags()[1] ? this.cdb : (com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes) defaultValue(fields()[1]);
        }
        if (cirrusBuilder != null) {
          record.cirrus = this.cirrusBuilder.build();
        } else {
          record.cirrus = fieldSetFlags()[2] ? this.cirrus : (com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes) defaultValue(fields()[2]);
        }
        if (crossCarrierBuilder != null) {
          record.crossCarrier = this.crossCarrierBuilder.build();
        } else {
          record.crossCarrier = fieldSetFlags()[3] ? this.crossCarrier : (com.uhc.schema.model.eligibility.crosscarrier.CrossCarrierMembershipSourceSystemAttributes) defaultValue(fields()[3]);
        }
        if (medicareAndRetirementBuilder != null) {
          record.medicareAndRetirement = this.medicareAndRetirementBuilder.build();
        } else {
          record.medicareAndRetirement = fieldSetFlags()[4] ? this.medicareAndRetirement : (com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes) defaultValue(fields()[4]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MembershipSourceSystemAttributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<MembershipSourceSystemAttributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MembershipSourceSystemAttributes>
    READER$ = (org.apache.avro.io.DatumReader<MembershipSourceSystemAttributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
