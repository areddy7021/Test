/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.cdb;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CdbIndividualReferenceData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8820502337410257686L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CdbIndividualReferenceData\",\"namespace\":\"com.uhc.schema.model.eligibility.cdb\",\"fields\":[{\"name\":\"employmentStatusCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"genderTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"maritalStatusTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"subscriberRelationshipTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CdbIndividualReferenceData> ENCODER =
      new BinaryMessageEncoder<CdbIndividualReferenceData>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CdbIndividualReferenceData> DECODER =
      new BinaryMessageDecoder<CdbIndividualReferenceData>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CdbIndividualReferenceData> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CdbIndividualReferenceData> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CdbIndividualReferenceData>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CdbIndividualReferenceData to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CdbIndividualReferenceData from a ByteBuffer. */
  public static CdbIndividualReferenceData fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence employmentStatusCode;
  @Deprecated public java.lang.CharSequence genderTypeCode;
  @Deprecated public java.lang.CharSequence maritalStatusTypeCode;
  @Deprecated public java.lang.CharSequence subscriberRelationshipTypeCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CdbIndividualReferenceData() {}

  /**
   * All-args constructor.
   * @param employmentStatusCode The new value for employmentStatusCode
   * @param genderTypeCode The new value for genderTypeCode
   * @param maritalStatusTypeCode The new value for maritalStatusTypeCode
   * @param subscriberRelationshipTypeCode The new value for subscriberRelationshipTypeCode
   */
  public CdbIndividualReferenceData(java.lang.CharSequence employmentStatusCode, java.lang.CharSequence genderTypeCode, java.lang.CharSequence maritalStatusTypeCode, java.lang.CharSequence subscriberRelationshipTypeCode) {
    this.employmentStatusCode = employmentStatusCode;
    this.genderTypeCode = genderTypeCode;
    this.maritalStatusTypeCode = maritalStatusTypeCode;
    this.subscriberRelationshipTypeCode = subscriberRelationshipTypeCode;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return employmentStatusCode;
    case 1: return genderTypeCode;
    case 2: return maritalStatusTypeCode;
    case 3: return subscriberRelationshipTypeCode;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: employmentStatusCode = (java.lang.CharSequence)value$; break;
    case 1: genderTypeCode = (java.lang.CharSequence)value$; break;
    case 2: maritalStatusTypeCode = (java.lang.CharSequence)value$; break;
    case 3: subscriberRelationshipTypeCode = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'employmentStatusCode' field.
   * @return The value of the 'employmentStatusCode' field.
   */
  public java.lang.CharSequence getEmploymentStatusCode() {
    return employmentStatusCode;
  }

  /**
   * Sets the value of the 'employmentStatusCode' field.
   * @param value the value to set.
   */
  public void setEmploymentStatusCode(java.lang.CharSequence value) {
    this.employmentStatusCode = value;
  }

  /**
   * Gets the value of the 'genderTypeCode' field.
   * @return The value of the 'genderTypeCode' field.
   */
  public java.lang.CharSequence getGenderTypeCode() {
    return genderTypeCode;
  }

  /**
   * Sets the value of the 'genderTypeCode' field.
   * @param value the value to set.
   */
  public void setGenderTypeCode(java.lang.CharSequence value) {
    this.genderTypeCode = value;
  }

  /**
   * Gets the value of the 'maritalStatusTypeCode' field.
   * @return The value of the 'maritalStatusTypeCode' field.
   */
  public java.lang.CharSequence getMaritalStatusTypeCode() {
    return maritalStatusTypeCode;
  }

  /**
   * Sets the value of the 'maritalStatusTypeCode' field.
   * @param value the value to set.
   */
  public void setMaritalStatusTypeCode(java.lang.CharSequence value) {
    this.maritalStatusTypeCode = value;
  }

  /**
   * Gets the value of the 'subscriberRelationshipTypeCode' field.
   * @return The value of the 'subscriberRelationshipTypeCode' field.
   */
  public java.lang.CharSequence getSubscriberRelationshipTypeCode() {
    return subscriberRelationshipTypeCode;
  }

  /**
   * Sets the value of the 'subscriberRelationshipTypeCode' field.
   * @param value the value to set.
   */
  public void setSubscriberRelationshipTypeCode(java.lang.CharSequence value) {
    this.subscriberRelationshipTypeCode = value;
  }

  /**
   * Creates a new CdbIndividualReferenceData RecordBuilder.
   * @return A new CdbIndividualReferenceData RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder();
  }

  /**
   * Creates a new CdbIndividualReferenceData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CdbIndividualReferenceData RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder newBuilder(com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder other) {
    return new com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder(other);
  }

  /**
   * Creates a new CdbIndividualReferenceData RecordBuilder by copying an existing CdbIndividualReferenceData instance.
   * @param other The existing instance to copy.
   * @return A new CdbIndividualReferenceData RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder newBuilder(com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData other) {
    return new com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder(other);
  }

  /**
   * RecordBuilder for CdbIndividualReferenceData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CdbIndividualReferenceData>
    implements org.apache.avro.data.RecordBuilder<CdbIndividualReferenceData> {

    private java.lang.CharSequence employmentStatusCode;
    private java.lang.CharSequence genderTypeCode;
    private java.lang.CharSequence maritalStatusTypeCode;
    private java.lang.CharSequence subscriberRelationshipTypeCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.employmentStatusCode)) {
        this.employmentStatusCode = data().deepCopy(fields()[0].schema(), other.employmentStatusCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.genderTypeCode)) {
        this.genderTypeCode = data().deepCopy(fields()[1].schema(), other.genderTypeCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.maritalStatusTypeCode)) {
        this.maritalStatusTypeCode = data().deepCopy(fields()[2].schema(), other.maritalStatusTypeCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.subscriberRelationshipTypeCode)) {
        this.subscriberRelationshipTypeCode = data().deepCopy(fields()[3].schema(), other.subscriberRelationshipTypeCode);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CdbIndividualReferenceData instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.employmentStatusCode)) {
        this.employmentStatusCode = data().deepCopy(fields()[0].schema(), other.employmentStatusCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.genderTypeCode)) {
        this.genderTypeCode = data().deepCopy(fields()[1].schema(), other.genderTypeCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.maritalStatusTypeCode)) {
        this.maritalStatusTypeCode = data().deepCopy(fields()[2].schema(), other.maritalStatusTypeCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.subscriberRelationshipTypeCode)) {
        this.subscriberRelationshipTypeCode = data().deepCopy(fields()[3].schema(), other.subscriberRelationshipTypeCode);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'employmentStatusCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmploymentStatusCode() {
      return employmentStatusCode;
    }

    /**
      * Sets the value of the 'employmentStatusCode' field.
      * @param value The value of 'employmentStatusCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder setEmploymentStatusCode(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.employmentStatusCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'employmentStatusCode' field has been set.
      * @return True if the 'employmentStatusCode' field has been set, false otherwise.
      */
    public boolean hasEmploymentStatusCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'employmentStatusCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder clearEmploymentStatusCode() {
      employmentStatusCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'genderTypeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getGenderTypeCode() {
      return genderTypeCode;
    }

    /**
      * Sets the value of the 'genderTypeCode' field.
      * @param value The value of 'genderTypeCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder setGenderTypeCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.genderTypeCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'genderTypeCode' field has been set.
      * @return True if the 'genderTypeCode' field has been set, false otherwise.
      */
    public boolean hasGenderTypeCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'genderTypeCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder clearGenderTypeCode() {
      genderTypeCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'maritalStatusTypeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getMaritalStatusTypeCode() {
      return maritalStatusTypeCode;
    }

    /**
      * Sets the value of the 'maritalStatusTypeCode' field.
      * @param value The value of 'maritalStatusTypeCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder setMaritalStatusTypeCode(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.maritalStatusTypeCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'maritalStatusTypeCode' field has been set.
      * @return True if the 'maritalStatusTypeCode' field has been set, false otherwise.
      */
    public boolean hasMaritalStatusTypeCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'maritalStatusTypeCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder clearMaritalStatusTypeCode() {
      maritalStatusTypeCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'subscriberRelationshipTypeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubscriberRelationshipTypeCode() {
      return subscriberRelationshipTypeCode;
    }

    /**
      * Sets the value of the 'subscriberRelationshipTypeCode' field.
      * @param value The value of 'subscriberRelationshipTypeCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder setSubscriberRelationshipTypeCode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.subscriberRelationshipTypeCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'subscriberRelationshipTypeCode' field has been set.
      * @return True if the 'subscriberRelationshipTypeCode' field has been set, false otherwise.
      */
    public boolean hasSubscriberRelationshipTypeCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'subscriberRelationshipTypeCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualReferenceData.Builder clearSubscriberRelationshipTypeCode() {
      subscriberRelationshipTypeCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CdbIndividualReferenceData build() {
      try {
        CdbIndividualReferenceData record = new CdbIndividualReferenceData();
        record.employmentStatusCode = fieldSetFlags()[0] ? this.employmentStatusCode : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.genderTypeCode = fieldSetFlags()[1] ? this.genderTypeCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.maritalStatusTypeCode = fieldSetFlags()[2] ? this.maritalStatusTypeCode : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.subscriberRelationshipTypeCode = fieldSetFlags()[3] ? this.subscriberRelationshipTypeCode : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CdbIndividualReferenceData>
    WRITER$ = (org.apache.avro.io.DatumWriter<CdbIndividualReferenceData>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CdbIndividualReferenceData>
    READER$ = (org.apache.avro.io.DatumReader<CdbIndividualReferenceData>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
