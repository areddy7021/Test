/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.medicareandretirement;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MedicareAndRetirementMembershipSourceSystemAttributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1109746533784836351L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MedicareAndRetirementMembershipSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.medicareandretirement\",\"fields\":[{\"name\":\"conservationReason\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"electionType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"enrollmentSource\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"marketProductName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"regionPlanIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"terminationReason\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MedicareAndRetirementMembershipSourceSystemAttributes> ENCODER =
      new BinaryMessageEncoder<MedicareAndRetirementMembershipSourceSystemAttributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MedicareAndRetirementMembershipSourceSystemAttributes> DECODER =
      new BinaryMessageDecoder<MedicareAndRetirementMembershipSourceSystemAttributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MedicareAndRetirementMembershipSourceSystemAttributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MedicareAndRetirementMembershipSourceSystemAttributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MedicareAndRetirementMembershipSourceSystemAttributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MedicareAndRetirementMembershipSourceSystemAttributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MedicareAndRetirementMembershipSourceSystemAttributes from a ByteBuffer. */
  public static MedicareAndRetirementMembershipSourceSystemAttributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType conservationReason;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType electionType;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType enrollmentSource;
  @Deprecated public java.lang.CharSequence marketProductName;
  @Deprecated public java.lang.CharSequence regionPlanIdentifier;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType terminationReason;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MedicareAndRetirementMembershipSourceSystemAttributes() {}

  /**
   * All-args constructor.
   * @param conservationReason The new value for conservationReason
   * @param electionType The new value for electionType
   * @param enrollmentSource The new value for enrollmentSource
   * @param marketProductName The new value for marketProductName
   * @param regionPlanIdentifier The new value for regionPlanIdentifier
   * @param terminationReason The new value for terminationReason
   */
  public MedicareAndRetirementMembershipSourceSystemAttributes(com.uhc.schema.model.eligibility.common.DescriptionType conservationReason, com.uhc.schema.model.eligibility.common.DescriptionType electionType, com.uhc.schema.model.eligibility.common.DescriptionType enrollmentSource, java.lang.CharSequence marketProductName, java.lang.CharSequence regionPlanIdentifier, com.uhc.schema.model.eligibility.common.DescriptionType terminationReason) {
    this.conservationReason = conservationReason;
    this.electionType = electionType;
    this.enrollmentSource = enrollmentSource;
    this.marketProductName = marketProductName;
    this.regionPlanIdentifier = regionPlanIdentifier;
    this.terminationReason = terminationReason;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return conservationReason;
    case 1: return electionType;
    case 2: return enrollmentSource;
    case 3: return marketProductName;
    case 4: return regionPlanIdentifier;
    case 5: return terminationReason;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: conservationReason = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 1: electionType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 2: enrollmentSource = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 3: marketProductName = (java.lang.CharSequence)value$; break;
    case 4: regionPlanIdentifier = (java.lang.CharSequence)value$; break;
    case 5: terminationReason = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'conservationReason' field.
   * @return The value of the 'conservationReason' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getConservationReason() {
    return conservationReason;
  }

  /**
   * Sets the value of the 'conservationReason' field.
   * @param value the value to set.
   */
  public void setConservationReason(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.conservationReason = value;
  }

  /**
   * Gets the value of the 'electionType' field.
   * @return The value of the 'electionType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getElectionType() {
    return electionType;
  }

  /**
   * Sets the value of the 'electionType' field.
   * @param value the value to set.
   */
  public void setElectionType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.electionType = value;
  }

  /**
   * Gets the value of the 'enrollmentSource' field.
   * @return The value of the 'enrollmentSource' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getEnrollmentSource() {
    return enrollmentSource;
  }

  /**
   * Sets the value of the 'enrollmentSource' field.
   * @param value the value to set.
   */
  public void setEnrollmentSource(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.enrollmentSource = value;
  }

  /**
   * Gets the value of the 'marketProductName' field.
   * @return The value of the 'marketProductName' field.
   */
  public java.lang.CharSequence getMarketProductName() {
    return marketProductName;
  }

  /**
   * Sets the value of the 'marketProductName' field.
   * @param value the value to set.
   */
  public void setMarketProductName(java.lang.CharSequence value) {
    this.marketProductName = value;
  }

  /**
   * Gets the value of the 'regionPlanIdentifier' field.
   * @return The value of the 'regionPlanIdentifier' field.
   */
  public java.lang.CharSequence getRegionPlanIdentifier() {
    return regionPlanIdentifier;
  }

  /**
   * Sets the value of the 'regionPlanIdentifier' field.
   * @param value the value to set.
   */
  public void setRegionPlanIdentifier(java.lang.CharSequence value) {
    this.regionPlanIdentifier = value;
  }

  /**
   * Gets the value of the 'terminationReason' field.
   * @return The value of the 'terminationReason' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getTerminationReason() {
    return terminationReason;
  }

  /**
   * Sets the value of the 'terminationReason' field.
   * @param value the value to set.
   */
  public void setTerminationReason(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.terminationReason = value;
  }

  /**
   * Creates a new MedicareAndRetirementMembershipSourceSystemAttributes RecordBuilder.
   * @return A new MedicareAndRetirementMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder();
  }

  /**
   * Creates a new MedicareAndRetirementMembershipSourceSystemAttributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MedicareAndRetirementMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder other) {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder(other);
  }

  /**
   * Creates a new MedicareAndRetirementMembershipSourceSystemAttributes RecordBuilder by copying an existing MedicareAndRetirementMembershipSourceSystemAttributes instance.
   * @param other The existing instance to copy.
   * @return A new MedicareAndRetirementMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes other) {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder(other);
  }

  /**
   * RecordBuilder for MedicareAndRetirementMembershipSourceSystemAttributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MedicareAndRetirementMembershipSourceSystemAttributes>
    implements org.apache.avro.data.RecordBuilder<MedicareAndRetirementMembershipSourceSystemAttributes> {

    private com.uhc.schema.model.eligibility.common.DescriptionType conservationReason;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder conservationReasonBuilder;
    private com.uhc.schema.model.eligibility.common.DescriptionType electionType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder electionTypeBuilder;
    private com.uhc.schema.model.eligibility.common.DescriptionType enrollmentSource;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder enrollmentSourceBuilder;
    private java.lang.CharSequence marketProductName;
    private java.lang.CharSequence regionPlanIdentifier;
    private com.uhc.schema.model.eligibility.common.DescriptionType terminationReason;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder terminationReasonBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.conservationReason)) {
        this.conservationReason = data().deepCopy(fields()[0].schema(), other.conservationReason);
        fieldSetFlags()[0] = true;
      }
      if (other.hasConservationReasonBuilder()) {
        this.conservationReasonBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getConservationReasonBuilder());
      }
      if (isValidValue(fields()[1], other.electionType)) {
        this.electionType = data().deepCopy(fields()[1].schema(), other.electionType);
        fieldSetFlags()[1] = true;
      }
      if (other.hasElectionTypeBuilder()) {
        this.electionTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getElectionTypeBuilder());
      }
      if (isValidValue(fields()[2], other.enrollmentSource)) {
        this.enrollmentSource = data().deepCopy(fields()[2].schema(), other.enrollmentSource);
        fieldSetFlags()[2] = true;
      }
      if (other.hasEnrollmentSourceBuilder()) {
        this.enrollmentSourceBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getEnrollmentSourceBuilder());
      }
      if (isValidValue(fields()[3], other.marketProductName)) {
        this.marketProductName = data().deepCopy(fields()[3].schema(), other.marketProductName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.regionPlanIdentifier)) {
        this.regionPlanIdentifier = data().deepCopy(fields()[4].schema(), other.regionPlanIdentifier);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.terminationReason)) {
        this.terminationReason = data().deepCopy(fields()[5].schema(), other.terminationReason);
        fieldSetFlags()[5] = true;
      }
      if (other.hasTerminationReasonBuilder()) {
        this.terminationReasonBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getTerminationReasonBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MedicareAndRetirementMembershipSourceSystemAttributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.conservationReason)) {
        this.conservationReason = data().deepCopy(fields()[0].schema(), other.conservationReason);
        fieldSetFlags()[0] = true;
      }
      this.conservationReasonBuilder = null;
      if (isValidValue(fields()[1], other.electionType)) {
        this.electionType = data().deepCopy(fields()[1].schema(), other.electionType);
        fieldSetFlags()[1] = true;
      }
      this.electionTypeBuilder = null;
      if (isValidValue(fields()[2], other.enrollmentSource)) {
        this.enrollmentSource = data().deepCopy(fields()[2].schema(), other.enrollmentSource);
        fieldSetFlags()[2] = true;
      }
      this.enrollmentSourceBuilder = null;
      if (isValidValue(fields()[3], other.marketProductName)) {
        this.marketProductName = data().deepCopy(fields()[3].schema(), other.marketProductName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.regionPlanIdentifier)) {
        this.regionPlanIdentifier = data().deepCopy(fields()[4].schema(), other.regionPlanIdentifier);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.terminationReason)) {
        this.terminationReason = data().deepCopy(fields()[5].schema(), other.terminationReason);
        fieldSetFlags()[5] = true;
      }
      this.terminationReasonBuilder = null;
    }

    /**
      * Gets the value of the 'conservationReason' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getConservationReason() {
      return conservationReason;
    }

    /**
      * Sets the value of the 'conservationReason' field.
      * @param value The value of 'conservationReason'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder setConservationReason(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[0], value);
      this.conservationReasonBuilder = null;
      this.conservationReason = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'conservationReason' field has been set.
      * @return True if the 'conservationReason' field has been set, false otherwise.
      */
    public boolean hasConservationReason() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'conservationReason' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getConservationReasonBuilder() {
      if (conservationReasonBuilder == null) {
        if (hasConservationReason()) {
          setConservationReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(conservationReason));
        } else {
          setConservationReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return conservationReasonBuilder;
    }

    /**
     * Sets the Builder instance for the 'conservationReason' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder setConservationReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearConservationReason();
      conservationReasonBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'conservationReason' field has an active Builder instance
     * @return True if the 'conservationReason' field has an active Builder instance
     */
    public boolean hasConservationReasonBuilder() {
      return conservationReasonBuilder != null;
    }

    /**
      * Clears the value of the 'conservationReason' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder clearConservationReason() {
      conservationReason = null;
      conservationReasonBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'electionType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getElectionType() {
      return electionType;
    }

    /**
      * Sets the value of the 'electionType' field.
      * @param value The value of 'electionType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder setElectionType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[1], value);
      this.electionTypeBuilder = null;
      this.electionType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'electionType' field has been set.
      * @return True if the 'electionType' field has been set, false otherwise.
      */
    public boolean hasElectionType() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'electionType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getElectionTypeBuilder() {
      if (electionTypeBuilder == null) {
        if (hasElectionType()) {
          setElectionTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(electionType));
        } else {
          setElectionTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return electionTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'electionType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder setElectionTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearElectionType();
      electionTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'electionType' field has an active Builder instance
     * @return True if the 'electionType' field has an active Builder instance
     */
    public boolean hasElectionTypeBuilder() {
      return electionTypeBuilder != null;
    }

    /**
      * Clears the value of the 'electionType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder clearElectionType() {
      electionType = null;
      electionTypeBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'enrollmentSource' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getEnrollmentSource() {
      return enrollmentSource;
    }

    /**
      * Sets the value of the 'enrollmentSource' field.
      * @param value The value of 'enrollmentSource'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder setEnrollmentSource(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[2], value);
      this.enrollmentSourceBuilder = null;
      this.enrollmentSource = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'enrollmentSource' field has been set.
      * @return True if the 'enrollmentSource' field has been set, false otherwise.
      */
    public boolean hasEnrollmentSource() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'enrollmentSource' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getEnrollmentSourceBuilder() {
      if (enrollmentSourceBuilder == null) {
        if (hasEnrollmentSource()) {
          setEnrollmentSourceBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(enrollmentSource));
        } else {
          setEnrollmentSourceBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return enrollmentSourceBuilder;
    }

    /**
     * Sets the Builder instance for the 'enrollmentSource' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder setEnrollmentSourceBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearEnrollmentSource();
      enrollmentSourceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'enrollmentSource' field has an active Builder instance
     * @return True if the 'enrollmentSource' field has an active Builder instance
     */
    public boolean hasEnrollmentSourceBuilder() {
      return enrollmentSourceBuilder != null;
    }

    /**
      * Clears the value of the 'enrollmentSource' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder clearEnrollmentSource() {
      enrollmentSource = null;
      enrollmentSourceBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'marketProductName' field.
      * @return The value.
      */
    public java.lang.CharSequence getMarketProductName() {
      return marketProductName;
    }

    /**
      * Sets the value of the 'marketProductName' field.
      * @param value The value of 'marketProductName'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder setMarketProductName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.marketProductName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'marketProductName' field has been set.
      * @return True if the 'marketProductName' field has been set, false otherwise.
      */
    public boolean hasMarketProductName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'marketProductName' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder clearMarketProductName() {
      marketProductName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'regionPlanIdentifier' field.
      * @return The value.
      */
    public java.lang.CharSequence getRegionPlanIdentifier() {
      return regionPlanIdentifier;
    }

    /**
      * Sets the value of the 'regionPlanIdentifier' field.
      * @param value The value of 'regionPlanIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder setRegionPlanIdentifier(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.regionPlanIdentifier = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'regionPlanIdentifier' field has been set.
      * @return True if the 'regionPlanIdentifier' field has been set, false otherwise.
      */
    public boolean hasRegionPlanIdentifier() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'regionPlanIdentifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder clearRegionPlanIdentifier() {
      regionPlanIdentifier = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'terminationReason' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getTerminationReason() {
      return terminationReason;
    }

    /**
      * Sets the value of the 'terminationReason' field.
      * @param value The value of 'terminationReason'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder setTerminationReason(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[5], value);
      this.terminationReasonBuilder = null;
      this.terminationReason = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'terminationReason' field has been set.
      * @return True if the 'terminationReason' field has been set, false otherwise.
      */
    public boolean hasTerminationReason() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'terminationReason' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getTerminationReasonBuilder() {
      if (terminationReasonBuilder == null) {
        if (hasTerminationReason()) {
          setTerminationReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(terminationReason));
        } else {
          setTerminationReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return terminationReasonBuilder;
    }

    /**
     * Sets the Builder instance for the 'terminationReason' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder setTerminationReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearTerminationReason();
      terminationReasonBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'terminationReason' field has an active Builder instance
     * @return True if the 'terminationReason' field has an active Builder instance
     */
    public boolean hasTerminationReasonBuilder() {
      return terminationReasonBuilder != null;
    }

    /**
      * Clears the value of the 'terminationReason' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementMembershipSourceSystemAttributes.Builder clearTerminationReason() {
      terminationReason = null;
      terminationReasonBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MedicareAndRetirementMembershipSourceSystemAttributes build() {
      try {
        MedicareAndRetirementMembershipSourceSystemAttributes record = new MedicareAndRetirementMembershipSourceSystemAttributes();
        if (conservationReasonBuilder != null) {
          record.conservationReason = this.conservationReasonBuilder.build();
        } else {
          record.conservationReason = fieldSetFlags()[0] ? this.conservationReason : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[0]);
        }
        if (electionTypeBuilder != null) {
          record.electionType = this.electionTypeBuilder.build();
        } else {
          record.electionType = fieldSetFlags()[1] ? this.electionType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[1]);
        }
        if (enrollmentSourceBuilder != null) {
          record.enrollmentSource = this.enrollmentSourceBuilder.build();
        } else {
          record.enrollmentSource = fieldSetFlags()[2] ? this.enrollmentSource : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[2]);
        }
        record.marketProductName = fieldSetFlags()[3] ? this.marketProductName : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.regionPlanIdentifier = fieldSetFlags()[4] ? this.regionPlanIdentifier : (java.lang.CharSequence) defaultValue(fields()[4]);
        if (terminationReasonBuilder != null) {
          record.terminationReason = this.terminationReasonBuilder.build();
        } else {
          record.terminationReason = fieldSetFlags()[5] ? this.terminationReason : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[5]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MedicareAndRetirementMembershipSourceSystemAttributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<MedicareAndRetirementMembershipSourceSystemAttributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MedicareAndRetirementMembershipSourceSystemAttributes>
    READER$ = (org.apache.avro.io.DatumReader<MedicareAndRetirementMembershipSourceSystemAttributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
