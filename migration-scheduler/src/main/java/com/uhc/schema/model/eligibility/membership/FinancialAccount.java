/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.membership;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FinancialAccount extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3015070194892978058L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FinancialAccount\",\"namespace\":\"com.uhc.schema.model.eligibility.membership\",\"fields\":[{\"name\":\"benefitStatus\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"customerId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"financePolicyNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"financePolicySuffixCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"hsaIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"iPlanIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"postDeductibleAccountSequenceNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Post-deductible order of Accounts. Indicates the payment hierarchy order, post-deductible.\",\"default\":null},{\"name\":\"preDeductibleAccountSequenceNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Pre-deductible order of Accounts. Indicates the payment hierarchy order, pre-deductible.\",\"default\":null},{\"name\":\"productSubcategoryType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"raiderOnlyIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"relationshipSequenceNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Identifies a unique member within a family. Currently used as the member identifier in communication between CES and Medco.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FinancialAccount> ENCODER =
      new BinaryMessageEncoder<FinancialAccount>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FinancialAccount> DECODER =
      new BinaryMessageDecoder<FinancialAccount>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<FinancialAccount> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<FinancialAccount> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FinancialAccount>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this FinancialAccount to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a FinancialAccount from a ByteBuffer. */
  public static FinancialAccount fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType benefitStatus;
  @Deprecated public java.lang.CharSequence customerId;
  @Deprecated public java.lang.CharSequence financePolicyNumber;
  @Deprecated public java.lang.CharSequence financePolicySuffixCode;
  @Deprecated public boolean hsaIndicator;
  @Deprecated public java.lang.CharSequence iPlanIndicator;
  @Deprecated public java.lang.CharSequence identifier;
  /** Post-deductible order of Accounts. Indicates the payment hierarchy order, post-deductible. */
  @Deprecated public java.lang.CharSequence postDeductibleAccountSequenceNumber;
  /** Pre-deductible order of Accounts. Indicates the payment hierarchy order, pre-deductible. */
  @Deprecated public java.lang.CharSequence preDeductibleAccountSequenceNumber;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType productSubcategoryType;
  @Deprecated public boolean raiderOnlyIndicator;
  /** Identifies a unique member within a family. Currently used as the member identifier in communication between CES and Medco. */
  @Deprecated public java.lang.CharSequence relationshipSequenceNumber;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FinancialAccount() {}

  /**
   * All-args constructor.
   * @param benefitStatus The new value for benefitStatus
   * @param customerId The new value for customerId
   * @param financePolicyNumber The new value for financePolicyNumber
   * @param financePolicySuffixCode The new value for financePolicySuffixCode
   * @param hsaIndicator The new value for hsaIndicator
   * @param iPlanIndicator The new value for iPlanIndicator
   * @param identifier The new value for identifier
   * @param postDeductibleAccountSequenceNumber Post-deductible order of Accounts. Indicates the payment hierarchy order, post-deductible.
   * @param preDeductibleAccountSequenceNumber Pre-deductible order of Accounts. Indicates the payment hierarchy order, pre-deductible.
   * @param productSubcategoryType The new value for productSubcategoryType
   * @param raiderOnlyIndicator The new value for raiderOnlyIndicator
   * @param relationshipSequenceNumber Identifies a unique member within a family. Currently used as the member identifier in communication between CES and Medco.
   */
  public FinancialAccount(com.uhc.schema.model.eligibility.common.DescriptionType benefitStatus, java.lang.CharSequence customerId, java.lang.CharSequence financePolicyNumber, java.lang.CharSequence financePolicySuffixCode, java.lang.Boolean hsaIndicator, java.lang.CharSequence iPlanIndicator, java.lang.CharSequence identifier, java.lang.CharSequence postDeductibleAccountSequenceNumber, java.lang.CharSequence preDeductibleAccountSequenceNumber, com.uhc.schema.model.eligibility.common.DescriptionType productSubcategoryType, java.lang.Boolean raiderOnlyIndicator, java.lang.CharSequence relationshipSequenceNumber) {
    this.benefitStatus = benefitStatus;
    this.customerId = customerId;
    this.financePolicyNumber = financePolicyNumber;
    this.financePolicySuffixCode = financePolicySuffixCode;
    this.hsaIndicator = hsaIndicator;
    this.iPlanIndicator = iPlanIndicator;
    this.identifier = identifier;
    this.postDeductibleAccountSequenceNumber = postDeductibleAccountSequenceNumber;
    this.preDeductibleAccountSequenceNumber = preDeductibleAccountSequenceNumber;
    this.productSubcategoryType = productSubcategoryType;
    this.raiderOnlyIndicator = raiderOnlyIndicator;
    this.relationshipSequenceNumber = relationshipSequenceNumber;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return benefitStatus;
    case 1: return customerId;
    case 2: return financePolicyNumber;
    case 3: return financePolicySuffixCode;
    case 4: return hsaIndicator;
    case 5: return iPlanIndicator;
    case 6: return identifier;
    case 7: return postDeductibleAccountSequenceNumber;
    case 8: return preDeductibleAccountSequenceNumber;
    case 9: return productSubcategoryType;
    case 10: return raiderOnlyIndicator;
    case 11: return relationshipSequenceNumber;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: benefitStatus = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 1: customerId = (java.lang.CharSequence)value$; break;
    case 2: financePolicyNumber = (java.lang.CharSequence)value$; break;
    case 3: financePolicySuffixCode = (java.lang.CharSequence)value$; break;
    case 4: hsaIndicator = (java.lang.Boolean)value$; break;
    case 5: iPlanIndicator = (java.lang.CharSequence)value$; break;
    case 6: identifier = (java.lang.CharSequence)value$; break;
    case 7: postDeductibleAccountSequenceNumber = (java.lang.CharSequence)value$; break;
    case 8: preDeductibleAccountSequenceNumber = (java.lang.CharSequence)value$; break;
    case 9: productSubcategoryType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 10: raiderOnlyIndicator = (java.lang.Boolean)value$; break;
    case 11: relationshipSequenceNumber = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'benefitStatus' field.
   * @return The value of the 'benefitStatus' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getBenefitStatus() {
    return benefitStatus;
  }

  /**
   * Sets the value of the 'benefitStatus' field.
   * @param value the value to set.
   */
  public void setBenefitStatus(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.benefitStatus = value;
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.CharSequence getCustomerId() {
    return customerId;
  }

  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.CharSequence value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'financePolicyNumber' field.
   * @return The value of the 'financePolicyNumber' field.
   */
  public java.lang.CharSequence getFinancePolicyNumber() {
    return financePolicyNumber;
  }

  /**
   * Sets the value of the 'financePolicyNumber' field.
   * @param value the value to set.
   */
  public void setFinancePolicyNumber(java.lang.CharSequence value) {
    this.financePolicyNumber = value;
  }

  /**
   * Gets the value of the 'financePolicySuffixCode' field.
   * @return The value of the 'financePolicySuffixCode' field.
   */
  public java.lang.CharSequence getFinancePolicySuffixCode() {
    return financePolicySuffixCode;
  }

  /**
   * Sets the value of the 'financePolicySuffixCode' field.
   * @param value the value to set.
   */
  public void setFinancePolicySuffixCode(java.lang.CharSequence value) {
    this.financePolicySuffixCode = value;
  }

  /**
   * Gets the value of the 'hsaIndicator' field.
   * @return The value of the 'hsaIndicator' field.
   */
  public java.lang.Boolean getHsaIndicator() {
    return hsaIndicator;
  }

  /**
   * Sets the value of the 'hsaIndicator' field.
   * @param value the value to set.
   */
  public void setHsaIndicator(java.lang.Boolean value) {
    this.hsaIndicator = value;
  }

  /**
   * Gets the value of the 'iPlanIndicator' field.
   * @return The value of the 'iPlanIndicator' field.
   */
  public java.lang.CharSequence getIPlanIndicator() {
    return iPlanIndicator;
  }

  /**
   * Sets the value of the 'iPlanIndicator' field.
   * @param value the value to set.
   */
  public void setIPlanIndicator(java.lang.CharSequence value) {
    this.iPlanIndicator = value;
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return The value of the 'identifier' field.
   */
  public java.lang.CharSequence getIdentifier() {
    return identifier;
  }

  /**
   * Sets the value of the 'identifier' field.
   * @param value the value to set.
   */
  public void setIdentifier(java.lang.CharSequence value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'postDeductibleAccountSequenceNumber' field.
   * @return Post-deductible order of Accounts. Indicates the payment hierarchy order, post-deductible.
   */
  public java.lang.CharSequence getPostDeductibleAccountSequenceNumber() {
    return postDeductibleAccountSequenceNumber;
  }

  /**
   * Sets the value of the 'postDeductibleAccountSequenceNumber' field.
   * Post-deductible order of Accounts. Indicates the payment hierarchy order, post-deductible.
   * @param value the value to set.
   */
  public void setPostDeductibleAccountSequenceNumber(java.lang.CharSequence value) {
    this.postDeductibleAccountSequenceNumber = value;
  }

  /**
   * Gets the value of the 'preDeductibleAccountSequenceNumber' field.
   * @return Pre-deductible order of Accounts. Indicates the payment hierarchy order, pre-deductible.
   */
  public java.lang.CharSequence getPreDeductibleAccountSequenceNumber() {
    return preDeductibleAccountSequenceNumber;
  }

  /**
   * Sets the value of the 'preDeductibleAccountSequenceNumber' field.
   * Pre-deductible order of Accounts. Indicates the payment hierarchy order, pre-deductible.
   * @param value the value to set.
   */
  public void setPreDeductibleAccountSequenceNumber(java.lang.CharSequence value) {
    this.preDeductibleAccountSequenceNumber = value;
  }

  /**
   * Gets the value of the 'productSubcategoryType' field.
   * @return The value of the 'productSubcategoryType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getProductSubcategoryType() {
    return productSubcategoryType;
  }

  /**
   * Sets the value of the 'productSubcategoryType' field.
   * @param value the value to set.
   */
  public void setProductSubcategoryType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.productSubcategoryType = value;
  }

  /**
   * Gets the value of the 'raiderOnlyIndicator' field.
   * @return The value of the 'raiderOnlyIndicator' field.
   */
  public java.lang.Boolean getRaiderOnlyIndicator() {
    return raiderOnlyIndicator;
  }

  /**
   * Sets the value of the 'raiderOnlyIndicator' field.
   * @param value the value to set.
   */
  public void setRaiderOnlyIndicator(java.lang.Boolean value) {
    this.raiderOnlyIndicator = value;
  }

  /**
   * Gets the value of the 'relationshipSequenceNumber' field.
   * @return Identifies a unique member within a family. Currently used as the member identifier in communication between CES and Medco.
   */
  public java.lang.CharSequence getRelationshipSequenceNumber() {
    return relationshipSequenceNumber;
  }

  /**
   * Sets the value of the 'relationshipSequenceNumber' field.
   * Identifies a unique member within a family. Currently used as the member identifier in communication between CES and Medco.
   * @param value the value to set.
   */
  public void setRelationshipSequenceNumber(java.lang.CharSequence value) {
    this.relationshipSequenceNumber = value;
  }

  /**
   * Creates a new FinancialAccount RecordBuilder.
   * @return A new FinancialAccount RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder();
  }

  /**
   * Creates a new FinancialAccount RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FinancialAccount RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder newBuilder(com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder other) {
    return new com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder(other);
  }

  /**
   * Creates a new FinancialAccount RecordBuilder by copying an existing FinancialAccount instance.
   * @param other The existing instance to copy.
   * @return A new FinancialAccount RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder newBuilder(com.uhc.schema.model.eligibility.membership.FinancialAccount other) {
    return new com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder(other);
  }

  /**
   * RecordBuilder for FinancialAccount instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FinancialAccount>
    implements org.apache.avro.data.RecordBuilder<FinancialAccount> {

    private com.uhc.schema.model.eligibility.common.DescriptionType benefitStatus;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder benefitStatusBuilder;
    private java.lang.CharSequence customerId;
    private java.lang.CharSequence financePolicyNumber;
    private java.lang.CharSequence financePolicySuffixCode;
    private boolean hsaIndicator;
    private java.lang.CharSequence iPlanIndicator;
    private java.lang.CharSequence identifier;
    /** Post-deductible order of Accounts. Indicates the payment hierarchy order, post-deductible. */
    private java.lang.CharSequence postDeductibleAccountSequenceNumber;
    /** Pre-deductible order of Accounts. Indicates the payment hierarchy order, pre-deductible. */
    private java.lang.CharSequence preDeductibleAccountSequenceNumber;
    private com.uhc.schema.model.eligibility.common.DescriptionType productSubcategoryType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder productSubcategoryTypeBuilder;
    private boolean raiderOnlyIndicator;
    /** Identifies a unique member within a family. Currently used as the member identifier in communication between CES and Medco. */
    private java.lang.CharSequence relationshipSequenceNumber;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.benefitStatus)) {
        this.benefitStatus = data().deepCopy(fields()[0].schema(), other.benefitStatus);
        fieldSetFlags()[0] = true;
      }
      if (other.hasBenefitStatusBuilder()) {
        this.benefitStatusBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getBenefitStatusBuilder());
      }
      if (isValidValue(fields()[1], other.customerId)) {
        this.customerId = data().deepCopy(fields()[1].schema(), other.customerId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.financePolicyNumber)) {
        this.financePolicyNumber = data().deepCopy(fields()[2].schema(), other.financePolicyNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.financePolicySuffixCode)) {
        this.financePolicySuffixCode = data().deepCopy(fields()[3].schema(), other.financePolicySuffixCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hsaIndicator)) {
        this.hsaIndicator = data().deepCopy(fields()[4].schema(), other.hsaIndicator);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.iPlanIndicator)) {
        this.iPlanIndicator = data().deepCopy(fields()[5].schema(), other.iPlanIndicator);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.identifier)) {
        this.identifier = data().deepCopy(fields()[6].schema(), other.identifier);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.postDeductibleAccountSequenceNumber)) {
        this.postDeductibleAccountSequenceNumber = data().deepCopy(fields()[7].schema(), other.postDeductibleAccountSequenceNumber);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.preDeductibleAccountSequenceNumber)) {
        this.preDeductibleAccountSequenceNumber = data().deepCopy(fields()[8].schema(), other.preDeductibleAccountSequenceNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.productSubcategoryType)) {
        this.productSubcategoryType = data().deepCopy(fields()[9].schema(), other.productSubcategoryType);
        fieldSetFlags()[9] = true;
      }
      if (other.hasProductSubcategoryTypeBuilder()) {
        this.productSubcategoryTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getProductSubcategoryTypeBuilder());
      }
      if (isValidValue(fields()[10], other.raiderOnlyIndicator)) {
        this.raiderOnlyIndicator = data().deepCopy(fields()[10].schema(), other.raiderOnlyIndicator);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.relationshipSequenceNumber)) {
        this.relationshipSequenceNumber = data().deepCopy(fields()[11].schema(), other.relationshipSequenceNumber);
        fieldSetFlags()[11] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing FinancialAccount instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.FinancialAccount other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.benefitStatus)) {
        this.benefitStatus = data().deepCopy(fields()[0].schema(), other.benefitStatus);
        fieldSetFlags()[0] = true;
      }
      this.benefitStatusBuilder = null;
      if (isValidValue(fields()[1], other.customerId)) {
        this.customerId = data().deepCopy(fields()[1].schema(), other.customerId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.financePolicyNumber)) {
        this.financePolicyNumber = data().deepCopy(fields()[2].schema(), other.financePolicyNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.financePolicySuffixCode)) {
        this.financePolicySuffixCode = data().deepCopy(fields()[3].schema(), other.financePolicySuffixCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hsaIndicator)) {
        this.hsaIndicator = data().deepCopy(fields()[4].schema(), other.hsaIndicator);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.iPlanIndicator)) {
        this.iPlanIndicator = data().deepCopy(fields()[5].schema(), other.iPlanIndicator);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.identifier)) {
        this.identifier = data().deepCopy(fields()[6].schema(), other.identifier);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.postDeductibleAccountSequenceNumber)) {
        this.postDeductibleAccountSequenceNumber = data().deepCopy(fields()[7].schema(), other.postDeductibleAccountSequenceNumber);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.preDeductibleAccountSequenceNumber)) {
        this.preDeductibleAccountSequenceNumber = data().deepCopy(fields()[8].schema(), other.preDeductibleAccountSequenceNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.productSubcategoryType)) {
        this.productSubcategoryType = data().deepCopy(fields()[9].schema(), other.productSubcategoryType);
        fieldSetFlags()[9] = true;
      }
      this.productSubcategoryTypeBuilder = null;
      if (isValidValue(fields()[10], other.raiderOnlyIndicator)) {
        this.raiderOnlyIndicator = data().deepCopy(fields()[10].schema(), other.raiderOnlyIndicator);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.relationshipSequenceNumber)) {
        this.relationshipSequenceNumber = data().deepCopy(fields()[11].schema(), other.relationshipSequenceNumber);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'benefitStatus' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getBenefitStatus() {
      return benefitStatus;
    }

    /**
      * Sets the value of the 'benefitStatus' field.
      * @param value The value of 'benefitStatus'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setBenefitStatus(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[0], value);
      this.benefitStatusBuilder = null;
      this.benefitStatus = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'benefitStatus' field has been set.
      * @return True if the 'benefitStatus' field has been set, false otherwise.
      */
    public boolean hasBenefitStatus() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'benefitStatus' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getBenefitStatusBuilder() {
      if (benefitStatusBuilder == null) {
        if (hasBenefitStatus()) {
          setBenefitStatusBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(benefitStatus));
        } else {
          setBenefitStatusBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return benefitStatusBuilder;
    }

    /**
     * Sets the Builder instance for the 'benefitStatus' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setBenefitStatusBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearBenefitStatus();
      benefitStatusBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'benefitStatus' field has an active Builder instance
     * @return True if the 'benefitStatus' field has an active Builder instance
     */
    public boolean hasBenefitStatusBuilder() {
      return benefitStatusBuilder != null;
    }

    /**
      * Clears the value of the 'benefitStatus' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearBenefitStatus() {
      benefitStatus = null;
      benefitStatusBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomerId() {
      return customerId;
    }

    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setCustomerId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.customerId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'financePolicyNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getFinancePolicyNumber() {
      return financePolicyNumber;
    }

    /**
      * Sets the value of the 'financePolicyNumber' field.
      * @param value The value of 'financePolicyNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setFinancePolicyNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.financePolicyNumber = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'financePolicyNumber' field has been set.
      * @return True if the 'financePolicyNumber' field has been set, false otherwise.
      */
    public boolean hasFinancePolicyNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'financePolicyNumber' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearFinancePolicyNumber() {
      financePolicyNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'financePolicySuffixCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getFinancePolicySuffixCode() {
      return financePolicySuffixCode;
    }

    /**
      * Sets the value of the 'financePolicySuffixCode' field.
      * @param value The value of 'financePolicySuffixCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setFinancePolicySuffixCode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.financePolicySuffixCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'financePolicySuffixCode' field has been set.
      * @return True if the 'financePolicySuffixCode' field has been set, false otherwise.
      */
    public boolean hasFinancePolicySuffixCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'financePolicySuffixCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearFinancePolicySuffixCode() {
      financePolicySuffixCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'hsaIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getHsaIndicator() {
      return hsaIndicator;
    }

    /**
      * Sets the value of the 'hsaIndicator' field.
      * @param value The value of 'hsaIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setHsaIndicator(boolean value) {
      validate(fields()[4], value);
      this.hsaIndicator = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'hsaIndicator' field has been set.
      * @return True if the 'hsaIndicator' field has been set, false otherwise.
      */
    public boolean hasHsaIndicator() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'hsaIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearHsaIndicator() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'iPlanIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getIPlanIndicator() {
      return iPlanIndicator;
    }

    /**
      * Sets the value of the 'iPlanIndicator' field.
      * @param value The value of 'iPlanIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setIPlanIndicator(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.iPlanIndicator = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'iPlanIndicator' field has been set.
      * @return True if the 'iPlanIndicator' field has been set, false otherwise.
      */
    public boolean hasIPlanIndicator() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'iPlanIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearIPlanIndicator() {
      iPlanIndicator = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'identifier' field.
      * @return The value.
      */
    public java.lang.CharSequence getIdentifier() {
      return identifier;
    }

    /**
      * Sets the value of the 'identifier' field.
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setIdentifier(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.identifier = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'identifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearIdentifier() {
      identifier = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'postDeductibleAccountSequenceNumber' field.
      * Post-deductible order of Accounts. Indicates the payment hierarchy order, post-deductible.
      * @return The value.
      */
    public java.lang.CharSequence getPostDeductibleAccountSequenceNumber() {
      return postDeductibleAccountSequenceNumber;
    }

    /**
      * Sets the value of the 'postDeductibleAccountSequenceNumber' field.
      * Post-deductible order of Accounts. Indicates the payment hierarchy order, post-deductible.
      * @param value The value of 'postDeductibleAccountSequenceNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setPostDeductibleAccountSequenceNumber(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.postDeductibleAccountSequenceNumber = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'postDeductibleAccountSequenceNumber' field has been set.
      * Post-deductible order of Accounts. Indicates the payment hierarchy order, post-deductible.
      * @return True if the 'postDeductibleAccountSequenceNumber' field has been set, false otherwise.
      */
    public boolean hasPostDeductibleAccountSequenceNumber() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'postDeductibleAccountSequenceNumber' field.
      * Post-deductible order of Accounts. Indicates the payment hierarchy order, post-deductible.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearPostDeductibleAccountSequenceNumber() {
      postDeductibleAccountSequenceNumber = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'preDeductibleAccountSequenceNumber' field.
      * Pre-deductible order of Accounts. Indicates the payment hierarchy order, pre-deductible.
      * @return The value.
      */
    public java.lang.CharSequence getPreDeductibleAccountSequenceNumber() {
      return preDeductibleAccountSequenceNumber;
    }

    /**
      * Sets the value of the 'preDeductibleAccountSequenceNumber' field.
      * Pre-deductible order of Accounts. Indicates the payment hierarchy order, pre-deductible.
      * @param value The value of 'preDeductibleAccountSequenceNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setPreDeductibleAccountSequenceNumber(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.preDeductibleAccountSequenceNumber = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'preDeductibleAccountSequenceNumber' field has been set.
      * Pre-deductible order of Accounts. Indicates the payment hierarchy order, pre-deductible.
      * @return True if the 'preDeductibleAccountSequenceNumber' field has been set, false otherwise.
      */
    public boolean hasPreDeductibleAccountSequenceNumber() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'preDeductibleAccountSequenceNumber' field.
      * Pre-deductible order of Accounts. Indicates the payment hierarchy order, pre-deductible.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearPreDeductibleAccountSequenceNumber() {
      preDeductibleAccountSequenceNumber = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'productSubcategoryType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getProductSubcategoryType() {
      return productSubcategoryType;
    }

    /**
      * Sets the value of the 'productSubcategoryType' field.
      * @param value The value of 'productSubcategoryType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setProductSubcategoryType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[9], value);
      this.productSubcategoryTypeBuilder = null;
      this.productSubcategoryType = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'productSubcategoryType' field has been set.
      * @return True if the 'productSubcategoryType' field has been set, false otherwise.
      */
    public boolean hasProductSubcategoryType() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'productSubcategoryType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getProductSubcategoryTypeBuilder() {
      if (productSubcategoryTypeBuilder == null) {
        if (hasProductSubcategoryType()) {
          setProductSubcategoryTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(productSubcategoryType));
        } else {
          setProductSubcategoryTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return productSubcategoryTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'productSubcategoryType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setProductSubcategoryTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearProductSubcategoryType();
      productSubcategoryTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'productSubcategoryType' field has an active Builder instance
     * @return True if the 'productSubcategoryType' field has an active Builder instance
     */
    public boolean hasProductSubcategoryTypeBuilder() {
      return productSubcategoryTypeBuilder != null;
    }

    /**
      * Clears the value of the 'productSubcategoryType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearProductSubcategoryType() {
      productSubcategoryType = null;
      productSubcategoryTypeBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'raiderOnlyIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getRaiderOnlyIndicator() {
      return raiderOnlyIndicator;
    }

    /**
      * Sets the value of the 'raiderOnlyIndicator' field.
      * @param value The value of 'raiderOnlyIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setRaiderOnlyIndicator(boolean value) {
      validate(fields()[10], value);
      this.raiderOnlyIndicator = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'raiderOnlyIndicator' field has been set.
      * @return True if the 'raiderOnlyIndicator' field has been set, false otherwise.
      */
    public boolean hasRaiderOnlyIndicator() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'raiderOnlyIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearRaiderOnlyIndicator() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'relationshipSequenceNumber' field.
      * Identifies a unique member within a family. Currently used as the member identifier in communication between CES and Medco.
      * @return The value.
      */
    public java.lang.CharSequence getRelationshipSequenceNumber() {
      return relationshipSequenceNumber;
    }

    /**
      * Sets the value of the 'relationshipSequenceNumber' field.
      * Identifies a unique member within a family. Currently used as the member identifier in communication between CES and Medco.
      * @param value The value of 'relationshipSequenceNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder setRelationshipSequenceNumber(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.relationshipSequenceNumber = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'relationshipSequenceNumber' field has been set.
      * Identifies a unique member within a family. Currently used as the member identifier in communication between CES and Medco.
      * @return True if the 'relationshipSequenceNumber' field has been set, false otherwise.
      */
    public boolean hasRelationshipSequenceNumber() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'relationshipSequenceNumber' field.
      * Identifies a unique member within a family. Currently used as the member identifier in communication between CES and Medco.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.FinancialAccount.Builder clearRelationshipSequenceNumber() {
      relationshipSequenceNumber = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FinancialAccount build() {
      try {
        FinancialAccount record = new FinancialAccount();
        if (benefitStatusBuilder != null) {
          record.benefitStatus = this.benefitStatusBuilder.build();
        } else {
          record.benefitStatus = fieldSetFlags()[0] ? this.benefitStatus : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[0]);
        }
        record.customerId = fieldSetFlags()[1] ? this.customerId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.financePolicyNumber = fieldSetFlags()[2] ? this.financePolicyNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.financePolicySuffixCode = fieldSetFlags()[3] ? this.financePolicySuffixCode : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.hsaIndicator = fieldSetFlags()[4] ? this.hsaIndicator : (java.lang.Boolean) defaultValue(fields()[4]);
        record.iPlanIndicator = fieldSetFlags()[5] ? this.iPlanIndicator : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.identifier = fieldSetFlags()[6] ? this.identifier : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.postDeductibleAccountSequenceNumber = fieldSetFlags()[7] ? this.postDeductibleAccountSequenceNumber : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.preDeductibleAccountSequenceNumber = fieldSetFlags()[8] ? this.preDeductibleAccountSequenceNumber : (java.lang.CharSequence) defaultValue(fields()[8]);
        if (productSubcategoryTypeBuilder != null) {
          record.productSubcategoryType = this.productSubcategoryTypeBuilder.build();
        } else {
          record.productSubcategoryType = fieldSetFlags()[9] ? this.productSubcategoryType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[9]);
        }
        record.raiderOnlyIndicator = fieldSetFlags()[10] ? this.raiderOnlyIndicator : (java.lang.Boolean) defaultValue(fields()[10]);
        record.relationshipSequenceNumber = fieldSetFlags()[11] ? this.relationshipSequenceNumber : (java.lang.CharSequence) defaultValue(fields()[11]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FinancialAccount>
    WRITER$ = (org.apache.avro.io.DatumWriter<FinancialAccount>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FinancialAccount>
    READER$ = (org.apache.avro.io.DatumReader<FinancialAccount>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
