/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.membership;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** California Language Assistance Program */
@org.apache.avro.specific.AvroGenerated
public class CALAP extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7858724436008751983L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CALAP\",\"namespace\":\"com.uhc.schema.model.eligibility.membership\",\"doc\":\"California Language Assistance Program\",\"fields\":[{\"name\":\"calapIndicator\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates if the Policy for this membership record is impacted by the CA Language Assistance Program.  Y or N.\",\"default\":null},{\"name\":\"externalHealthPlanIndicator\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates if the Health Plan for this membership record is external.  Y or N.\",\"default\":null},{\"name\":\"hmoPlanIndicator\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates if the Policy for this membership record is an HMO.  Y or N.\",\"default\":null},{\"name\":\"sourceSytemCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Source system code for the source of CALAP information.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CALAP> ENCODER =
      new BinaryMessageEncoder<CALAP>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CALAP> DECODER =
      new BinaryMessageDecoder<CALAP>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CALAP> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CALAP> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CALAP>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CALAP to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CALAP from a ByteBuffer. */
  public static CALAP fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Indicates if the Policy for this membership record is impacted by the CA Language Assistance Program.  Y or N. */
  @Deprecated public java.lang.CharSequence calapIndicator;
  /** Indicates if the Health Plan for this membership record is external.  Y or N. */
  @Deprecated public java.lang.CharSequence externalHealthPlanIndicator;
  /** Indicates if the Policy for this membership record is an HMO.  Y or N. */
  @Deprecated public java.lang.CharSequence hmoPlanIndicator;
  /** Source system code for the source of CALAP information. */
  @Deprecated public java.lang.CharSequence sourceSytemCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CALAP() {}

  /**
   * All-args constructor.
   * @param calapIndicator Indicates if the Policy for this membership record is impacted by the CA Language Assistance Program.  Y or N.
   * @param externalHealthPlanIndicator Indicates if the Health Plan for this membership record is external.  Y or N.
   * @param hmoPlanIndicator Indicates if the Policy for this membership record is an HMO.  Y or N.
   * @param sourceSytemCode Source system code for the source of CALAP information.
   */
  public CALAP(java.lang.CharSequence calapIndicator, java.lang.CharSequence externalHealthPlanIndicator, java.lang.CharSequence hmoPlanIndicator, java.lang.CharSequence sourceSytemCode) {
    this.calapIndicator = calapIndicator;
    this.externalHealthPlanIndicator = externalHealthPlanIndicator;
    this.hmoPlanIndicator = hmoPlanIndicator;
    this.sourceSytemCode = sourceSytemCode;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return calapIndicator;
    case 1: return externalHealthPlanIndicator;
    case 2: return hmoPlanIndicator;
    case 3: return sourceSytemCode;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: calapIndicator = (java.lang.CharSequence)value$; break;
    case 1: externalHealthPlanIndicator = (java.lang.CharSequence)value$; break;
    case 2: hmoPlanIndicator = (java.lang.CharSequence)value$; break;
    case 3: sourceSytemCode = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'calapIndicator' field.
   * @return Indicates if the Policy for this membership record is impacted by the CA Language Assistance Program.  Y or N.
   */
  public java.lang.CharSequence getCalapIndicator() {
    return calapIndicator;
  }

  /**
   * Sets the value of the 'calapIndicator' field.
   * Indicates if the Policy for this membership record is impacted by the CA Language Assistance Program.  Y or N.
   * @param value the value to set.
   */
  public void setCalapIndicator(java.lang.CharSequence value) {
    this.calapIndicator = value;
  }

  /**
   * Gets the value of the 'externalHealthPlanIndicator' field.
   * @return Indicates if the Health Plan for this membership record is external.  Y or N.
   */
  public java.lang.CharSequence getExternalHealthPlanIndicator() {
    return externalHealthPlanIndicator;
  }

  /**
   * Sets the value of the 'externalHealthPlanIndicator' field.
   * Indicates if the Health Plan for this membership record is external.  Y or N.
   * @param value the value to set.
   */
  public void setExternalHealthPlanIndicator(java.lang.CharSequence value) {
    this.externalHealthPlanIndicator = value;
  }

  /**
   * Gets the value of the 'hmoPlanIndicator' field.
   * @return Indicates if the Policy for this membership record is an HMO.  Y or N.
   */
  public java.lang.CharSequence getHmoPlanIndicator() {
    return hmoPlanIndicator;
  }

  /**
   * Sets the value of the 'hmoPlanIndicator' field.
   * Indicates if the Policy for this membership record is an HMO.  Y or N.
   * @param value the value to set.
   */
  public void setHmoPlanIndicator(java.lang.CharSequence value) {
    this.hmoPlanIndicator = value;
  }

  /**
   * Gets the value of the 'sourceSytemCode' field.
   * @return Source system code for the source of CALAP information.
   */
  public java.lang.CharSequence getSourceSytemCode() {
    return sourceSytemCode;
  }

  /**
   * Sets the value of the 'sourceSytemCode' field.
   * Source system code for the source of CALAP information.
   * @param value the value to set.
   */
  public void setSourceSytemCode(java.lang.CharSequence value) {
    this.sourceSytemCode = value;
  }

  /**
   * Creates a new CALAP RecordBuilder.
   * @return A new CALAP RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.CALAP.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.membership.CALAP.Builder();
  }

  /**
   * Creates a new CALAP RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CALAP RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.CALAP.Builder newBuilder(com.uhc.schema.model.eligibility.membership.CALAP.Builder other) {
    return new com.uhc.schema.model.eligibility.membership.CALAP.Builder(other);
  }

  /**
   * Creates a new CALAP RecordBuilder by copying an existing CALAP instance.
   * @param other The existing instance to copy.
   * @return A new CALAP RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.CALAP.Builder newBuilder(com.uhc.schema.model.eligibility.membership.CALAP other) {
    return new com.uhc.schema.model.eligibility.membership.CALAP.Builder(other);
  }

  /**
   * RecordBuilder for CALAP instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CALAP>
    implements org.apache.avro.data.RecordBuilder<CALAP> {

    /** Indicates if the Policy for this membership record is impacted by the CA Language Assistance Program.  Y or N. */
    private java.lang.CharSequence calapIndicator;
    /** Indicates if the Health Plan for this membership record is external.  Y or N. */
    private java.lang.CharSequence externalHealthPlanIndicator;
    /** Indicates if the Policy for this membership record is an HMO.  Y or N. */
    private java.lang.CharSequence hmoPlanIndicator;
    /** Source system code for the source of CALAP information. */
    private java.lang.CharSequence sourceSytemCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.CALAP.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.calapIndicator)) {
        this.calapIndicator = data().deepCopy(fields()[0].schema(), other.calapIndicator);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalHealthPlanIndicator)) {
        this.externalHealthPlanIndicator = data().deepCopy(fields()[1].schema(), other.externalHealthPlanIndicator);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hmoPlanIndicator)) {
        this.hmoPlanIndicator = data().deepCopy(fields()[2].schema(), other.hmoPlanIndicator);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sourceSytemCode)) {
        this.sourceSytemCode = data().deepCopy(fields()[3].schema(), other.sourceSytemCode);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CALAP instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.CALAP other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.calapIndicator)) {
        this.calapIndicator = data().deepCopy(fields()[0].schema(), other.calapIndicator);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalHealthPlanIndicator)) {
        this.externalHealthPlanIndicator = data().deepCopy(fields()[1].schema(), other.externalHealthPlanIndicator);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hmoPlanIndicator)) {
        this.hmoPlanIndicator = data().deepCopy(fields()[2].schema(), other.hmoPlanIndicator);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sourceSytemCode)) {
        this.sourceSytemCode = data().deepCopy(fields()[3].schema(), other.sourceSytemCode);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'calapIndicator' field.
      * Indicates if the Policy for this membership record is impacted by the CA Language Assistance Program.  Y or N.
      * @return The value.
      */
    public java.lang.CharSequence getCalapIndicator() {
      return calapIndicator;
    }

    /**
      * Sets the value of the 'calapIndicator' field.
      * Indicates if the Policy for this membership record is impacted by the CA Language Assistance Program.  Y or N.
      * @param value The value of 'calapIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.CALAP.Builder setCalapIndicator(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.calapIndicator = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'calapIndicator' field has been set.
      * Indicates if the Policy for this membership record is impacted by the CA Language Assistance Program.  Y or N.
      * @return True if the 'calapIndicator' field has been set, false otherwise.
      */
    public boolean hasCalapIndicator() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'calapIndicator' field.
      * Indicates if the Policy for this membership record is impacted by the CA Language Assistance Program.  Y or N.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.CALAP.Builder clearCalapIndicator() {
      calapIndicator = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalHealthPlanIndicator' field.
      * Indicates if the Health Plan for this membership record is external.  Y or N.
      * @return The value.
      */
    public java.lang.CharSequence getExternalHealthPlanIndicator() {
      return externalHealthPlanIndicator;
    }

    /**
      * Sets the value of the 'externalHealthPlanIndicator' field.
      * Indicates if the Health Plan for this membership record is external.  Y or N.
      * @param value The value of 'externalHealthPlanIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.CALAP.Builder setExternalHealthPlanIndicator(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.externalHealthPlanIndicator = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'externalHealthPlanIndicator' field has been set.
      * Indicates if the Health Plan for this membership record is external.  Y or N.
      * @return True if the 'externalHealthPlanIndicator' field has been set, false otherwise.
      */
    public boolean hasExternalHealthPlanIndicator() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'externalHealthPlanIndicator' field.
      * Indicates if the Health Plan for this membership record is external.  Y or N.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.CALAP.Builder clearExternalHealthPlanIndicator() {
      externalHealthPlanIndicator = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'hmoPlanIndicator' field.
      * Indicates if the Policy for this membership record is an HMO.  Y or N.
      * @return The value.
      */
    public java.lang.CharSequence getHmoPlanIndicator() {
      return hmoPlanIndicator;
    }

    /**
      * Sets the value of the 'hmoPlanIndicator' field.
      * Indicates if the Policy for this membership record is an HMO.  Y or N.
      * @param value The value of 'hmoPlanIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.CALAP.Builder setHmoPlanIndicator(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.hmoPlanIndicator = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'hmoPlanIndicator' field has been set.
      * Indicates if the Policy for this membership record is an HMO.  Y or N.
      * @return True if the 'hmoPlanIndicator' field has been set, false otherwise.
      */
    public boolean hasHmoPlanIndicator() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'hmoPlanIndicator' field.
      * Indicates if the Policy for this membership record is an HMO.  Y or N.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.CALAP.Builder clearHmoPlanIndicator() {
      hmoPlanIndicator = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceSytemCode' field.
      * Source system code for the source of CALAP information.
      * @return The value.
      */
    public java.lang.CharSequence getSourceSytemCode() {
      return sourceSytemCode;
    }

    /**
      * Sets the value of the 'sourceSytemCode' field.
      * Source system code for the source of CALAP information.
      * @param value The value of 'sourceSytemCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.CALAP.Builder setSourceSytemCode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.sourceSytemCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceSytemCode' field has been set.
      * Source system code for the source of CALAP information.
      * @return True if the 'sourceSytemCode' field has been set, false otherwise.
      */
    public boolean hasSourceSytemCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'sourceSytemCode' field.
      * Source system code for the source of CALAP information.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.CALAP.Builder clearSourceSytemCode() {
      sourceSytemCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CALAP build() {
      try {
        CALAP record = new CALAP();
        record.calapIndicator = fieldSetFlags()[0] ? this.calapIndicator : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.externalHealthPlanIndicator = fieldSetFlags()[1] ? this.externalHealthPlanIndicator : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.hmoPlanIndicator = fieldSetFlags()[2] ? this.hmoPlanIndicator : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.sourceSytemCode = fieldSetFlags()[3] ? this.sourceSytemCode : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CALAP>
    WRITER$ = (org.apache.avro.io.DatumWriter<CALAP>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CALAP>
    READER$ = (org.apache.avro.io.DatumReader<CALAP>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
