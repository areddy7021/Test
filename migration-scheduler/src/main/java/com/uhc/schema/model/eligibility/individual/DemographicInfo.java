/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.individual;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DemographicInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1303217430772733947L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DemographicInfo\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"ageGroup\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"doc\":\"A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.\",\"default\":null},{\"name\":\"ageGeneration\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.\",\"default\":null},{\"name\":\"birthDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"birthLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BirthLocation\",\"fields\":[{\"name\":\"isoCountry\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Country of birth for an individual.\",\"default\":null},{\"name\":\"stateProvinceCode\",\"type\":[\"null\",\"int\"],\"doc\":\"State or Province of birth for an individual.\",\"default\":null},{\"name\":\"townName\",\"type\":[\"null\",\"string\"],\"doc\":\"City or town of birth for an individual.\",\"default\":null}]}],\"default\":null},{\"name\":\"deceasedDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"ethnicity\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Ethnicity\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"genderType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"individualTerminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"language\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Language\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Defines the language use type, e.g., Spoken, Written\",\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LastUpdated\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"doc\":\"Information about the last update made to a given entity.\",\"fields\":[{\"name\":\"sourceSystemTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the source system (CDB ROW_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"sourceTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the originating source (CDB SRC_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",\"string\"],\"doc\":\"The last person or application to update the entity.\",\"default\":null}]}],\"default\":null},{\"name\":\"maritalStatusType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"race\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Race\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"socialSecurityNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"spokenLanguage\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"spokenLanguageIdentifier\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"subsidyTypeIdentifier\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"tribe\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Tribe\",\"fields\":[{\"name\":\"comments\",\"type\":[\"null\",\"string\"],\"doc\":\"Comment for the Individual's tribe.\",\"default\":null},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"tribeType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Code description pair for the Individual's tribe type.\",\"default\":null}]}],\"doc\":\"Indicates the Tribe of the Individual.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DemographicInfo> ENCODER =
      new BinaryMessageEncoder<DemographicInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DemographicInfo> DECODER =
      new BinaryMessageDecoder<DemographicInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<DemographicInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<DemographicInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DemographicInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this DemographicInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a DemographicInfo from a ByteBuffer. */
  public static DemographicInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType ageGroup;
  /** A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType ageGeneration;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence birthDate;
  @Deprecated public com.uhc.schema.model.eligibility.individual.BirthLocation birthLocation;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence deceasedDate;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.Ethnicity> ethnicity;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType genderType;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence individualTerminationDate;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.Language> language;
  @Deprecated public com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType maritalStatusType;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.Race> race;
  @Deprecated public java.lang.CharSequence socialSecurityNumber;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType spokenLanguage;
  @Deprecated public java.lang.Integer spokenLanguageIdentifier;
  @Deprecated public java.lang.Integer subsidyTypeIdentifier;
  /** Indicates the Tribe of the Individual. */
  @Deprecated public com.uhc.schema.model.eligibility.individual.Tribe tribe;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DemographicInfo() {}

  /**
   * All-args constructor.
   * @param ageGroup A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.
   * @param ageGeneration A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.
   * @param birthDate Date format: CCYY-MM-DD
   * @param birthLocation The new value for birthLocation
   * @param deceasedDate Date format: CCYY-MM-DD
   * @param ethnicity The new value for ethnicity
   * @param genderType The new value for genderType
   * @param individualTerminationDate Date format: CCYY-MM-DD
   * @param language The new value for language
   * @param lastUpdated The new value for lastUpdated
   * @param maritalStatusType The new value for maritalStatusType
   * @param race The new value for race
   * @param socialSecurityNumber The new value for socialSecurityNumber
   * @param spokenLanguage The new value for spokenLanguage
   * @param spokenLanguageIdentifier The new value for spokenLanguageIdentifier
   * @param subsidyTypeIdentifier The new value for subsidyTypeIdentifier
   * @param tribe Indicates the Tribe of the Individual.
   */
  public DemographicInfo(com.uhc.schema.model.eligibility.common.DescriptionType ageGroup, com.uhc.schema.model.eligibility.common.DescriptionType ageGeneration, java.lang.CharSequence birthDate, com.uhc.schema.model.eligibility.individual.BirthLocation birthLocation, java.lang.CharSequence deceasedDate, java.util.List<com.uhc.schema.model.eligibility.individual.Ethnicity> ethnicity, com.uhc.schema.model.eligibility.common.DescriptionType genderType, java.lang.CharSequence individualTerminationDate, java.util.List<com.uhc.schema.model.eligibility.individual.Language> language, com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated, com.uhc.schema.model.eligibility.common.DescriptionType maritalStatusType, java.util.List<com.uhc.schema.model.eligibility.individual.Race> race, java.lang.CharSequence socialSecurityNumber, com.uhc.schema.model.eligibility.common.DescriptionType spokenLanguage, java.lang.Integer spokenLanguageIdentifier, java.lang.Integer subsidyTypeIdentifier, com.uhc.schema.model.eligibility.individual.Tribe tribe) {
    this.ageGroup = ageGroup;
    this.ageGeneration = ageGeneration;
    this.birthDate = birthDate;
    this.birthLocation = birthLocation;
    this.deceasedDate = deceasedDate;
    this.ethnicity = ethnicity;
    this.genderType = genderType;
    this.individualTerminationDate = individualTerminationDate;
    this.language = language;
    this.lastUpdated = lastUpdated;
    this.maritalStatusType = maritalStatusType;
    this.race = race;
    this.socialSecurityNumber = socialSecurityNumber;
    this.spokenLanguage = spokenLanguage;
    this.spokenLanguageIdentifier = spokenLanguageIdentifier;
    this.subsidyTypeIdentifier = subsidyTypeIdentifier;
    this.tribe = tribe;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ageGroup;
    case 1: return ageGeneration;
    case 2: return birthDate;
    case 3: return birthLocation;
    case 4: return deceasedDate;
    case 5: return ethnicity;
    case 6: return genderType;
    case 7: return individualTerminationDate;
    case 8: return language;
    case 9: return lastUpdated;
    case 10: return maritalStatusType;
    case 11: return race;
    case 12: return socialSecurityNumber;
    case 13: return spokenLanguage;
    case 14: return spokenLanguageIdentifier;
    case 15: return subsidyTypeIdentifier;
    case 16: return tribe;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ageGroup = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 1: ageGeneration = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 2: birthDate = (java.lang.CharSequence)value$; break;
    case 3: birthLocation = (com.uhc.schema.model.eligibility.individual.BirthLocation)value$; break;
    case 4: deceasedDate = (java.lang.CharSequence)value$; break;
    case 5: ethnicity = (java.util.List<com.uhc.schema.model.eligibility.individual.Ethnicity>)value$; break;
    case 6: genderType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 7: individualTerminationDate = (java.lang.CharSequence)value$; break;
    case 8: language = (java.util.List<com.uhc.schema.model.eligibility.individual.Language>)value$; break;
    case 9: lastUpdated = (com.uhc.schema.model.eligibility.common.LastUpdated)value$; break;
    case 10: maritalStatusType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 11: race = (java.util.List<com.uhc.schema.model.eligibility.individual.Race>)value$; break;
    case 12: socialSecurityNumber = (java.lang.CharSequence)value$; break;
    case 13: spokenLanguage = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 14: spokenLanguageIdentifier = (java.lang.Integer)value$; break;
    case 15: subsidyTypeIdentifier = (java.lang.Integer)value$; break;
    case 16: tribe = (com.uhc.schema.model.eligibility.individual.Tribe)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ageGroup' field.
   * @return A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getAgeGroup() {
    return ageGroup;
  }

  /**
   * Sets the value of the 'ageGroup' field.
   * A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.
   * @param value the value to set.
   */
  public void setAgeGroup(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.ageGroup = value;
  }

  /**
   * Gets the value of the 'ageGeneration' field.
   * @return A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getAgeGeneration() {
    return ageGeneration;
  }

  /**
   * Sets the value of the 'ageGeneration' field.
   * A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.
   * @param value the value to set.
   */
  public void setAgeGeneration(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.ageGeneration = value;
  }

  /**
   * Gets the value of the 'birthDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getBirthDate() {
    return birthDate;
  }

  /**
   * Sets the value of the 'birthDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setBirthDate(java.lang.CharSequence value) {
    this.birthDate = value;
  }

  /**
   * Gets the value of the 'birthLocation' field.
   * @return The value of the 'birthLocation' field.
   */
  public com.uhc.schema.model.eligibility.individual.BirthLocation getBirthLocation() {
    return birthLocation;
  }

  /**
   * Sets the value of the 'birthLocation' field.
   * @param value the value to set.
   */
  public void setBirthLocation(com.uhc.schema.model.eligibility.individual.BirthLocation value) {
    this.birthLocation = value;
  }

  /**
   * Gets the value of the 'deceasedDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getDeceasedDate() {
    return deceasedDate;
  }

  /**
   * Sets the value of the 'deceasedDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setDeceasedDate(java.lang.CharSequence value) {
    this.deceasedDate = value;
  }

  /**
   * Gets the value of the 'ethnicity' field.
   * @return The value of the 'ethnicity' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.Ethnicity> getEthnicity() {
    return ethnicity;
  }

  /**
   * Sets the value of the 'ethnicity' field.
   * @param value the value to set.
   */
  public void setEthnicity(java.util.List<com.uhc.schema.model.eligibility.individual.Ethnicity> value) {
    this.ethnicity = value;
  }

  /**
   * Gets the value of the 'genderType' field.
   * @return The value of the 'genderType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getGenderType() {
    return genderType;
  }

  /**
   * Sets the value of the 'genderType' field.
   * @param value the value to set.
   */
  public void setGenderType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.genderType = value;
  }

  /**
   * Gets the value of the 'individualTerminationDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getIndividualTerminationDate() {
    return individualTerminationDate;
  }

  /**
   * Sets the value of the 'individualTerminationDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setIndividualTerminationDate(java.lang.CharSequence value) {
    this.individualTerminationDate = value;
  }

  /**
   * Gets the value of the 'language' field.
   * @return The value of the 'language' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.Language> getLanguage() {
    return language;
  }

  /**
   * Sets the value of the 'language' field.
   * @param value the value to set.
   */
  public void setLanguage(java.util.List<com.uhc.schema.model.eligibility.individual.Language> value) {
    this.language = value;
  }

  /**
   * Gets the value of the 'lastUpdated' field.
   * @return The value of the 'lastUpdated' field.
   */
  public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
    return lastUpdated;
  }

  /**
   * Sets the value of the 'lastUpdated' field.
   * @param value the value to set.
   */
  public void setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
    this.lastUpdated = value;
  }

  /**
   * Gets the value of the 'maritalStatusType' field.
   * @return The value of the 'maritalStatusType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getMaritalStatusType() {
    return maritalStatusType;
  }

  /**
   * Sets the value of the 'maritalStatusType' field.
   * @param value the value to set.
   */
  public void setMaritalStatusType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.maritalStatusType = value;
  }

  /**
   * Gets the value of the 'race' field.
   * @return The value of the 'race' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.Race> getRace() {
    return race;
  }

  /**
   * Sets the value of the 'race' field.
   * @param value the value to set.
   */
  public void setRace(java.util.List<com.uhc.schema.model.eligibility.individual.Race> value) {
    this.race = value;
  }

  /**
   * Gets the value of the 'socialSecurityNumber' field.
   * @return The value of the 'socialSecurityNumber' field.
   */
  public java.lang.CharSequence getSocialSecurityNumber() {
    return socialSecurityNumber;
  }

  /**
   * Sets the value of the 'socialSecurityNumber' field.
   * @param value the value to set.
   */
  public void setSocialSecurityNumber(java.lang.CharSequence value) {
    this.socialSecurityNumber = value;
  }

  /**
   * Gets the value of the 'spokenLanguage' field.
   * @return The value of the 'spokenLanguage' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getSpokenLanguage() {
    return spokenLanguage;
  }

  /**
   * Sets the value of the 'spokenLanguage' field.
   * @param value the value to set.
   */
  public void setSpokenLanguage(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.spokenLanguage = value;
  }

  /**
   * Gets the value of the 'spokenLanguageIdentifier' field.
   * @return The value of the 'spokenLanguageIdentifier' field.
   */
  public java.lang.Integer getSpokenLanguageIdentifier() {
    return spokenLanguageIdentifier;
  }

  /**
   * Sets the value of the 'spokenLanguageIdentifier' field.
   * @param value the value to set.
   */
  public void setSpokenLanguageIdentifier(java.lang.Integer value) {
    this.spokenLanguageIdentifier = value;
  }

  /**
   * Gets the value of the 'subsidyTypeIdentifier' field.
   * @return The value of the 'subsidyTypeIdentifier' field.
   */
  public java.lang.Integer getSubsidyTypeIdentifier() {
    return subsidyTypeIdentifier;
  }

  /**
   * Sets the value of the 'subsidyTypeIdentifier' field.
   * @param value the value to set.
   */
  public void setSubsidyTypeIdentifier(java.lang.Integer value) {
    this.subsidyTypeIdentifier = value;
  }

  /**
   * Gets the value of the 'tribe' field.
   * @return Indicates the Tribe of the Individual.
   */
  public com.uhc.schema.model.eligibility.individual.Tribe getTribe() {
    return tribe;
  }

  /**
   * Sets the value of the 'tribe' field.
   * Indicates the Tribe of the Individual.
   * @param value the value to set.
   */
  public void setTribe(com.uhc.schema.model.eligibility.individual.Tribe value) {
    this.tribe = value;
  }

  /**
   * Creates a new DemographicInfo RecordBuilder.
   * @return A new DemographicInfo RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder();
  }

  /**
   * Creates a new DemographicInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DemographicInfo RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder newBuilder(com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder other) {
    return new com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder(other);
  }

  /**
   * Creates a new DemographicInfo RecordBuilder by copying an existing DemographicInfo instance.
   * @param other The existing instance to copy.
   * @return A new DemographicInfo RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder newBuilder(com.uhc.schema.model.eligibility.individual.DemographicInfo other) {
    return new com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder(other);
  }

  /**
   * RecordBuilder for DemographicInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DemographicInfo>
    implements org.apache.avro.data.RecordBuilder<DemographicInfo> {

    /** A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc. */
    private com.uhc.schema.model.eligibility.common.DescriptionType ageGroup;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder ageGroupBuilder;
    /** A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc. */
    private com.uhc.schema.model.eligibility.common.DescriptionType ageGeneration;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder ageGenerationBuilder;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence birthDate;
    private com.uhc.schema.model.eligibility.individual.BirthLocation birthLocation;
    private com.uhc.schema.model.eligibility.individual.BirthLocation.Builder birthLocationBuilder;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence deceasedDate;
    private java.util.List<com.uhc.schema.model.eligibility.individual.Ethnicity> ethnicity;
    private com.uhc.schema.model.eligibility.common.DescriptionType genderType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder genderTypeBuilder;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence individualTerminationDate;
    private java.util.List<com.uhc.schema.model.eligibility.individual.Language> language;
    private com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
    private com.uhc.schema.model.eligibility.common.LastUpdated.Builder lastUpdatedBuilder;
    private com.uhc.schema.model.eligibility.common.DescriptionType maritalStatusType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder maritalStatusTypeBuilder;
    private java.util.List<com.uhc.schema.model.eligibility.individual.Race> race;
    private java.lang.CharSequence socialSecurityNumber;
    private com.uhc.schema.model.eligibility.common.DescriptionType spokenLanguage;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder spokenLanguageBuilder;
    private java.lang.Integer spokenLanguageIdentifier;
    private java.lang.Integer subsidyTypeIdentifier;
    /** Indicates the Tribe of the Individual. */
    private com.uhc.schema.model.eligibility.individual.Tribe tribe;
    private com.uhc.schema.model.eligibility.individual.Tribe.Builder tribeBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ageGroup)) {
        this.ageGroup = data().deepCopy(fields()[0].schema(), other.ageGroup);
        fieldSetFlags()[0] = true;
      }
      if (other.hasAgeGroupBuilder()) {
        this.ageGroupBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getAgeGroupBuilder());
      }
      if (isValidValue(fields()[1], other.ageGeneration)) {
        this.ageGeneration = data().deepCopy(fields()[1].schema(), other.ageGeneration);
        fieldSetFlags()[1] = true;
      }
      if (other.hasAgeGenerationBuilder()) {
        this.ageGenerationBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getAgeGenerationBuilder());
      }
      if (isValidValue(fields()[2], other.birthDate)) {
        this.birthDate = data().deepCopy(fields()[2].schema(), other.birthDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.birthLocation)) {
        this.birthLocation = data().deepCopy(fields()[3].schema(), other.birthLocation);
        fieldSetFlags()[3] = true;
      }
      if (other.hasBirthLocationBuilder()) {
        this.birthLocationBuilder = com.uhc.schema.model.eligibility.individual.BirthLocation.newBuilder(other.getBirthLocationBuilder());
      }
      if (isValidValue(fields()[4], other.deceasedDate)) {
        this.deceasedDate = data().deepCopy(fields()[4].schema(), other.deceasedDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ethnicity)) {
        this.ethnicity = data().deepCopy(fields()[5].schema(), other.ethnicity);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.genderType)) {
        this.genderType = data().deepCopy(fields()[6].schema(), other.genderType);
        fieldSetFlags()[6] = true;
      }
      if (other.hasGenderTypeBuilder()) {
        this.genderTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getGenderTypeBuilder());
      }
      if (isValidValue(fields()[7], other.individualTerminationDate)) {
        this.individualTerminationDate = data().deepCopy(fields()[7].schema(), other.individualTerminationDate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.language)) {
        this.language = data().deepCopy(fields()[8].schema(), other.language);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[9].schema(), other.lastUpdated);
        fieldSetFlags()[9] = true;
      }
      if (other.hasLastUpdatedBuilder()) {
        this.lastUpdatedBuilder = com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(other.getLastUpdatedBuilder());
      }
      if (isValidValue(fields()[10], other.maritalStatusType)) {
        this.maritalStatusType = data().deepCopy(fields()[10].schema(), other.maritalStatusType);
        fieldSetFlags()[10] = true;
      }
      if (other.hasMaritalStatusTypeBuilder()) {
        this.maritalStatusTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getMaritalStatusTypeBuilder());
      }
      if (isValidValue(fields()[11], other.race)) {
        this.race = data().deepCopy(fields()[11].schema(), other.race);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.socialSecurityNumber)) {
        this.socialSecurityNumber = data().deepCopy(fields()[12].schema(), other.socialSecurityNumber);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.spokenLanguage)) {
        this.spokenLanguage = data().deepCopy(fields()[13].schema(), other.spokenLanguage);
        fieldSetFlags()[13] = true;
      }
      if (other.hasSpokenLanguageBuilder()) {
        this.spokenLanguageBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getSpokenLanguageBuilder());
      }
      if (isValidValue(fields()[14], other.spokenLanguageIdentifier)) {
        this.spokenLanguageIdentifier = data().deepCopy(fields()[14].schema(), other.spokenLanguageIdentifier);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.subsidyTypeIdentifier)) {
        this.subsidyTypeIdentifier = data().deepCopy(fields()[15].schema(), other.subsidyTypeIdentifier);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.tribe)) {
        this.tribe = data().deepCopy(fields()[16].schema(), other.tribe);
        fieldSetFlags()[16] = true;
      }
      if (other.hasTribeBuilder()) {
        this.tribeBuilder = com.uhc.schema.model.eligibility.individual.Tribe.newBuilder(other.getTribeBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing DemographicInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.DemographicInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.ageGroup)) {
        this.ageGroup = data().deepCopy(fields()[0].schema(), other.ageGroup);
        fieldSetFlags()[0] = true;
      }
      this.ageGroupBuilder = null;
      if (isValidValue(fields()[1], other.ageGeneration)) {
        this.ageGeneration = data().deepCopy(fields()[1].schema(), other.ageGeneration);
        fieldSetFlags()[1] = true;
      }
      this.ageGenerationBuilder = null;
      if (isValidValue(fields()[2], other.birthDate)) {
        this.birthDate = data().deepCopy(fields()[2].schema(), other.birthDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.birthLocation)) {
        this.birthLocation = data().deepCopy(fields()[3].schema(), other.birthLocation);
        fieldSetFlags()[3] = true;
      }
      this.birthLocationBuilder = null;
      if (isValidValue(fields()[4], other.deceasedDate)) {
        this.deceasedDate = data().deepCopy(fields()[4].schema(), other.deceasedDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ethnicity)) {
        this.ethnicity = data().deepCopy(fields()[5].schema(), other.ethnicity);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.genderType)) {
        this.genderType = data().deepCopy(fields()[6].schema(), other.genderType);
        fieldSetFlags()[6] = true;
      }
      this.genderTypeBuilder = null;
      if (isValidValue(fields()[7], other.individualTerminationDate)) {
        this.individualTerminationDate = data().deepCopy(fields()[7].schema(), other.individualTerminationDate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.language)) {
        this.language = data().deepCopy(fields()[8].schema(), other.language);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[9].schema(), other.lastUpdated);
        fieldSetFlags()[9] = true;
      }
      this.lastUpdatedBuilder = null;
      if (isValidValue(fields()[10], other.maritalStatusType)) {
        this.maritalStatusType = data().deepCopy(fields()[10].schema(), other.maritalStatusType);
        fieldSetFlags()[10] = true;
      }
      this.maritalStatusTypeBuilder = null;
      if (isValidValue(fields()[11], other.race)) {
        this.race = data().deepCopy(fields()[11].schema(), other.race);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.socialSecurityNumber)) {
        this.socialSecurityNumber = data().deepCopy(fields()[12].schema(), other.socialSecurityNumber);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.spokenLanguage)) {
        this.spokenLanguage = data().deepCopy(fields()[13].schema(), other.spokenLanguage);
        fieldSetFlags()[13] = true;
      }
      this.spokenLanguageBuilder = null;
      if (isValidValue(fields()[14], other.spokenLanguageIdentifier)) {
        this.spokenLanguageIdentifier = data().deepCopy(fields()[14].schema(), other.spokenLanguageIdentifier);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.subsidyTypeIdentifier)) {
        this.subsidyTypeIdentifier = data().deepCopy(fields()[15].schema(), other.subsidyTypeIdentifier);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.tribe)) {
        this.tribe = data().deepCopy(fields()[16].schema(), other.tribe);
        fieldSetFlags()[16] = true;
      }
      this.tribeBuilder = null;
    }

    /**
      * Gets the value of the 'ageGroup' field.
      * A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getAgeGroup() {
      return ageGroup;
    }

    /**
      * Sets the value of the 'ageGroup' field.
      * A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.
      * @param value The value of 'ageGroup'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setAgeGroup(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[0], value);
      this.ageGroupBuilder = null;
      this.ageGroup = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ageGroup' field has been set.
      * A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.
      * @return True if the 'ageGroup' field has been set, false otherwise.
      */
    public boolean hasAgeGroup() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'ageGroup' field and creates one if it doesn't exist yet.
     * A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getAgeGroupBuilder() {
      if (ageGroupBuilder == null) {
        if (hasAgeGroup()) {
          setAgeGroupBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(ageGroup));
        } else {
          setAgeGroupBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return ageGroupBuilder;
    }

    /**
     * Sets the Builder instance for the 'ageGroup' field
     * A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setAgeGroupBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearAgeGroup();
      ageGroupBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'ageGroup' field has an active Builder instance
     * A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.
     * @return True if the 'ageGroup' field has an active Builder instance
     */
    public boolean hasAgeGroupBuilder() {
      return ageGroupBuilder != null;
    }

    /**
      * Clears the value of the 'ageGroup' field.
      * A code and description pair indicating the age range an Individual belongs to. Ex, 1-Under the age of 20, 2-Age 20 to <30, etc.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearAgeGroup() {
      ageGroup = null;
      ageGroupBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ageGeneration' field.
      * A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getAgeGeneration() {
      return ageGeneration;
    }

    /**
      * Sets the value of the 'ageGeneration' field.
      * A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.
      * @param value The value of 'ageGeneration'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setAgeGeneration(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[1], value);
      this.ageGenerationBuilder = null;
      this.ageGeneration = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ageGeneration' field has been set.
      * A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.
      * @return True if the 'ageGeneration' field has been set, false otherwise.
      */
    public boolean hasAgeGeneration() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'ageGeneration' field and creates one if it doesn't exist yet.
     * A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getAgeGenerationBuilder() {
      if (ageGenerationBuilder == null) {
        if (hasAgeGeneration()) {
          setAgeGenerationBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(ageGeneration));
        } else {
          setAgeGenerationBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return ageGenerationBuilder;
    }

    /**
     * Sets the Builder instance for the 'ageGeneration' field
     * A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setAgeGenerationBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearAgeGeneration();
      ageGenerationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'ageGeneration' field has an active Builder instance
     * A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.
     * @return True if the 'ageGeneration' field has an active Builder instance
     */
    public boolean hasAgeGenerationBuilder() {
      return ageGenerationBuilder != null;
    }

    /**
      * Clears the value of the 'ageGeneration' field.
      * A code and description pair indicating the generation an Individual belongs to. Ex, 1-Greatest Generation, 2-Silent Generation, etc.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearAgeGeneration() {
      ageGeneration = null;
      ageGenerationBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getBirthDate() {
      return birthDate;
    }

    /**
      * Sets the value of the 'birthDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'birthDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setBirthDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.birthDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'birthDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'birthDate' field has been set, false otherwise.
      */
    public boolean hasBirthDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'birthDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearBirthDate() {
      birthDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthLocation' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.BirthLocation getBirthLocation() {
      return birthLocation;
    }

    /**
      * Sets the value of the 'birthLocation' field.
      * @param value The value of 'birthLocation'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setBirthLocation(com.uhc.schema.model.eligibility.individual.BirthLocation value) {
      validate(fields()[3], value);
      this.birthLocationBuilder = null;
      this.birthLocation = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'birthLocation' field has been set.
      * @return True if the 'birthLocation' field has been set, false otherwise.
      */
    public boolean hasBirthLocation() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'birthLocation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.BirthLocation.Builder getBirthLocationBuilder() {
      if (birthLocationBuilder == null) {
        if (hasBirthLocation()) {
          setBirthLocationBuilder(com.uhc.schema.model.eligibility.individual.BirthLocation.newBuilder(birthLocation));
        } else {
          setBirthLocationBuilder(com.uhc.schema.model.eligibility.individual.BirthLocation.newBuilder());
        }
      }
      return birthLocationBuilder;
    }

    /**
     * Sets the Builder instance for the 'birthLocation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setBirthLocationBuilder(com.uhc.schema.model.eligibility.individual.BirthLocation.Builder value) {
      clearBirthLocation();
      birthLocationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'birthLocation' field has an active Builder instance
     * @return True if the 'birthLocation' field has an active Builder instance
     */
    public boolean hasBirthLocationBuilder() {
      return birthLocationBuilder != null;
    }

    /**
      * Clears the value of the 'birthLocation' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearBirthLocation() {
      birthLocation = null;
      birthLocationBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'deceasedDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getDeceasedDate() {
      return deceasedDate;
    }

    /**
      * Sets the value of the 'deceasedDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'deceasedDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setDeceasedDate(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.deceasedDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'deceasedDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'deceasedDate' field has been set, false otherwise.
      */
    public boolean hasDeceasedDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'deceasedDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearDeceasedDate() {
      deceasedDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'ethnicity' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.Ethnicity> getEthnicity() {
      return ethnicity;
    }

    /**
      * Sets the value of the 'ethnicity' field.
      * @param value The value of 'ethnicity'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setEthnicity(java.util.List<com.uhc.schema.model.eligibility.individual.Ethnicity> value) {
      validate(fields()[5], value);
      this.ethnicity = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'ethnicity' field has been set.
      * @return True if the 'ethnicity' field has been set, false otherwise.
      */
    public boolean hasEthnicity() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'ethnicity' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearEthnicity() {
      ethnicity = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'genderType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getGenderType() {
      return genderType;
    }

    /**
      * Sets the value of the 'genderType' field.
      * @param value The value of 'genderType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setGenderType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[6], value);
      this.genderTypeBuilder = null;
      this.genderType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'genderType' field has been set.
      * @return True if the 'genderType' field has been set, false otherwise.
      */
    public boolean hasGenderType() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'genderType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getGenderTypeBuilder() {
      if (genderTypeBuilder == null) {
        if (hasGenderType()) {
          setGenderTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(genderType));
        } else {
          setGenderTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return genderTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'genderType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setGenderTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearGenderType();
      genderTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'genderType' field has an active Builder instance
     * @return True if the 'genderType' field has an active Builder instance
     */
    public boolean hasGenderTypeBuilder() {
      return genderTypeBuilder != null;
    }

    /**
      * Clears the value of the 'genderType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearGenderType() {
      genderType = null;
      genderTypeBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'individualTerminationDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getIndividualTerminationDate() {
      return individualTerminationDate;
    }

    /**
      * Sets the value of the 'individualTerminationDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'individualTerminationDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setIndividualTerminationDate(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.individualTerminationDate = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'individualTerminationDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'individualTerminationDate' field has been set, false otherwise.
      */
    public boolean hasIndividualTerminationDate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'individualTerminationDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearIndividualTerminationDate() {
      individualTerminationDate = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'language' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.Language> getLanguage() {
      return language;
    }

    /**
      * Sets the value of the 'language' field.
      * @param value The value of 'language'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setLanguage(java.util.List<com.uhc.schema.model.eligibility.individual.Language> value) {
      validate(fields()[8], value);
      this.language = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'language' field has been set.
      * @return True if the 'language' field has been set, false otherwise.
      */
    public boolean hasLanguage() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'language' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearLanguage() {
      language = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdated' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
      return lastUpdated;
    }

    /**
      * Sets the value of the 'lastUpdated' field.
      * @param value The value of 'lastUpdated'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
      validate(fields()[9], value);
      this.lastUpdatedBuilder = null;
      this.lastUpdated = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdated' field has been set.
      * @return True if the 'lastUpdated' field has been set, false otherwise.
      */
    public boolean hasLastUpdated() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'lastUpdated' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.LastUpdated.Builder getLastUpdatedBuilder() {
      if (lastUpdatedBuilder == null) {
        if (hasLastUpdated()) {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(lastUpdated));
        } else {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder());
        }
      }
      return lastUpdatedBuilder;
    }

    /**
     * Sets the Builder instance for the 'lastUpdated' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.Builder value) {
      clearLastUpdated();
      lastUpdatedBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'lastUpdated' field has an active Builder instance
     * @return True if the 'lastUpdated' field has an active Builder instance
     */
    public boolean hasLastUpdatedBuilder() {
      return lastUpdatedBuilder != null;
    }

    /**
      * Clears the value of the 'lastUpdated' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearLastUpdated() {
      lastUpdated = null;
      lastUpdatedBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'maritalStatusType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getMaritalStatusType() {
      return maritalStatusType;
    }

    /**
      * Sets the value of the 'maritalStatusType' field.
      * @param value The value of 'maritalStatusType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setMaritalStatusType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[10], value);
      this.maritalStatusTypeBuilder = null;
      this.maritalStatusType = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'maritalStatusType' field has been set.
      * @return True if the 'maritalStatusType' field has been set, false otherwise.
      */
    public boolean hasMaritalStatusType() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'maritalStatusType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getMaritalStatusTypeBuilder() {
      if (maritalStatusTypeBuilder == null) {
        if (hasMaritalStatusType()) {
          setMaritalStatusTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(maritalStatusType));
        } else {
          setMaritalStatusTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return maritalStatusTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'maritalStatusType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setMaritalStatusTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearMaritalStatusType();
      maritalStatusTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'maritalStatusType' field has an active Builder instance
     * @return True if the 'maritalStatusType' field has an active Builder instance
     */
    public boolean hasMaritalStatusTypeBuilder() {
      return maritalStatusTypeBuilder != null;
    }

    /**
      * Clears the value of the 'maritalStatusType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearMaritalStatusType() {
      maritalStatusType = null;
      maritalStatusTypeBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'race' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.Race> getRace() {
      return race;
    }

    /**
      * Sets the value of the 'race' field.
      * @param value The value of 'race'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setRace(java.util.List<com.uhc.schema.model.eligibility.individual.Race> value) {
      validate(fields()[11], value);
      this.race = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'race' field has been set.
      * @return True if the 'race' field has been set, false otherwise.
      */
    public boolean hasRace() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'race' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearRace() {
      race = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'socialSecurityNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getSocialSecurityNumber() {
      return socialSecurityNumber;
    }

    /**
      * Sets the value of the 'socialSecurityNumber' field.
      * @param value The value of 'socialSecurityNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setSocialSecurityNumber(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.socialSecurityNumber = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'socialSecurityNumber' field has been set.
      * @return True if the 'socialSecurityNumber' field has been set, false otherwise.
      */
    public boolean hasSocialSecurityNumber() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'socialSecurityNumber' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearSocialSecurityNumber() {
      socialSecurityNumber = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'spokenLanguage' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getSpokenLanguage() {
      return spokenLanguage;
    }

    /**
      * Sets the value of the 'spokenLanguage' field.
      * @param value The value of 'spokenLanguage'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setSpokenLanguage(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[13], value);
      this.spokenLanguageBuilder = null;
      this.spokenLanguage = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'spokenLanguage' field has been set.
      * @return True if the 'spokenLanguage' field has been set, false otherwise.
      */
    public boolean hasSpokenLanguage() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'spokenLanguage' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getSpokenLanguageBuilder() {
      if (spokenLanguageBuilder == null) {
        if (hasSpokenLanguage()) {
          setSpokenLanguageBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(spokenLanguage));
        } else {
          setSpokenLanguageBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return spokenLanguageBuilder;
    }

    /**
     * Sets the Builder instance for the 'spokenLanguage' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setSpokenLanguageBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearSpokenLanguage();
      spokenLanguageBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'spokenLanguage' field has an active Builder instance
     * @return True if the 'spokenLanguage' field has an active Builder instance
     */
    public boolean hasSpokenLanguageBuilder() {
      return spokenLanguageBuilder != null;
    }

    /**
      * Clears the value of the 'spokenLanguage' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearSpokenLanguage() {
      spokenLanguage = null;
      spokenLanguageBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'spokenLanguageIdentifier' field.
      * @return The value.
      */
    public java.lang.Integer getSpokenLanguageIdentifier() {
      return spokenLanguageIdentifier;
    }

    /**
      * Sets the value of the 'spokenLanguageIdentifier' field.
      * @param value The value of 'spokenLanguageIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setSpokenLanguageIdentifier(java.lang.Integer value) {
      validate(fields()[14], value);
      this.spokenLanguageIdentifier = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'spokenLanguageIdentifier' field has been set.
      * @return True if the 'spokenLanguageIdentifier' field has been set, false otherwise.
      */
    public boolean hasSpokenLanguageIdentifier() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'spokenLanguageIdentifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearSpokenLanguageIdentifier() {
      spokenLanguageIdentifier = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'subsidyTypeIdentifier' field.
      * @return The value.
      */
    public java.lang.Integer getSubsidyTypeIdentifier() {
      return subsidyTypeIdentifier;
    }

    /**
      * Sets the value of the 'subsidyTypeIdentifier' field.
      * @param value The value of 'subsidyTypeIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setSubsidyTypeIdentifier(java.lang.Integer value) {
      validate(fields()[15], value);
      this.subsidyTypeIdentifier = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'subsidyTypeIdentifier' field has been set.
      * @return True if the 'subsidyTypeIdentifier' field has been set, false otherwise.
      */
    public boolean hasSubsidyTypeIdentifier() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'subsidyTypeIdentifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearSubsidyTypeIdentifier() {
      subsidyTypeIdentifier = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'tribe' field.
      * Indicates the Tribe of the Individual.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.Tribe getTribe() {
      return tribe;
    }

    /**
      * Sets the value of the 'tribe' field.
      * Indicates the Tribe of the Individual.
      * @param value The value of 'tribe'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setTribe(com.uhc.schema.model.eligibility.individual.Tribe value) {
      validate(fields()[16], value);
      this.tribeBuilder = null;
      this.tribe = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'tribe' field has been set.
      * Indicates the Tribe of the Individual.
      * @return True if the 'tribe' field has been set, false otherwise.
      */
    public boolean hasTribe() {
      return fieldSetFlags()[16];
    }

    /**
     * Gets the Builder instance for the 'tribe' field and creates one if it doesn't exist yet.
     * Indicates the Tribe of the Individual.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.Tribe.Builder getTribeBuilder() {
      if (tribeBuilder == null) {
        if (hasTribe()) {
          setTribeBuilder(com.uhc.schema.model.eligibility.individual.Tribe.newBuilder(tribe));
        } else {
          setTribeBuilder(com.uhc.schema.model.eligibility.individual.Tribe.newBuilder());
        }
      }
      return tribeBuilder;
    }

    /**
     * Sets the Builder instance for the 'tribe' field
     * Indicates the Tribe of the Individual.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder setTribeBuilder(com.uhc.schema.model.eligibility.individual.Tribe.Builder value) {
      clearTribe();
      tribeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'tribe' field has an active Builder instance
     * Indicates the Tribe of the Individual.
     * @return True if the 'tribe' field has an active Builder instance
     */
    public boolean hasTribeBuilder() {
      return tribeBuilder != null;
    }

    /**
      * Clears the value of the 'tribe' field.
      * Indicates the Tribe of the Individual.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.DemographicInfo.Builder clearTribe() {
      tribe = null;
      tribeBuilder = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DemographicInfo build() {
      try {
        DemographicInfo record = new DemographicInfo();
        if (ageGroupBuilder != null) {
          record.ageGroup = this.ageGroupBuilder.build();
        } else {
          record.ageGroup = fieldSetFlags()[0] ? this.ageGroup : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[0]);
        }
        if (ageGenerationBuilder != null) {
          record.ageGeneration = this.ageGenerationBuilder.build();
        } else {
          record.ageGeneration = fieldSetFlags()[1] ? this.ageGeneration : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[1]);
        }
        record.birthDate = fieldSetFlags()[2] ? this.birthDate : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (birthLocationBuilder != null) {
          record.birthLocation = this.birthLocationBuilder.build();
        } else {
          record.birthLocation = fieldSetFlags()[3] ? this.birthLocation : (com.uhc.schema.model.eligibility.individual.BirthLocation) defaultValue(fields()[3]);
        }
        record.deceasedDate = fieldSetFlags()[4] ? this.deceasedDate : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.ethnicity = fieldSetFlags()[5] ? this.ethnicity : (java.util.List<com.uhc.schema.model.eligibility.individual.Ethnicity>) defaultValue(fields()[5]);
        if (genderTypeBuilder != null) {
          record.genderType = this.genderTypeBuilder.build();
        } else {
          record.genderType = fieldSetFlags()[6] ? this.genderType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[6]);
        }
        record.individualTerminationDate = fieldSetFlags()[7] ? this.individualTerminationDate : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.language = fieldSetFlags()[8] ? this.language : (java.util.List<com.uhc.schema.model.eligibility.individual.Language>) defaultValue(fields()[8]);
        if (lastUpdatedBuilder != null) {
          record.lastUpdated = this.lastUpdatedBuilder.build();
        } else {
          record.lastUpdated = fieldSetFlags()[9] ? this.lastUpdated : (com.uhc.schema.model.eligibility.common.LastUpdated) defaultValue(fields()[9]);
        }
        if (maritalStatusTypeBuilder != null) {
          record.maritalStatusType = this.maritalStatusTypeBuilder.build();
        } else {
          record.maritalStatusType = fieldSetFlags()[10] ? this.maritalStatusType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[10]);
        }
        record.race = fieldSetFlags()[11] ? this.race : (java.util.List<com.uhc.schema.model.eligibility.individual.Race>) defaultValue(fields()[11]);
        record.socialSecurityNumber = fieldSetFlags()[12] ? this.socialSecurityNumber : (java.lang.CharSequence) defaultValue(fields()[12]);
        if (spokenLanguageBuilder != null) {
          record.spokenLanguage = this.spokenLanguageBuilder.build();
        } else {
          record.spokenLanguage = fieldSetFlags()[13] ? this.spokenLanguage : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[13]);
        }
        record.spokenLanguageIdentifier = fieldSetFlags()[14] ? this.spokenLanguageIdentifier : (java.lang.Integer) defaultValue(fields()[14]);
        record.subsidyTypeIdentifier = fieldSetFlags()[15] ? this.subsidyTypeIdentifier : (java.lang.Integer) defaultValue(fields()[15]);
        if (tribeBuilder != null) {
          record.tribe = this.tribeBuilder.build();
        } else {
          record.tribe = fieldSetFlags()[16] ? this.tribe : (com.uhc.schema.model.eligibility.individual.Tribe) defaultValue(fields()[16]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DemographicInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<DemographicInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DemographicInfo>
    READER$ = (org.apache.avro.io.DatumReader<DemographicInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
