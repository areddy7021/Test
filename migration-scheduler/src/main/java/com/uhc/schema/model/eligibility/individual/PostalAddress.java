/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.individual;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PostalAddress extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5205390933036825870L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PostalAddress\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"addressType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"beginDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"countrySubCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"county\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deliveryPoint\",\"type\":[\"null\",\"string\"],\"doc\":\"A 2-digit code which denotes a single mail box or other place at which mail is delivered\",\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"fipsCountyCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states.\",\"default\":null},{\"name\":\"isoCountry\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LastUpdated\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"doc\":\"Information about the last update made to a given entity.\",\"fields\":[{\"name\":\"sourceSystemTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the source system (CDB ROW_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"sourceTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the originating source (CDB SRC_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",\"string\"],\"doc\":\"The last person or application to update the entity.\",\"default\":null}]}],\"default\":null},{\"name\":\"latitude\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"line1Text\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"line2Text\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"line3Text\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"marketSiteNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"postalAddressIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique identifier for an Individual's postal address.\",\"default\":null},{\"name\":\"postalCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"postalSuffixCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"preferredIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"primaryIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sourceCode\",\"type\":[\"null\",\"string\"],\"default\":null,\"aliases\":[\"sourceSystemCode\"]},{\"name\":\"sourceSystemAttributes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PostalAddressSourceSystemAttributes\",\"fields\":[{\"name\":\"cdb\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CdbPostalAddressReferenceData\",\"namespace\":\"com.uhc.schema.model.eligibility.cdb\",\"fields\":[{\"name\":\"addressTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"standardFormattingIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"stateProvinceCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"townName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"undeliverableReason\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"default\":null},{\"name\":\"validationIndicator\",\"type\":\"boolean\",\"default\":false}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PostalAddress> ENCODER =
      new BinaryMessageEncoder<PostalAddress>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PostalAddress> DECODER =
      new BinaryMessageDecoder<PostalAddress>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<PostalAddress> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<PostalAddress> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PostalAddress>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this PostalAddress to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a PostalAddress from a ByteBuffer. */
  public static PostalAddress fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public boolean active;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType addressType;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence beginDate;
  @Deprecated public java.lang.CharSequence countrySubCode;
  @Deprecated public java.lang.CharSequence county;
  /** A 2-digit code which denotes a single mail box or other place at which mail is delivered */
  @Deprecated public java.lang.CharSequence deliveryPoint;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence endDate;
  /** Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states. */
  @Deprecated public java.lang.CharSequence fipsCountyCode;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType isoCountry;
  @Deprecated public com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
  @Deprecated public java.lang.CharSequence latitude;
  @Deprecated public java.lang.CharSequence line1Text;
  @Deprecated public java.lang.CharSequence line2Text;
  @Deprecated public java.lang.CharSequence line3Text;
  @Deprecated public java.lang.CharSequence longitude;
  @Deprecated public java.lang.CharSequence marketSiteNumber;
  /** Unique identifier for an Individual's postal address. */
  @Deprecated public java.lang.CharSequence postalAddressIdentifier;
  @Deprecated public java.lang.CharSequence postalCode;
  @Deprecated public java.lang.CharSequence postalSuffixCode;
  @Deprecated public boolean preferredIndicator;
  @Deprecated public boolean primaryIndicator;
  @Deprecated public java.lang.CharSequence sourceCode;
  @Deprecated public com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes sourceSystemAttributes;
  @Deprecated public boolean standardFormattingIndicator;
  @Deprecated public java.lang.CharSequence stateProvinceCode;
  @Deprecated public java.lang.CharSequence townName;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType undeliverableReason;
  @Deprecated public boolean validationIndicator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PostalAddress() {}

  /**
   * All-args constructor.
   * @param active The new value for active
   * @param addressType The new value for addressType
   * @param beginDate Date format: CCYY-MM-DD
   * @param countrySubCode The new value for countrySubCode
   * @param county The new value for county
   * @param deliveryPoint A 2-digit code which denotes a single mail box or other place at which mail is delivered
   * @param endDate Date format: CCYY-MM-DD
   * @param fipsCountyCode Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states.
   * @param isoCountry The new value for isoCountry
   * @param lastUpdated The new value for lastUpdated
   * @param latitude The new value for latitude
   * @param line1Text The new value for line1Text
   * @param line2Text The new value for line2Text
   * @param line3Text The new value for line3Text
   * @param longitude The new value for longitude
   * @param marketSiteNumber The new value for marketSiteNumber
   * @param postalAddressIdentifier Unique identifier for an Individual's postal address.
   * @param postalCode The new value for postalCode
   * @param postalSuffixCode The new value for postalSuffixCode
   * @param preferredIndicator The new value for preferredIndicator
   * @param primaryIndicator The new value for primaryIndicator
   * @param sourceCode The new value for sourceCode
   * @param sourceSystemAttributes The new value for sourceSystemAttributes
   * @param standardFormattingIndicator The new value for standardFormattingIndicator
   * @param stateProvinceCode The new value for stateProvinceCode
   * @param townName The new value for townName
   * @param undeliverableReason The new value for undeliverableReason
   * @param validationIndicator The new value for validationIndicator
   */
  public PostalAddress(java.lang.Boolean active, com.uhc.schema.model.eligibility.common.DescriptionType addressType, java.lang.CharSequence beginDate, java.lang.CharSequence countrySubCode, java.lang.CharSequence county, java.lang.CharSequence deliveryPoint, java.lang.CharSequence endDate, java.lang.CharSequence fipsCountyCode, com.uhc.schema.model.eligibility.common.DescriptionType isoCountry, com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated, java.lang.CharSequence latitude, java.lang.CharSequence line1Text, java.lang.CharSequence line2Text, java.lang.CharSequence line3Text, java.lang.CharSequence longitude, java.lang.CharSequence marketSiteNumber, java.lang.CharSequence postalAddressIdentifier, java.lang.CharSequence postalCode, java.lang.CharSequence postalSuffixCode, java.lang.Boolean preferredIndicator, java.lang.Boolean primaryIndicator, java.lang.CharSequence sourceCode, com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes sourceSystemAttributes, java.lang.Boolean standardFormattingIndicator, java.lang.CharSequence stateProvinceCode, java.lang.CharSequence townName, com.uhc.schema.model.eligibility.common.DescriptionType undeliverableReason, java.lang.Boolean validationIndicator) {
    this.active = active;
    this.addressType = addressType;
    this.beginDate = beginDate;
    this.countrySubCode = countrySubCode;
    this.county = county;
    this.deliveryPoint = deliveryPoint;
    this.endDate = endDate;
    this.fipsCountyCode = fipsCountyCode;
    this.isoCountry = isoCountry;
    this.lastUpdated = lastUpdated;
    this.latitude = latitude;
    this.line1Text = line1Text;
    this.line2Text = line2Text;
    this.line3Text = line3Text;
    this.longitude = longitude;
    this.marketSiteNumber = marketSiteNumber;
    this.postalAddressIdentifier = postalAddressIdentifier;
    this.postalCode = postalCode;
    this.postalSuffixCode = postalSuffixCode;
    this.preferredIndicator = preferredIndicator;
    this.primaryIndicator = primaryIndicator;
    this.sourceCode = sourceCode;
    this.sourceSystemAttributes = sourceSystemAttributes;
    this.standardFormattingIndicator = standardFormattingIndicator;
    this.stateProvinceCode = stateProvinceCode;
    this.townName = townName;
    this.undeliverableReason = undeliverableReason;
    this.validationIndicator = validationIndicator;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return active;
    case 1: return addressType;
    case 2: return beginDate;
    case 3: return countrySubCode;
    case 4: return county;
    case 5: return deliveryPoint;
    case 6: return endDate;
    case 7: return fipsCountyCode;
    case 8: return isoCountry;
    case 9: return lastUpdated;
    case 10: return latitude;
    case 11: return line1Text;
    case 12: return line2Text;
    case 13: return line3Text;
    case 14: return longitude;
    case 15: return marketSiteNumber;
    case 16: return postalAddressIdentifier;
    case 17: return postalCode;
    case 18: return postalSuffixCode;
    case 19: return preferredIndicator;
    case 20: return primaryIndicator;
    case 21: return sourceCode;
    case 22: return sourceSystemAttributes;
    case 23: return standardFormattingIndicator;
    case 24: return stateProvinceCode;
    case 25: return townName;
    case 26: return undeliverableReason;
    case 27: return validationIndicator;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: active = (java.lang.Boolean)value$; break;
    case 1: addressType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 2: beginDate = (java.lang.CharSequence)value$; break;
    case 3: countrySubCode = (java.lang.CharSequence)value$; break;
    case 4: county = (java.lang.CharSequence)value$; break;
    case 5: deliveryPoint = (java.lang.CharSequence)value$; break;
    case 6: endDate = (java.lang.CharSequence)value$; break;
    case 7: fipsCountyCode = (java.lang.CharSequence)value$; break;
    case 8: isoCountry = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 9: lastUpdated = (com.uhc.schema.model.eligibility.common.LastUpdated)value$; break;
    case 10: latitude = (java.lang.CharSequence)value$; break;
    case 11: line1Text = (java.lang.CharSequence)value$; break;
    case 12: line2Text = (java.lang.CharSequence)value$; break;
    case 13: line3Text = (java.lang.CharSequence)value$; break;
    case 14: longitude = (java.lang.CharSequence)value$; break;
    case 15: marketSiteNumber = (java.lang.CharSequence)value$; break;
    case 16: postalAddressIdentifier = (java.lang.CharSequence)value$; break;
    case 17: postalCode = (java.lang.CharSequence)value$; break;
    case 18: postalSuffixCode = (java.lang.CharSequence)value$; break;
    case 19: preferredIndicator = (java.lang.Boolean)value$; break;
    case 20: primaryIndicator = (java.lang.Boolean)value$; break;
    case 21: sourceCode = (java.lang.CharSequence)value$; break;
    case 22: sourceSystemAttributes = (com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes)value$; break;
    case 23: standardFormattingIndicator = (java.lang.Boolean)value$; break;
    case 24: stateProvinceCode = (java.lang.CharSequence)value$; break;
    case 25: townName = (java.lang.CharSequence)value$; break;
    case 26: undeliverableReason = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 27: validationIndicator = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public java.lang.Boolean getActive() {
    return active;
  }

  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'addressType' field.
   * @return The value of the 'addressType' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getAddressType() {
    return addressType;
  }

  /**
   * Sets the value of the 'addressType' field.
   * @param value the value to set.
   */
  public void setAddressType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.addressType = value;
  }

  /**
   * Gets the value of the 'beginDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getBeginDate() {
    return beginDate;
  }

  /**
   * Sets the value of the 'beginDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setBeginDate(java.lang.CharSequence value) {
    this.beginDate = value;
  }

  /**
   * Gets the value of the 'countrySubCode' field.
   * @return The value of the 'countrySubCode' field.
   */
  public java.lang.CharSequence getCountrySubCode() {
    return countrySubCode;
  }

  /**
   * Sets the value of the 'countrySubCode' field.
   * @param value the value to set.
   */
  public void setCountrySubCode(java.lang.CharSequence value) {
    this.countrySubCode = value;
  }

  /**
   * Gets the value of the 'county' field.
   * @return The value of the 'county' field.
   */
  public java.lang.CharSequence getCounty() {
    return county;
  }

  /**
   * Sets the value of the 'county' field.
   * @param value the value to set.
   */
  public void setCounty(java.lang.CharSequence value) {
    this.county = value;
  }

  /**
   * Gets the value of the 'deliveryPoint' field.
   * @return A 2-digit code which denotes a single mail box or other place at which mail is delivered
   */
  public java.lang.CharSequence getDeliveryPoint() {
    return deliveryPoint;
  }

  /**
   * Sets the value of the 'deliveryPoint' field.
   * A 2-digit code which denotes a single mail box or other place at which mail is delivered
   * @param value the value to set.
   */
  public void setDeliveryPoint(java.lang.CharSequence value) {
    this.deliveryPoint = value;
  }

  /**
   * Gets the value of the 'endDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getEndDate() {
    return endDate;
  }

  /**
   * Sets the value of the 'endDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setEndDate(java.lang.CharSequence value) {
    this.endDate = value;
  }

  /**
   * Gets the value of the 'fipsCountyCode' field.
   * @return Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states.
   */
  public java.lang.CharSequence getFipsCountyCode() {
    return fipsCountyCode;
  }

  /**
   * Sets the value of the 'fipsCountyCode' field.
   * Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states.
   * @param value the value to set.
   */
  public void setFipsCountyCode(java.lang.CharSequence value) {
    this.fipsCountyCode = value;
  }

  /**
   * Gets the value of the 'isoCountry' field.
   * @return The value of the 'isoCountry' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getIsoCountry() {
    return isoCountry;
  }

  /**
   * Sets the value of the 'isoCountry' field.
   * @param value the value to set.
   */
  public void setIsoCountry(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.isoCountry = value;
  }

  /**
   * Gets the value of the 'lastUpdated' field.
   * @return The value of the 'lastUpdated' field.
   */
  public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
    return lastUpdated;
  }

  /**
   * Sets the value of the 'lastUpdated' field.
   * @param value the value to set.
   */
  public void setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
    this.lastUpdated = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return The value of the 'latitude' field.
   */
  public java.lang.CharSequence getLatitude() {
    return latitude;
  }

  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(java.lang.CharSequence value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'line1Text' field.
   * @return The value of the 'line1Text' field.
   */
  public java.lang.CharSequence getLine1Text() {
    return line1Text;
  }

  /**
   * Sets the value of the 'line1Text' field.
   * @param value the value to set.
   */
  public void setLine1Text(java.lang.CharSequence value) {
    this.line1Text = value;
  }

  /**
   * Gets the value of the 'line2Text' field.
   * @return The value of the 'line2Text' field.
   */
  public java.lang.CharSequence getLine2Text() {
    return line2Text;
  }

  /**
   * Sets the value of the 'line2Text' field.
   * @param value the value to set.
   */
  public void setLine2Text(java.lang.CharSequence value) {
    this.line2Text = value;
  }

  /**
   * Gets the value of the 'line3Text' field.
   * @return The value of the 'line3Text' field.
   */
  public java.lang.CharSequence getLine3Text() {
    return line3Text;
  }

  /**
   * Sets the value of the 'line3Text' field.
   * @param value the value to set.
   */
  public void setLine3Text(java.lang.CharSequence value) {
    this.line3Text = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return The value of the 'longitude' field.
   */
  public java.lang.CharSequence getLongitude() {
    return longitude;
  }

  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(java.lang.CharSequence value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'marketSiteNumber' field.
   * @return The value of the 'marketSiteNumber' field.
   */
  public java.lang.CharSequence getMarketSiteNumber() {
    return marketSiteNumber;
  }

  /**
   * Sets the value of the 'marketSiteNumber' field.
   * @param value the value to set.
   */
  public void setMarketSiteNumber(java.lang.CharSequence value) {
    this.marketSiteNumber = value;
  }

  /**
   * Gets the value of the 'postalAddressIdentifier' field.
   * @return Unique identifier for an Individual's postal address.
   */
  public java.lang.CharSequence getPostalAddressIdentifier() {
    return postalAddressIdentifier;
  }

  /**
   * Sets the value of the 'postalAddressIdentifier' field.
   * Unique identifier for an Individual's postal address.
   * @param value the value to set.
   */
  public void setPostalAddressIdentifier(java.lang.CharSequence value) {
    this.postalAddressIdentifier = value;
  }

  /**
   * Gets the value of the 'postalCode' field.
   * @return The value of the 'postalCode' field.
   */
  public java.lang.CharSequence getPostalCode() {
    return postalCode;
  }

  /**
   * Sets the value of the 'postalCode' field.
   * @param value the value to set.
   */
  public void setPostalCode(java.lang.CharSequence value) {
    this.postalCode = value;
  }

  /**
   * Gets the value of the 'postalSuffixCode' field.
   * @return The value of the 'postalSuffixCode' field.
   */
  public java.lang.CharSequence getPostalSuffixCode() {
    return postalSuffixCode;
  }

  /**
   * Sets the value of the 'postalSuffixCode' field.
   * @param value the value to set.
   */
  public void setPostalSuffixCode(java.lang.CharSequence value) {
    this.postalSuffixCode = value;
  }

  /**
   * Gets the value of the 'preferredIndicator' field.
   * @return The value of the 'preferredIndicator' field.
   */
  public java.lang.Boolean getPreferredIndicator() {
    return preferredIndicator;
  }

  /**
   * Sets the value of the 'preferredIndicator' field.
   * @param value the value to set.
   */
  public void setPreferredIndicator(java.lang.Boolean value) {
    this.preferredIndicator = value;
  }

  /**
   * Gets the value of the 'primaryIndicator' field.
   * @return The value of the 'primaryIndicator' field.
   */
  public java.lang.Boolean getPrimaryIndicator() {
    return primaryIndicator;
  }

  /**
   * Sets the value of the 'primaryIndicator' field.
   * @param value the value to set.
   */
  public void setPrimaryIndicator(java.lang.Boolean value) {
    this.primaryIndicator = value;
  }

  /**
   * Gets the value of the 'sourceCode' field.
   * @return The value of the 'sourceCode' field.
   */
  public java.lang.CharSequence getSourceCode() {
    return sourceCode;
  }

  /**
   * Sets the value of the 'sourceCode' field.
   * @param value the value to set.
   */
  public void setSourceCode(java.lang.CharSequence value) {
    this.sourceCode = value;
  }

  /**
   * Gets the value of the 'sourceSystemAttributes' field.
   * @return The value of the 'sourceSystemAttributes' field.
   */
  public com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes getSourceSystemAttributes() {
    return sourceSystemAttributes;
  }

  /**
   * Sets the value of the 'sourceSystemAttributes' field.
   * @param value the value to set.
   */
  public void setSourceSystemAttributes(com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes value) {
    this.sourceSystemAttributes = value;
  }

  /**
   * Gets the value of the 'standardFormattingIndicator' field.
   * @return The value of the 'standardFormattingIndicator' field.
   */
  public java.lang.Boolean getStandardFormattingIndicator() {
    return standardFormattingIndicator;
  }

  /**
   * Sets the value of the 'standardFormattingIndicator' field.
   * @param value the value to set.
   */
  public void setStandardFormattingIndicator(java.lang.Boolean value) {
    this.standardFormattingIndicator = value;
  }

  /**
   * Gets the value of the 'stateProvinceCode' field.
   * @return The value of the 'stateProvinceCode' field.
   */
  public java.lang.CharSequence getStateProvinceCode() {
    return stateProvinceCode;
  }

  /**
   * Sets the value of the 'stateProvinceCode' field.
   * @param value the value to set.
   */
  public void setStateProvinceCode(java.lang.CharSequence value) {
    this.stateProvinceCode = value;
  }

  /**
   * Gets the value of the 'townName' field.
   * @return The value of the 'townName' field.
   */
  public java.lang.CharSequence getTownName() {
    return townName;
  }

  /**
   * Sets the value of the 'townName' field.
   * @param value the value to set.
   */
  public void setTownName(java.lang.CharSequence value) {
    this.townName = value;
  }

  /**
   * Gets the value of the 'undeliverableReason' field.
   * @return The value of the 'undeliverableReason' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getUndeliverableReason() {
    return undeliverableReason;
  }

  /**
   * Sets the value of the 'undeliverableReason' field.
   * @param value the value to set.
   */
  public void setUndeliverableReason(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.undeliverableReason = value;
  }

  /**
   * Gets the value of the 'validationIndicator' field.
   * @return The value of the 'validationIndicator' field.
   */
  public java.lang.Boolean getValidationIndicator() {
    return validationIndicator;
  }

  /**
   * Sets the value of the 'validationIndicator' field.
   * @param value the value to set.
   */
  public void setValidationIndicator(java.lang.Boolean value) {
    this.validationIndicator = value;
  }

  /**
   * Creates a new PostalAddress RecordBuilder.
   * @return A new PostalAddress RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.PostalAddress.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.individual.PostalAddress.Builder();
  }

  /**
   * Creates a new PostalAddress RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PostalAddress RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.PostalAddress.Builder newBuilder(com.uhc.schema.model.eligibility.individual.PostalAddress.Builder other) {
    return new com.uhc.schema.model.eligibility.individual.PostalAddress.Builder(other);
  }

  /**
   * Creates a new PostalAddress RecordBuilder by copying an existing PostalAddress instance.
   * @param other The existing instance to copy.
   * @return A new PostalAddress RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.PostalAddress.Builder newBuilder(com.uhc.schema.model.eligibility.individual.PostalAddress other) {
    return new com.uhc.schema.model.eligibility.individual.PostalAddress.Builder(other);
  }

  /**
   * RecordBuilder for PostalAddress instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PostalAddress>
    implements org.apache.avro.data.RecordBuilder<PostalAddress> {

    private boolean active;
    private com.uhc.schema.model.eligibility.common.DescriptionType addressType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder addressTypeBuilder;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence beginDate;
    private java.lang.CharSequence countrySubCode;
    private java.lang.CharSequence county;
    /** A 2-digit code which denotes a single mail box or other place at which mail is delivered */
    private java.lang.CharSequence deliveryPoint;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence endDate;
    /** Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states. */
    private java.lang.CharSequence fipsCountyCode;
    private com.uhc.schema.model.eligibility.common.DescriptionType isoCountry;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder isoCountryBuilder;
    private com.uhc.schema.model.eligibility.common.LastUpdated lastUpdated;
    private com.uhc.schema.model.eligibility.common.LastUpdated.Builder lastUpdatedBuilder;
    private java.lang.CharSequence latitude;
    private java.lang.CharSequence line1Text;
    private java.lang.CharSequence line2Text;
    private java.lang.CharSequence line3Text;
    private java.lang.CharSequence longitude;
    private java.lang.CharSequence marketSiteNumber;
    /** Unique identifier for an Individual's postal address. */
    private java.lang.CharSequence postalAddressIdentifier;
    private java.lang.CharSequence postalCode;
    private java.lang.CharSequence postalSuffixCode;
    private boolean preferredIndicator;
    private boolean primaryIndicator;
    private java.lang.CharSequence sourceCode;
    private com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes sourceSystemAttributes;
    private com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes.Builder sourceSystemAttributesBuilder;
    private boolean standardFormattingIndicator;
    private java.lang.CharSequence stateProvinceCode;
    private java.lang.CharSequence townName;
    private com.uhc.schema.model.eligibility.common.DescriptionType undeliverableReason;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder undeliverableReasonBuilder;
    private boolean validationIndicator;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.PostalAddress.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.addressType)) {
        this.addressType = data().deepCopy(fields()[1].schema(), other.addressType);
        fieldSetFlags()[1] = true;
      }
      if (other.hasAddressTypeBuilder()) {
        this.addressTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getAddressTypeBuilder());
      }
      if (isValidValue(fields()[2], other.beginDate)) {
        this.beginDate = data().deepCopy(fields()[2].schema(), other.beginDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.countrySubCode)) {
        this.countrySubCode = data().deepCopy(fields()[3].schema(), other.countrySubCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.county)) {
        this.county = data().deepCopy(fields()[4].schema(), other.county);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.deliveryPoint)) {
        this.deliveryPoint = data().deepCopy(fields()[5].schema(), other.deliveryPoint);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.endDate)) {
        this.endDate = data().deepCopy(fields()[6].schema(), other.endDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.fipsCountyCode)) {
        this.fipsCountyCode = data().deepCopy(fields()[7].schema(), other.fipsCountyCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.isoCountry)) {
        this.isoCountry = data().deepCopy(fields()[8].schema(), other.isoCountry);
        fieldSetFlags()[8] = true;
      }
      if (other.hasIsoCountryBuilder()) {
        this.isoCountryBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getIsoCountryBuilder());
      }
      if (isValidValue(fields()[9], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[9].schema(), other.lastUpdated);
        fieldSetFlags()[9] = true;
      }
      if (other.hasLastUpdatedBuilder()) {
        this.lastUpdatedBuilder = com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(other.getLastUpdatedBuilder());
      }
      if (isValidValue(fields()[10], other.latitude)) {
        this.latitude = data().deepCopy(fields()[10].schema(), other.latitude);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.line1Text)) {
        this.line1Text = data().deepCopy(fields()[11].schema(), other.line1Text);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.line2Text)) {
        this.line2Text = data().deepCopy(fields()[12].schema(), other.line2Text);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.line3Text)) {
        this.line3Text = data().deepCopy(fields()[13].schema(), other.line3Text);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.longitude)) {
        this.longitude = data().deepCopy(fields()[14].schema(), other.longitude);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.marketSiteNumber)) {
        this.marketSiteNumber = data().deepCopy(fields()[15].schema(), other.marketSiteNumber);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.postalAddressIdentifier)) {
        this.postalAddressIdentifier = data().deepCopy(fields()[16].schema(), other.postalAddressIdentifier);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.postalCode)) {
        this.postalCode = data().deepCopy(fields()[17].schema(), other.postalCode);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.postalSuffixCode)) {
        this.postalSuffixCode = data().deepCopy(fields()[18].schema(), other.postalSuffixCode);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.preferredIndicator)) {
        this.preferredIndicator = data().deepCopy(fields()[19].schema(), other.preferredIndicator);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.primaryIndicator)) {
        this.primaryIndicator = data().deepCopy(fields()[20].schema(), other.primaryIndicator);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.sourceCode)) {
        this.sourceCode = data().deepCopy(fields()[21].schema(), other.sourceCode);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.sourceSystemAttributes)) {
        this.sourceSystemAttributes = data().deepCopy(fields()[22].schema(), other.sourceSystemAttributes);
        fieldSetFlags()[22] = true;
      }
      if (other.hasSourceSystemAttributesBuilder()) {
        this.sourceSystemAttributesBuilder = com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes.newBuilder(other.getSourceSystemAttributesBuilder());
      }
      if (isValidValue(fields()[23], other.standardFormattingIndicator)) {
        this.standardFormattingIndicator = data().deepCopy(fields()[23].schema(), other.standardFormattingIndicator);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.stateProvinceCode)) {
        this.stateProvinceCode = data().deepCopy(fields()[24].schema(), other.stateProvinceCode);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.townName)) {
        this.townName = data().deepCopy(fields()[25].schema(), other.townName);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.undeliverableReason)) {
        this.undeliverableReason = data().deepCopy(fields()[26].schema(), other.undeliverableReason);
        fieldSetFlags()[26] = true;
      }
      if (other.hasUndeliverableReasonBuilder()) {
        this.undeliverableReasonBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getUndeliverableReasonBuilder());
      }
      if (isValidValue(fields()[27], other.validationIndicator)) {
        this.validationIndicator = data().deepCopy(fields()[27].schema(), other.validationIndicator);
        fieldSetFlags()[27] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PostalAddress instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.PostalAddress other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.addressType)) {
        this.addressType = data().deepCopy(fields()[1].schema(), other.addressType);
        fieldSetFlags()[1] = true;
      }
      this.addressTypeBuilder = null;
      if (isValidValue(fields()[2], other.beginDate)) {
        this.beginDate = data().deepCopy(fields()[2].schema(), other.beginDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.countrySubCode)) {
        this.countrySubCode = data().deepCopy(fields()[3].schema(), other.countrySubCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.county)) {
        this.county = data().deepCopy(fields()[4].schema(), other.county);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.deliveryPoint)) {
        this.deliveryPoint = data().deepCopy(fields()[5].schema(), other.deliveryPoint);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.endDate)) {
        this.endDate = data().deepCopy(fields()[6].schema(), other.endDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.fipsCountyCode)) {
        this.fipsCountyCode = data().deepCopy(fields()[7].schema(), other.fipsCountyCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.isoCountry)) {
        this.isoCountry = data().deepCopy(fields()[8].schema(), other.isoCountry);
        fieldSetFlags()[8] = true;
      }
      this.isoCountryBuilder = null;
      if (isValidValue(fields()[9], other.lastUpdated)) {
        this.lastUpdated = data().deepCopy(fields()[9].schema(), other.lastUpdated);
        fieldSetFlags()[9] = true;
      }
      this.lastUpdatedBuilder = null;
      if (isValidValue(fields()[10], other.latitude)) {
        this.latitude = data().deepCopy(fields()[10].schema(), other.latitude);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.line1Text)) {
        this.line1Text = data().deepCopy(fields()[11].schema(), other.line1Text);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.line2Text)) {
        this.line2Text = data().deepCopy(fields()[12].schema(), other.line2Text);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.line3Text)) {
        this.line3Text = data().deepCopy(fields()[13].schema(), other.line3Text);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.longitude)) {
        this.longitude = data().deepCopy(fields()[14].schema(), other.longitude);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.marketSiteNumber)) {
        this.marketSiteNumber = data().deepCopy(fields()[15].schema(), other.marketSiteNumber);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.postalAddressIdentifier)) {
        this.postalAddressIdentifier = data().deepCopy(fields()[16].schema(), other.postalAddressIdentifier);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.postalCode)) {
        this.postalCode = data().deepCopy(fields()[17].schema(), other.postalCode);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.postalSuffixCode)) {
        this.postalSuffixCode = data().deepCopy(fields()[18].schema(), other.postalSuffixCode);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.preferredIndicator)) {
        this.preferredIndicator = data().deepCopy(fields()[19].schema(), other.preferredIndicator);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.primaryIndicator)) {
        this.primaryIndicator = data().deepCopy(fields()[20].schema(), other.primaryIndicator);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.sourceCode)) {
        this.sourceCode = data().deepCopy(fields()[21].schema(), other.sourceCode);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.sourceSystemAttributes)) {
        this.sourceSystemAttributes = data().deepCopy(fields()[22].schema(), other.sourceSystemAttributes);
        fieldSetFlags()[22] = true;
      }
      this.sourceSystemAttributesBuilder = null;
      if (isValidValue(fields()[23], other.standardFormattingIndicator)) {
        this.standardFormattingIndicator = data().deepCopy(fields()[23].schema(), other.standardFormattingIndicator);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.stateProvinceCode)) {
        this.stateProvinceCode = data().deepCopy(fields()[24].schema(), other.stateProvinceCode);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.townName)) {
        this.townName = data().deepCopy(fields()[25].schema(), other.townName);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.undeliverableReason)) {
        this.undeliverableReason = data().deepCopy(fields()[26].schema(), other.undeliverableReason);
        fieldSetFlags()[26] = true;
      }
      this.undeliverableReasonBuilder = null;
      if (isValidValue(fields()[27], other.validationIndicator)) {
        this.validationIndicator = data().deepCopy(fields()[27].schema(), other.validationIndicator);
        fieldSetFlags()[27] = true;
      }
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public java.lang.Boolean getActive() {
      return active;
    }

    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setActive(boolean value) {
      validate(fields()[0], value);
      this.active = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearActive() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressType' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getAddressType() {
      return addressType;
    }

    /**
      * Sets the value of the 'addressType' field.
      * @param value The value of 'addressType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setAddressType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[1], value);
      this.addressTypeBuilder = null;
      this.addressType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'addressType' field has been set.
      * @return True if the 'addressType' field has been set, false otherwise.
      */
    public boolean hasAddressType() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'addressType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getAddressTypeBuilder() {
      if (addressTypeBuilder == null) {
        if (hasAddressType()) {
          setAddressTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(addressType));
        } else {
          setAddressTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return addressTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'addressType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setAddressTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearAddressType();
      addressTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'addressType' field has an active Builder instance
     * @return True if the 'addressType' field has an active Builder instance
     */
    public boolean hasAddressTypeBuilder() {
      return addressTypeBuilder != null;
    }

    /**
      * Clears the value of the 'addressType' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearAddressType() {
      addressType = null;
      addressTypeBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'beginDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getBeginDate() {
      return beginDate;
    }

    /**
      * Sets the value of the 'beginDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'beginDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setBeginDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.beginDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'beginDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'beginDate' field has been set, false otherwise.
      */
    public boolean hasBeginDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'beginDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearBeginDate() {
      beginDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'countrySubCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountrySubCode() {
      return countrySubCode;
    }

    /**
      * Sets the value of the 'countrySubCode' field.
      * @param value The value of 'countrySubCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setCountrySubCode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.countrySubCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'countrySubCode' field has been set.
      * @return True if the 'countrySubCode' field has been set, false otherwise.
      */
    public boolean hasCountrySubCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'countrySubCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearCountrySubCode() {
      countrySubCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'county' field.
      * @return The value.
      */
    public java.lang.CharSequence getCounty() {
      return county;
    }

    /**
      * Sets the value of the 'county' field.
      * @param value The value of 'county'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setCounty(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.county = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'county' field has been set.
      * @return True if the 'county' field has been set, false otherwise.
      */
    public boolean hasCounty() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'county' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearCounty() {
      county = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryPoint' field.
      * A 2-digit code which denotes a single mail box or other place at which mail is delivered
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryPoint() {
      return deliveryPoint;
    }

    /**
      * Sets the value of the 'deliveryPoint' field.
      * A 2-digit code which denotes a single mail box or other place at which mail is delivered
      * @param value The value of 'deliveryPoint'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setDeliveryPoint(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.deliveryPoint = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryPoint' field has been set.
      * A 2-digit code which denotes a single mail box or other place at which mail is delivered
      * @return True if the 'deliveryPoint' field has been set, false otherwise.
      */
    public boolean hasDeliveryPoint() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'deliveryPoint' field.
      * A 2-digit code which denotes a single mail box or other place at which mail is delivered
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearDeliveryPoint() {
      deliveryPoint = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'endDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getEndDate() {
      return endDate;
    }

    /**
      * Sets the value of the 'endDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'endDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setEndDate(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.endDate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'endDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'endDate' field has been set, false otherwise.
      */
    public boolean hasEndDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'endDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearEndDate() {
      endDate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'fipsCountyCode' field.
      * Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states.
      * @return The value.
      */
    public java.lang.CharSequence getFipsCountyCode() {
      return fipsCountyCode;
    }

    /**
      * Sets the value of the 'fipsCountyCode' field.
      * Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states.
      * @param value The value of 'fipsCountyCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setFipsCountyCode(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.fipsCountyCode = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'fipsCountyCode' field has been set.
      * Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states.
      * @return True if the 'fipsCountyCode' field has been set, false otherwise.
      */
    public boolean hasFipsCountyCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'fipsCountyCode' field.
      * Identifies the five-digit Federal Information Processing Standard (FIPS) code which uniquely identifies counties and county equivalents in the United States, certain U.S. possessions, and certain freely associated states.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearFipsCountyCode() {
      fipsCountyCode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'isoCountry' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getIsoCountry() {
      return isoCountry;
    }

    /**
      * Sets the value of the 'isoCountry' field.
      * @param value The value of 'isoCountry'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setIsoCountry(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[8], value);
      this.isoCountryBuilder = null;
      this.isoCountry = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'isoCountry' field has been set.
      * @return True if the 'isoCountry' field has been set, false otherwise.
      */
    public boolean hasIsoCountry() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'isoCountry' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getIsoCountryBuilder() {
      if (isoCountryBuilder == null) {
        if (hasIsoCountry()) {
          setIsoCountryBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(isoCountry));
        } else {
          setIsoCountryBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return isoCountryBuilder;
    }

    /**
     * Sets the Builder instance for the 'isoCountry' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setIsoCountryBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearIsoCountry();
      isoCountryBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'isoCountry' field has an active Builder instance
     * @return True if the 'isoCountry' field has an active Builder instance
     */
    public boolean hasIsoCountryBuilder() {
      return isoCountryBuilder != null;
    }

    /**
      * Clears the value of the 'isoCountry' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearIsoCountry() {
      isoCountry = null;
      isoCountryBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdated' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.LastUpdated getLastUpdated() {
      return lastUpdated;
    }

    /**
      * Sets the value of the 'lastUpdated' field.
      * @param value The value of 'lastUpdated'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setLastUpdated(com.uhc.schema.model.eligibility.common.LastUpdated value) {
      validate(fields()[9], value);
      this.lastUpdatedBuilder = null;
      this.lastUpdated = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdated' field has been set.
      * @return True if the 'lastUpdated' field has been set, false otherwise.
      */
    public boolean hasLastUpdated() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'lastUpdated' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.LastUpdated.Builder getLastUpdatedBuilder() {
      if (lastUpdatedBuilder == null) {
        if (hasLastUpdated()) {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder(lastUpdated));
        } else {
          setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.newBuilder());
        }
      }
      return lastUpdatedBuilder;
    }

    /**
     * Sets the Builder instance for the 'lastUpdated' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setLastUpdatedBuilder(com.uhc.schema.model.eligibility.common.LastUpdated.Builder value) {
      clearLastUpdated();
      lastUpdatedBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'lastUpdated' field has an active Builder instance
     * @return True if the 'lastUpdated' field has an active Builder instance
     */
    public boolean hasLastUpdatedBuilder() {
      return lastUpdatedBuilder != null;
    }

    /**
      * Clears the value of the 'lastUpdated' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearLastUpdated() {
      lastUpdated = null;
      lastUpdatedBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'latitude' field.
      * @return The value.
      */
    public java.lang.CharSequence getLatitude() {
      return latitude;
    }

    /**
      * Sets the value of the 'latitude' field.
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setLatitude(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.latitude = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'latitude' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearLatitude() {
      latitude = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'line1Text' field.
      * @return The value.
      */
    public java.lang.CharSequence getLine1Text() {
      return line1Text;
    }

    /**
      * Sets the value of the 'line1Text' field.
      * @param value The value of 'line1Text'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setLine1Text(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.line1Text = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'line1Text' field has been set.
      * @return True if the 'line1Text' field has been set, false otherwise.
      */
    public boolean hasLine1Text() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'line1Text' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearLine1Text() {
      line1Text = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'line2Text' field.
      * @return The value.
      */
    public java.lang.CharSequence getLine2Text() {
      return line2Text;
    }

    /**
      * Sets the value of the 'line2Text' field.
      * @param value The value of 'line2Text'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setLine2Text(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.line2Text = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'line2Text' field has been set.
      * @return True if the 'line2Text' field has been set, false otherwise.
      */
    public boolean hasLine2Text() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'line2Text' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearLine2Text() {
      line2Text = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'line3Text' field.
      * @return The value.
      */
    public java.lang.CharSequence getLine3Text() {
      return line3Text;
    }

    /**
      * Sets the value of the 'line3Text' field.
      * @param value The value of 'line3Text'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setLine3Text(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.line3Text = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'line3Text' field has been set.
      * @return True if the 'line3Text' field has been set, false otherwise.
      */
    public boolean hasLine3Text() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'line3Text' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearLine3Text() {
      line3Text = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * @return The value.
      */
    public java.lang.CharSequence getLongitude() {
      return longitude;
    }

    /**
      * Sets the value of the 'longitude' field.
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setLongitude(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.longitude = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'longitude' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearLongitude() {
      longitude = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'marketSiteNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getMarketSiteNumber() {
      return marketSiteNumber;
    }

    /**
      * Sets the value of the 'marketSiteNumber' field.
      * @param value The value of 'marketSiteNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setMarketSiteNumber(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.marketSiteNumber = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'marketSiteNumber' field has been set.
      * @return True if the 'marketSiteNumber' field has been set, false otherwise.
      */
    public boolean hasMarketSiteNumber() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'marketSiteNumber' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearMarketSiteNumber() {
      marketSiteNumber = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'postalAddressIdentifier' field.
      * Unique identifier for an Individual's postal address.
      * @return The value.
      */
    public java.lang.CharSequence getPostalAddressIdentifier() {
      return postalAddressIdentifier;
    }

    /**
      * Sets the value of the 'postalAddressIdentifier' field.
      * Unique identifier for an Individual's postal address.
      * @param value The value of 'postalAddressIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setPostalAddressIdentifier(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.postalAddressIdentifier = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'postalAddressIdentifier' field has been set.
      * Unique identifier for an Individual's postal address.
      * @return True if the 'postalAddressIdentifier' field has been set, false otherwise.
      */
    public boolean hasPostalAddressIdentifier() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'postalAddressIdentifier' field.
      * Unique identifier for an Individual's postal address.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearPostalAddressIdentifier() {
      postalAddressIdentifier = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'postalCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getPostalCode() {
      return postalCode;
    }

    /**
      * Sets the value of the 'postalCode' field.
      * @param value The value of 'postalCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setPostalCode(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.postalCode = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'postalCode' field has been set.
      * @return True if the 'postalCode' field has been set, false otherwise.
      */
    public boolean hasPostalCode() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'postalCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearPostalCode() {
      postalCode = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'postalSuffixCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getPostalSuffixCode() {
      return postalSuffixCode;
    }

    /**
      * Sets the value of the 'postalSuffixCode' field.
      * @param value The value of 'postalSuffixCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setPostalSuffixCode(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.postalSuffixCode = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'postalSuffixCode' field has been set.
      * @return True if the 'postalSuffixCode' field has been set, false otherwise.
      */
    public boolean hasPostalSuffixCode() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'postalSuffixCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearPostalSuffixCode() {
      postalSuffixCode = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'preferredIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getPreferredIndicator() {
      return preferredIndicator;
    }

    /**
      * Sets the value of the 'preferredIndicator' field.
      * @param value The value of 'preferredIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setPreferredIndicator(boolean value) {
      validate(fields()[19], value);
      this.preferredIndicator = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'preferredIndicator' field has been set.
      * @return True if the 'preferredIndicator' field has been set, false otherwise.
      */
    public boolean hasPreferredIndicator() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'preferredIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearPreferredIndicator() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'primaryIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getPrimaryIndicator() {
      return primaryIndicator;
    }

    /**
      * Sets the value of the 'primaryIndicator' field.
      * @param value The value of 'primaryIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setPrimaryIndicator(boolean value) {
      validate(fields()[20], value);
      this.primaryIndicator = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'primaryIndicator' field has been set.
      * @return True if the 'primaryIndicator' field has been set, false otherwise.
      */
    public boolean hasPrimaryIndicator() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'primaryIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearPrimaryIndicator() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceCode() {
      return sourceCode;
    }

    /**
      * Sets the value of the 'sourceCode' field.
      * @param value The value of 'sourceCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setSourceCode(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.sourceCode = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceCode' field has been set.
      * @return True if the 'sourceCode' field has been set, false otherwise.
      */
    public boolean hasSourceCode() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'sourceCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearSourceCode() {
      sourceCode = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceSystemAttributes' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes getSourceSystemAttributes() {
      return sourceSystemAttributes;
    }

    /**
      * Sets the value of the 'sourceSystemAttributes' field.
      * @param value The value of 'sourceSystemAttributes'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setSourceSystemAttributes(com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes value) {
      validate(fields()[22], value);
      this.sourceSystemAttributesBuilder = null;
      this.sourceSystemAttributes = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceSystemAttributes' field has been set.
      * @return True if the 'sourceSystemAttributes' field has been set, false otherwise.
      */
    public boolean hasSourceSystemAttributes() {
      return fieldSetFlags()[22];
    }

    /**
     * Gets the Builder instance for the 'sourceSystemAttributes' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes.Builder getSourceSystemAttributesBuilder() {
      if (sourceSystemAttributesBuilder == null) {
        if (hasSourceSystemAttributes()) {
          setSourceSystemAttributesBuilder(com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes.newBuilder(sourceSystemAttributes));
        } else {
          setSourceSystemAttributesBuilder(com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes.newBuilder());
        }
      }
      return sourceSystemAttributesBuilder;
    }

    /**
     * Sets the Builder instance for the 'sourceSystemAttributes' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setSourceSystemAttributesBuilder(com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes.Builder value) {
      clearSourceSystemAttributes();
      sourceSystemAttributesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'sourceSystemAttributes' field has an active Builder instance
     * @return True if the 'sourceSystemAttributes' field has an active Builder instance
     */
    public boolean hasSourceSystemAttributesBuilder() {
      return sourceSystemAttributesBuilder != null;
    }

    /**
      * Clears the value of the 'sourceSystemAttributes' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearSourceSystemAttributes() {
      sourceSystemAttributes = null;
      sourceSystemAttributesBuilder = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'standardFormattingIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getStandardFormattingIndicator() {
      return standardFormattingIndicator;
    }

    /**
      * Sets the value of the 'standardFormattingIndicator' field.
      * @param value The value of 'standardFormattingIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setStandardFormattingIndicator(boolean value) {
      validate(fields()[23], value);
      this.standardFormattingIndicator = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'standardFormattingIndicator' field has been set.
      * @return True if the 'standardFormattingIndicator' field has been set, false otherwise.
      */
    public boolean hasStandardFormattingIndicator() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'standardFormattingIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearStandardFormattingIndicator() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'stateProvinceCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getStateProvinceCode() {
      return stateProvinceCode;
    }

    /**
      * Sets the value of the 'stateProvinceCode' field.
      * @param value The value of 'stateProvinceCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setStateProvinceCode(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.stateProvinceCode = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'stateProvinceCode' field has been set.
      * @return True if the 'stateProvinceCode' field has been set, false otherwise.
      */
    public boolean hasStateProvinceCode() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'stateProvinceCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearStateProvinceCode() {
      stateProvinceCode = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'townName' field.
      * @return The value.
      */
    public java.lang.CharSequence getTownName() {
      return townName;
    }

    /**
      * Sets the value of the 'townName' field.
      * @param value The value of 'townName'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setTownName(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.townName = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'townName' field has been set.
      * @return True if the 'townName' field has been set, false otherwise.
      */
    public boolean hasTownName() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'townName' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearTownName() {
      townName = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'undeliverableReason' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getUndeliverableReason() {
      return undeliverableReason;
    }

    /**
      * Sets the value of the 'undeliverableReason' field.
      * @param value The value of 'undeliverableReason'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setUndeliverableReason(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[26], value);
      this.undeliverableReasonBuilder = null;
      this.undeliverableReason = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'undeliverableReason' field has been set.
      * @return True if the 'undeliverableReason' field has been set, false otherwise.
      */
    public boolean hasUndeliverableReason() {
      return fieldSetFlags()[26];
    }

    /**
     * Gets the Builder instance for the 'undeliverableReason' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getUndeliverableReasonBuilder() {
      if (undeliverableReasonBuilder == null) {
        if (hasUndeliverableReason()) {
          setUndeliverableReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(undeliverableReason));
        } else {
          setUndeliverableReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return undeliverableReasonBuilder;
    }

    /**
     * Sets the Builder instance for the 'undeliverableReason' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setUndeliverableReasonBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearUndeliverableReason();
      undeliverableReasonBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'undeliverableReason' field has an active Builder instance
     * @return True if the 'undeliverableReason' field has an active Builder instance
     */
    public boolean hasUndeliverableReasonBuilder() {
      return undeliverableReasonBuilder != null;
    }

    /**
      * Clears the value of the 'undeliverableReason' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearUndeliverableReason() {
      undeliverableReason = null;
      undeliverableReasonBuilder = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'validationIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getValidationIndicator() {
      return validationIndicator;
    }

    /**
      * Sets the value of the 'validationIndicator' field.
      * @param value The value of 'validationIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder setValidationIndicator(boolean value) {
      validate(fields()[27], value);
      this.validationIndicator = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'validationIndicator' field has been set.
      * @return True if the 'validationIndicator' field has been set, false otherwise.
      */
    public boolean hasValidationIndicator() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'validationIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PostalAddress.Builder clearValidationIndicator() {
      fieldSetFlags()[27] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PostalAddress build() {
      try {
        PostalAddress record = new PostalAddress();
        record.active = fieldSetFlags()[0] ? this.active : (java.lang.Boolean) defaultValue(fields()[0]);
        if (addressTypeBuilder != null) {
          record.addressType = this.addressTypeBuilder.build();
        } else {
          record.addressType = fieldSetFlags()[1] ? this.addressType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[1]);
        }
        record.beginDate = fieldSetFlags()[2] ? this.beginDate : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.countrySubCode = fieldSetFlags()[3] ? this.countrySubCode : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.county = fieldSetFlags()[4] ? this.county : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.deliveryPoint = fieldSetFlags()[5] ? this.deliveryPoint : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.endDate = fieldSetFlags()[6] ? this.endDate : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.fipsCountyCode = fieldSetFlags()[7] ? this.fipsCountyCode : (java.lang.CharSequence) defaultValue(fields()[7]);
        if (isoCountryBuilder != null) {
          record.isoCountry = this.isoCountryBuilder.build();
        } else {
          record.isoCountry = fieldSetFlags()[8] ? this.isoCountry : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[8]);
        }
        if (lastUpdatedBuilder != null) {
          record.lastUpdated = this.lastUpdatedBuilder.build();
        } else {
          record.lastUpdated = fieldSetFlags()[9] ? this.lastUpdated : (com.uhc.schema.model.eligibility.common.LastUpdated) defaultValue(fields()[9]);
        }
        record.latitude = fieldSetFlags()[10] ? this.latitude : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.line1Text = fieldSetFlags()[11] ? this.line1Text : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.line2Text = fieldSetFlags()[12] ? this.line2Text : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.line3Text = fieldSetFlags()[13] ? this.line3Text : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.longitude = fieldSetFlags()[14] ? this.longitude : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.marketSiteNumber = fieldSetFlags()[15] ? this.marketSiteNumber : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.postalAddressIdentifier = fieldSetFlags()[16] ? this.postalAddressIdentifier : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.postalCode = fieldSetFlags()[17] ? this.postalCode : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.postalSuffixCode = fieldSetFlags()[18] ? this.postalSuffixCode : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.preferredIndicator = fieldSetFlags()[19] ? this.preferredIndicator : (java.lang.Boolean) defaultValue(fields()[19]);
        record.primaryIndicator = fieldSetFlags()[20] ? this.primaryIndicator : (java.lang.Boolean) defaultValue(fields()[20]);
        record.sourceCode = fieldSetFlags()[21] ? this.sourceCode : (java.lang.CharSequence) defaultValue(fields()[21]);
        if (sourceSystemAttributesBuilder != null) {
          record.sourceSystemAttributes = this.sourceSystemAttributesBuilder.build();
        } else {
          record.sourceSystemAttributes = fieldSetFlags()[22] ? this.sourceSystemAttributes : (com.uhc.schema.model.eligibility.individual.PostalAddressSourceSystemAttributes) defaultValue(fields()[22]);
        }
        record.standardFormattingIndicator = fieldSetFlags()[23] ? this.standardFormattingIndicator : (java.lang.Boolean) defaultValue(fields()[23]);
        record.stateProvinceCode = fieldSetFlags()[24] ? this.stateProvinceCode : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.townName = fieldSetFlags()[25] ? this.townName : (java.lang.CharSequence) defaultValue(fields()[25]);
        if (undeliverableReasonBuilder != null) {
          record.undeliverableReason = this.undeliverableReasonBuilder.build();
        } else {
          record.undeliverableReason = fieldSetFlags()[26] ? this.undeliverableReason : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[26]);
        }
        record.validationIndicator = fieldSetFlags()[27] ? this.validationIndicator : (java.lang.Boolean) defaultValue(fields()[27]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PostalAddress>
    WRITER$ = (org.apache.avro.io.DatumWriter<PostalAddress>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PostalAddress>
    READER$ = (org.apache.avro.io.DatumReader<PostalAddress>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
