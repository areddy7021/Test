/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.cdb;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CdbMembershipSourceSystemAttributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 453910200738322383L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CdbMembershipSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.cdb\",\"fields\":[{\"name\":\"cesGroupNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"legacyProductCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"legacyProductId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nonCs\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"NonCsMembershipSourceSystemAttributes\",\"fields\":[{\"name\":\"legalEntityName\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"planCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"referenceData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CdbMembershipReferenceData\",\"fields\":[{\"name\":\"coverageLevelTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"coveragePaidThruReasonCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"coverageTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"healthServiceProductCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"healthServiceProductLineCode\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CdbMembershipSourceSystemAttributes> ENCODER =
      new BinaryMessageEncoder<CdbMembershipSourceSystemAttributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CdbMembershipSourceSystemAttributes> DECODER =
      new BinaryMessageDecoder<CdbMembershipSourceSystemAttributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CdbMembershipSourceSystemAttributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CdbMembershipSourceSystemAttributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CdbMembershipSourceSystemAttributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CdbMembershipSourceSystemAttributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CdbMembershipSourceSystemAttributes from a ByteBuffer. */
  public static CdbMembershipSourceSystemAttributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence cesGroupNumber;
  @Deprecated public java.lang.CharSequence legacyProductCode;
  @Deprecated public java.lang.CharSequence legacyProductId;
  @Deprecated public com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes nonCs;
  @Deprecated public java.lang.CharSequence planCode;
  @Deprecated public com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData referenceData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CdbMembershipSourceSystemAttributes() {}

  /**
   * All-args constructor.
   * @param cesGroupNumber The new value for cesGroupNumber
   * @param legacyProductCode The new value for legacyProductCode
   * @param legacyProductId The new value for legacyProductId
   * @param nonCs The new value for nonCs
   * @param planCode The new value for planCode
   * @param referenceData The new value for referenceData
   */
  public CdbMembershipSourceSystemAttributes(java.lang.CharSequence cesGroupNumber, java.lang.CharSequence legacyProductCode, java.lang.CharSequence legacyProductId, com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes nonCs, java.lang.CharSequence planCode, com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData referenceData) {
    this.cesGroupNumber = cesGroupNumber;
    this.legacyProductCode = legacyProductCode;
    this.legacyProductId = legacyProductId;
    this.nonCs = nonCs;
    this.planCode = planCode;
    this.referenceData = referenceData;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return cesGroupNumber;
    case 1: return legacyProductCode;
    case 2: return legacyProductId;
    case 3: return nonCs;
    case 4: return planCode;
    case 5: return referenceData;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: cesGroupNumber = (java.lang.CharSequence)value$; break;
    case 1: legacyProductCode = (java.lang.CharSequence)value$; break;
    case 2: legacyProductId = (java.lang.CharSequence)value$; break;
    case 3: nonCs = (com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes)value$; break;
    case 4: planCode = (java.lang.CharSequence)value$; break;
    case 5: referenceData = (com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'cesGroupNumber' field.
   * @return The value of the 'cesGroupNumber' field.
   */
  public java.lang.CharSequence getCesGroupNumber() {
    return cesGroupNumber;
  }

  /**
   * Sets the value of the 'cesGroupNumber' field.
   * @param value the value to set.
   */
  public void setCesGroupNumber(java.lang.CharSequence value) {
    this.cesGroupNumber = value;
  }

  /**
   * Gets the value of the 'legacyProductCode' field.
   * @return The value of the 'legacyProductCode' field.
   */
  public java.lang.CharSequence getLegacyProductCode() {
    return legacyProductCode;
  }

  /**
   * Sets the value of the 'legacyProductCode' field.
   * @param value the value to set.
   */
  public void setLegacyProductCode(java.lang.CharSequence value) {
    this.legacyProductCode = value;
  }

  /**
   * Gets the value of the 'legacyProductId' field.
   * @return The value of the 'legacyProductId' field.
   */
  public java.lang.CharSequence getLegacyProductId() {
    return legacyProductId;
  }

  /**
   * Sets the value of the 'legacyProductId' field.
   * @param value the value to set.
   */
  public void setLegacyProductId(java.lang.CharSequence value) {
    this.legacyProductId = value;
  }

  /**
   * Gets the value of the 'nonCs' field.
   * @return The value of the 'nonCs' field.
   */
  public com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes getNonCs() {
    return nonCs;
  }

  /**
   * Sets the value of the 'nonCs' field.
   * @param value the value to set.
   */
  public void setNonCs(com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes value) {
    this.nonCs = value;
  }

  /**
   * Gets the value of the 'planCode' field.
   * @return The value of the 'planCode' field.
   */
  public java.lang.CharSequence getPlanCode() {
    return planCode;
  }

  /**
   * Sets the value of the 'planCode' field.
   * @param value the value to set.
   */
  public void setPlanCode(java.lang.CharSequence value) {
    this.planCode = value;
  }

  /**
   * Gets the value of the 'referenceData' field.
   * @return The value of the 'referenceData' field.
   */
  public com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData getReferenceData() {
    return referenceData;
  }

  /**
   * Sets the value of the 'referenceData' field.
   * @param value the value to set.
   */
  public void setReferenceData(com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData value) {
    this.referenceData = value;
  }

  /**
   * Creates a new CdbMembershipSourceSystemAttributes RecordBuilder.
   * @return A new CdbMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder();
  }

  /**
   * Creates a new CdbMembershipSourceSystemAttributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CdbMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder other) {
    return new com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder(other);
  }

  /**
   * Creates a new CdbMembershipSourceSystemAttributes RecordBuilder by copying an existing CdbMembershipSourceSystemAttributes instance.
   * @param other The existing instance to copy.
   * @return A new CdbMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes other) {
    return new com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder(other);
  }

  /**
   * RecordBuilder for CdbMembershipSourceSystemAttributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CdbMembershipSourceSystemAttributes>
    implements org.apache.avro.data.RecordBuilder<CdbMembershipSourceSystemAttributes> {

    private java.lang.CharSequence cesGroupNumber;
    private java.lang.CharSequence legacyProductCode;
    private java.lang.CharSequence legacyProductId;
    private com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes nonCs;
    private com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes.Builder nonCsBuilder;
    private java.lang.CharSequence planCode;
    private com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData referenceData;
    private com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData.Builder referenceDataBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.cesGroupNumber)) {
        this.cesGroupNumber = data().deepCopy(fields()[0].schema(), other.cesGroupNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.legacyProductCode)) {
        this.legacyProductCode = data().deepCopy(fields()[1].schema(), other.legacyProductCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.legacyProductId)) {
        this.legacyProductId = data().deepCopy(fields()[2].schema(), other.legacyProductId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.nonCs)) {
        this.nonCs = data().deepCopy(fields()[3].schema(), other.nonCs);
        fieldSetFlags()[3] = true;
      }
      if (other.hasNonCsBuilder()) {
        this.nonCsBuilder = com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes.newBuilder(other.getNonCsBuilder());
      }
      if (isValidValue(fields()[4], other.planCode)) {
        this.planCode = data().deepCopy(fields()[4].schema(), other.planCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.referenceData)) {
        this.referenceData = data().deepCopy(fields()[5].schema(), other.referenceData);
        fieldSetFlags()[5] = true;
      }
      if (other.hasReferenceDataBuilder()) {
        this.referenceDataBuilder = com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData.newBuilder(other.getReferenceDataBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing CdbMembershipSourceSystemAttributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.cesGroupNumber)) {
        this.cesGroupNumber = data().deepCopy(fields()[0].schema(), other.cesGroupNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.legacyProductCode)) {
        this.legacyProductCode = data().deepCopy(fields()[1].schema(), other.legacyProductCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.legacyProductId)) {
        this.legacyProductId = data().deepCopy(fields()[2].schema(), other.legacyProductId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.nonCs)) {
        this.nonCs = data().deepCopy(fields()[3].schema(), other.nonCs);
        fieldSetFlags()[3] = true;
      }
      this.nonCsBuilder = null;
      if (isValidValue(fields()[4], other.planCode)) {
        this.planCode = data().deepCopy(fields()[4].schema(), other.planCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.referenceData)) {
        this.referenceData = data().deepCopy(fields()[5].schema(), other.referenceData);
        fieldSetFlags()[5] = true;
      }
      this.referenceDataBuilder = null;
    }

    /**
      * Gets the value of the 'cesGroupNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getCesGroupNumber() {
      return cesGroupNumber;
    }

    /**
      * Sets the value of the 'cesGroupNumber' field.
      * @param value The value of 'cesGroupNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder setCesGroupNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.cesGroupNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'cesGroupNumber' field has been set.
      * @return True if the 'cesGroupNumber' field has been set, false otherwise.
      */
    public boolean hasCesGroupNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'cesGroupNumber' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder clearCesGroupNumber() {
      cesGroupNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'legacyProductCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getLegacyProductCode() {
      return legacyProductCode;
    }

    /**
      * Sets the value of the 'legacyProductCode' field.
      * @param value The value of 'legacyProductCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder setLegacyProductCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.legacyProductCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'legacyProductCode' field has been set.
      * @return True if the 'legacyProductCode' field has been set, false otherwise.
      */
    public boolean hasLegacyProductCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'legacyProductCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder clearLegacyProductCode() {
      legacyProductCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'legacyProductId' field.
      * @return The value.
      */
    public java.lang.CharSequence getLegacyProductId() {
      return legacyProductId;
    }

    /**
      * Sets the value of the 'legacyProductId' field.
      * @param value The value of 'legacyProductId'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder setLegacyProductId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.legacyProductId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'legacyProductId' field has been set.
      * @return True if the 'legacyProductId' field has been set, false otherwise.
      */
    public boolean hasLegacyProductId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'legacyProductId' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder clearLegacyProductId() {
      legacyProductId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'nonCs' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes getNonCs() {
      return nonCs;
    }

    /**
      * Sets the value of the 'nonCs' field.
      * @param value The value of 'nonCs'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder setNonCs(com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes value) {
      validate(fields()[3], value);
      this.nonCsBuilder = null;
      this.nonCs = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'nonCs' field has been set.
      * @return True if the 'nonCs' field has been set, false otherwise.
      */
    public boolean hasNonCs() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'nonCs' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes.Builder getNonCsBuilder() {
      if (nonCsBuilder == null) {
        if (hasNonCs()) {
          setNonCsBuilder(com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes.newBuilder(nonCs));
        } else {
          setNonCsBuilder(com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes.newBuilder());
        }
      }
      return nonCsBuilder;
    }

    /**
     * Sets the Builder instance for the 'nonCs' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder setNonCsBuilder(com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes.Builder value) {
      clearNonCs();
      nonCsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'nonCs' field has an active Builder instance
     * @return True if the 'nonCs' field has an active Builder instance
     */
    public boolean hasNonCsBuilder() {
      return nonCsBuilder != null;
    }

    /**
      * Clears the value of the 'nonCs' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder clearNonCs() {
      nonCs = null;
      nonCsBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'planCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getPlanCode() {
      return planCode;
    }

    /**
      * Sets the value of the 'planCode' field.
      * @param value The value of 'planCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder setPlanCode(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.planCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'planCode' field has been set.
      * @return True if the 'planCode' field has been set, false otherwise.
      */
    public boolean hasPlanCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'planCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder clearPlanCode() {
      planCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'referenceData' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData getReferenceData() {
      return referenceData;
    }

    /**
      * Sets the value of the 'referenceData' field.
      * @param value The value of 'referenceData'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder setReferenceData(com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData value) {
      validate(fields()[5], value);
      this.referenceDataBuilder = null;
      this.referenceData = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'referenceData' field has been set.
      * @return True if the 'referenceData' field has been set, false otherwise.
      */
    public boolean hasReferenceData() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'referenceData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData.Builder getReferenceDataBuilder() {
      if (referenceDataBuilder == null) {
        if (hasReferenceData()) {
          setReferenceDataBuilder(com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData.newBuilder(referenceData));
        } else {
          setReferenceDataBuilder(com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData.newBuilder());
        }
      }
      return referenceDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'referenceData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder setReferenceDataBuilder(com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData.Builder value) {
      clearReferenceData();
      referenceDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'referenceData' field has an active Builder instance
     * @return True if the 'referenceData' field has an active Builder instance
     */
    public boolean hasReferenceDataBuilder() {
      return referenceDataBuilder != null;
    }

    /**
      * Clears the value of the 'referenceData' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbMembershipSourceSystemAttributes.Builder clearReferenceData() {
      referenceData = null;
      referenceDataBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CdbMembershipSourceSystemAttributes build() {
      try {
        CdbMembershipSourceSystemAttributes record = new CdbMembershipSourceSystemAttributes();
        record.cesGroupNumber = fieldSetFlags()[0] ? this.cesGroupNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.legacyProductCode = fieldSetFlags()[1] ? this.legacyProductCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.legacyProductId = fieldSetFlags()[2] ? this.legacyProductId : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (nonCsBuilder != null) {
          record.nonCs = this.nonCsBuilder.build();
        } else {
          record.nonCs = fieldSetFlags()[3] ? this.nonCs : (com.uhc.schema.model.eligibility.cdb.NonCsMembershipSourceSystemAttributes) defaultValue(fields()[3]);
        }
        record.planCode = fieldSetFlags()[4] ? this.planCode : (java.lang.CharSequence) defaultValue(fields()[4]);
        if (referenceDataBuilder != null) {
          record.referenceData = this.referenceDataBuilder.build();
        } else {
          record.referenceData = fieldSetFlags()[5] ? this.referenceData : (com.uhc.schema.model.eligibility.cdb.CdbMembershipReferenceData) defaultValue(fields()[5]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CdbMembershipSourceSystemAttributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<CdbMembershipSourceSystemAttributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CdbMembershipSourceSystemAttributes>
    READER$ = (org.apache.avro.io.DatumReader<CdbMembershipSourceSystemAttributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
