/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.medicareandretirement;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MedicareAndRetirementHouseholdProfile extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 898590045253623746L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MedicareAndRetirementHouseholdProfile\",\"namespace\":\"com.uhc.schema.model.eligibility.medicareandretirement\",\"fields\":[{\"name\":\"associationIdentifier\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"creationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"eligibilitySystemIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"migratedMemberAppRecDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"migratedMemberAppSourceIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"migratedMemberIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"membershipNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"membershipNumberSystem\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"originalEffectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"profileDates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DateRangeType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"startDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null}]}],\"default\":null},{\"name\":\"secondaryMembershipNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sourceSystemMemberIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MedicareAndRetirementHouseholdProfile> ENCODER =
      new BinaryMessageEncoder<MedicareAndRetirementHouseholdProfile>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MedicareAndRetirementHouseholdProfile> DECODER =
      new BinaryMessageDecoder<MedicareAndRetirementHouseholdProfile>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MedicareAndRetirementHouseholdProfile> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MedicareAndRetirementHouseholdProfile> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MedicareAndRetirementHouseholdProfile>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MedicareAndRetirementHouseholdProfile to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MedicareAndRetirementHouseholdProfile from a ByteBuffer. */
  public static MedicareAndRetirementHouseholdProfile fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Integer associationIdentifier;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence creationDate;
  @Deprecated public java.lang.CharSequence eligibilitySystemIdentifier;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence migratedMemberAppRecDate;
  @Deprecated public java.lang.CharSequence migratedMemberAppSourceIdentifier;
  @Deprecated public java.lang.CharSequence migratedMemberIndicator;
  @Deprecated public java.lang.Integer membershipNumber;
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType membershipNumberSystem;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence originalEffectiveDate;
  @Deprecated public com.uhc.schema.model.eligibility.common.DateRangeType profileDates;
  @Deprecated public java.lang.CharSequence secondaryMembershipNumber;
  @Deprecated public java.lang.CharSequence sourceSystemMemberIdentifier;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MedicareAndRetirementHouseholdProfile() {}

  /**
   * All-args constructor.
   * @param associationIdentifier The new value for associationIdentifier
   * @param creationDate Date format: CCYY-MM-DD
   * @param eligibilitySystemIdentifier The new value for eligibilitySystemIdentifier
   * @param migratedMemberAppRecDate Date format: CCYY-MM-DD
   * @param migratedMemberAppSourceIdentifier The new value for migratedMemberAppSourceIdentifier
   * @param migratedMemberIndicator The new value for migratedMemberIndicator
   * @param membershipNumber The new value for membershipNumber
   * @param membershipNumberSystem The new value for membershipNumberSystem
   * @param originalEffectiveDate Date format: CCYY-MM-DD
   * @param profileDates The new value for profileDates
   * @param secondaryMembershipNumber The new value for secondaryMembershipNumber
   * @param sourceSystemMemberIdentifier The new value for sourceSystemMemberIdentifier
   */
  public MedicareAndRetirementHouseholdProfile(java.lang.Integer associationIdentifier, java.lang.CharSequence creationDate, java.lang.CharSequence eligibilitySystemIdentifier, java.lang.CharSequence migratedMemberAppRecDate, java.lang.CharSequence migratedMemberAppSourceIdentifier, java.lang.CharSequence migratedMemberIndicator, java.lang.Integer membershipNumber, com.uhc.schema.model.eligibility.common.DescriptionType membershipNumberSystem, java.lang.CharSequence originalEffectiveDate, com.uhc.schema.model.eligibility.common.DateRangeType profileDates, java.lang.CharSequence secondaryMembershipNumber, java.lang.CharSequence sourceSystemMemberIdentifier) {
    this.associationIdentifier = associationIdentifier;
    this.creationDate = creationDate;
    this.eligibilitySystemIdentifier = eligibilitySystemIdentifier;
    this.migratedMemberAppRecDate = migratedMemberAppRecDate;
    this.migratedMemberAppSourceIdentifier = migratedMemberAppSourceIdentifier;
    this.migratedMemberIndicator = migratedMemberIndicator;
    this.membershipNumber = membershipNumber;
    this.membershipNumberSystem = membershipNumberSystem;
    this.originalEffectiveDate = originalEffectiveDate;
    this.profileDates = profileDates;
    this.secondaryMembershipNumber = secondaryMembershipNumber;
    this.sourceSystemMemberIdentifier = sourceSystemMemberIdentifier;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return associationIdentifier;
    case 1: return creationDate;
    case 2: return eligibilitySystemIdentifier;
    case 3: return migratedMemberAppRecDate;
    case 4: return migratedMemberAppSourceIdentifier;
    case 5: return migratedMemberIndicator;
    case 6: return membershipNumber;
    case 7: return membershipNumberSystem;
    case 8: return originalEffectiveDate;
    case 9: return profileDates;
    case 10: return secondaryMembershipNumber;
    case 11: return sourceSystemMemberIdentifier;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: associationIdentifier = (java.lang.Integer)value$; break;
    case 1: creationDate = (java.lang.CharSequence)value$; break;
    case 2: eligibilitySystemIdentifier = (java.lang.CharSequence)value$; break;
    case 3: migratedMemberAppRecDate = (java.lang.CharSequence)value$; break;
    case 4: migratedMemberAppSourceIdentifier = (java.lang.CharSequence)value$; break;
    case 5: migratedMemberIndicator = (java.lang.CharSequence)value$; break;
    case 6: membershipNumber = (java.lang.Integer)value$; break;
    case 7: membershipNumberSystem = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 8: originalEffectiveDate = (java.lang.CharSequence)value$; break;
    case 9: profileDates = (com.uhc.schema.model.eligibility.common.DateRangeType)value$; break;
    case 10: secondaryMembershipNumber = (java.lang.CharSequence)value$; break;
    case 11: sourceSystemMemberIdentifier = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'associationIdentifier' field.
   * @return The value of the 'associationIdentifier' field.
   */
  public java.lang.Integer getAssociationIdentifier() {
    return associationIdentifier;
  }

  /**
   * Sets the value of the 'associationIdentifier' field.
   * @param value the value to set.
   */
  public void setAssociationIdentifier(java.lang.Integer value) {
    this.associationIdentifier = value;
  }

  /**
   * Gets the value of the 'creationDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getCreationDate() {
    return creationDate;
  }

  /**
   * Sets the value of the 'creationDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setCreationDate(java.lang.CharSequence value) {
    this.creationDate = value;
  }

  /**
   * Gets the value of the 'eligibilitySystemIdentifier' field.
   * @return The value of the 'eligibilitySystemIdentifier' field.
   */
  public java.lang.CharSequence getEligibilitySystemIdentifier() {
    return eligibilitySystemIdentifier;
  }

  /**
   * Sets the value of the 'eligibilitySystemIdentifier' field.
   * @param value the value to set.
   */
  public void setEligibilitySystemIdentifier(java.lang.CharSequence value) {
    this.eligibilitySystemIdentifier = value;
  }

  /**
   * Gets the value of the 'migratedMemberAppRecDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getMigratedMemberAppRecDate() {
    return migratedMemberAppRecDate;
  }

  /**
   * Sets the value of the 'migratedMemberAppRecDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setMigratedMemberAppRecDate(java.lang.CharSequence value) {
    this.migratedMemberAppRecDate = value;
  }

  /**
   * Gets the value of the 'migratedMemberAppSourceIdentifier' field.
   * @return The value of the 'migratedMemberAppSourceIdentifier' field.
   */
  public java.lang.CharSequence getMigratedMemberAppSourceIdentifier() {
    return migratedMemberAppSourceIdentifier;
  }

  /**
   * Sets the value of the 'migratedMemberAppSourceIdentifier' field.
   * @param value the value to set.
   */
  public void setMigratedMemberAppSourceIdentifier(java.lang.CharSequence value) {
    this.migratedMemberAppSourceIdentifier = value;
  }

  /**
   * Gets the value of the 'migratedMemberIndicator' field.
   * @return The value of the 'migratedMemberIndicator' field.
   */
  public java.lang.CharSequence getMigratedMemberIndicator() {
    return migratedMemberIndicator;
  }

  /**
   * Sets the value of the 'migratedMemberIndicator' field.
   * @param value the value to set.
   */
  public void setMigratedMemberIndicator(java.lang.CharSequence value) {
    this.migratedMemberIndicator = value;
  }

  /**
   * Gets the value of the 'membershipNumber' field.
   * @return The value of the 'membershipNumber' field.
   */
  public java.lang.Integer getMembershipNumber() {
    return membershipNumber;
  }

  /**
   * Sets the value of the 'membershipNumber' field.
   * @param value the value to set.
   */
  public void setMembershipNumber(java.lang.Integer value) {
    this.membershipNumber = value;
  }

  /**
   * Gets the value of the 'membershipNumberSystem' field.
   * @return The value of the 'membershipNumberSystem' field.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getMembershipNumberSystem() {
    return membershipNumberSystem;
  }

  /**
   * Sets the value of the 'membershipNumberSystem' field.
   * @param value the value to set.
   */
  public void setMembershipNumberSystem(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.membershipNumberSystem = value;
  }

  /**
   * Gets the value of the 'originalEffectiveDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getOriginalEffectiveDate() {
    return originalEffectiveDate;
  }

  /**
   * Sets the value of the 'originalEffectiveDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setOriginalEffectiveDate(java.lang.CharSequence value) {
    this.originalEffectiveDate = value;
  }

  /**
   * Gets the value of the 'profileDates' field.
   * @return The value of the 'profileDates' field.
   */
  public com.uhc.schema.model.eligibility.common.DateRangeType getProfileDates() {
    return profileDates;
  }

  /**
   * Sets the value of the 'profileDates' field.
   * @param value the value to set.
   */
  public void setProfileDates(com.uhc.schema.model.eligibility.common.DateRangeType value) {
    this.profileDates = value;
  }

  /**
   * Gets the value of the 'secondaryMembershipNumber' field.
   * @return The value of the 'secondaryMembershipNumber' field.
   */
  public java.lang.CharSequence getSecondaryMembershipNumber() {
    return secondaryMembershipNumber;
  }

  /**
   * Sets the value of the 'secondaryMembershipNumber' field.
   * @param value the value to set.
   */
  public void setSecondaryMembershipNumber(java.lang.CharSequence value) {
    this.secondaryMembershipNumber = value;
  }

  /**
   * Gets the value of the 'sourceSystemMemberIdentifier' field.
   * @return The value of the 'sourceSystemMemberIdentifier' field.
   */
  public java.lang.CharSequence getSourceSystemMemberIdentifier() {
    return sourceSystemMemberIdentifier;
  }

  /**
   * Sets the value of the 'sourceSystemMemberIdentifier' field.
   * @param value the value to set.
   */
  public void setSourceSystemMemberIdentifier(java.lang.CharSequence value) {
    this.sourceSystemMemberIdentifier = value;
  }

  /**
   * Creates a new MedicareAndRetirementHouseholdProfile RecordBuilder.
   * @return A new MedicareAndRetirementHouseholdProfile RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder();
  }

  /**
   * Creates a new MedicareAndRetirementHouseholdProfile RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MedicareAndRetirementHouseholdProfile RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder newBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder other) {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder(other);
  }

  /**
   * Creates a new MedicareAndRetirementHouseholdProfile RecordBuilder by copying an existing MedicareAndRetirementHouseholdProfile instance.
   * @param other The existing instance to copy.
   * @return A new MedicareAndRetirementHouseholdProfile RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder newBuilder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile other) {
    return new com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder(other);
  }

  /**
   * RecordBuilder for MedicareAndRetirementHouseholdProfile instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MedicareAndRetirementHouseholdProfile>
    implements org.apache.avro.data.RecordBuilder<MedicareAndRetirementHouseholdProfile> {

    private java.lang.Integer associationIdentifier;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence creationDate;
    private java.lang.CharSequence eligibilitySystemIdentifier;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence migratedMemberAppRecDate;
    private java.lang.CharSequence migratedMemberAppSourceIdentifier;
    private java.lang.CharSequence migratedMemberIndicator;
    private java.lang.Integer membershipNumber;
    private com.uhc.schema.model.eligibility.common.DescriptionType membershipNumberSystem;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder membershipNumberSystemBuilder;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence originalEffectiveDate;
    private com.uhc.schema.model.eligibility.common.DateRangeType profileDates;
    private com.uhc.schema.model.eligibility.common.DateRangeType.Builder profileDatesBuilder;
    private java.lang.CharSequence secondaryMembershipNumber;
    private java.lang.CharSequence sourceSystemMemberIdentifier;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.associationIdentifier)) {
        this.associationIdentifier = data().deepCopy(fields()[0].schema(), other.associationIdentifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[1].schema(), other.creationDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eligibilitySystemIdentifier)) {
        this.eligibilitySystemIdentifier = data().deepCopy(fields()[2].schema(), other.eligibilitySystemIdentifier);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.migratedMemberAppRecDate)) {
        this.migratedMemberAppRecDate = data().deepCopy(fields()[3].schema(), other.migratedMemberAppRecDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.migratedMemberAppSourceIdentifier)) {
        this.migratedMemberAppSourceIdentifier = data().deepCopy(fields()[4].schema(), other.migratedMemberAppSourceIdentifier);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.migratedMemberIndicator)) {
        this.migratedMemberIndicator = data().deepCopy(fields()[5].schema(), other.migratedMemberIndicator);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.membershipNumber)) {
        this.membershipNumber = data().deepCopy(fields()[6].schema(), other.membershipNumber);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.membershipNumberSystem)) {
        this.membershipNumberSystem = data().deepCopy(fields()[7].schema(), other.membershipNumberSystem);
        fieldSetFlags()[7] = true;
      }
      if (other.hasMembershipNumberSystemBuilder()) {
        this.membershipNumberSystemBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getMembershipNumberSystemBuilder());
      }
      if (isValidValue(fields()[8], other.originalEffectiveDate)) {
        this.originalEffectiveDate = data().deepCopy(fields()[8].schema(), other.originalEffectiveDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.profileDates)) {
        this.profileDates = data().deepCopy(fields()[9].schema(), other.profileDates);
        fieldSetFlags()[9] = true;
      }
      if (other.hasProfileDatesBuilder()) {
        this.profileDatesBuilder = com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder(other.getProfileDatesBuilder());
      }
      if (isValidValue(fields()[10], other.secondaryMembershipNumber)) {
        this.secondaryMembershipNumber = data().deepCopy(fields()[10].schema(), other.secondaryMembershipNumber);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.sourceSystemMemberIdentifier)) {
        this.sourceSystemMemberIdentifier = data().deepCopy(fields()[11].schema(), other.sourceSystemMemberIdentifier);
        fieldSetFlags()[11] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MedicareAndRetirementHouseholdProfile instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.associationIdentifier)) {
        this.associationIdentifier = data().deepCopy(fields()[0].schema(), other.associationIdentifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[1].schema(), other.creationDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eligibilitySystemIdentifier)) {
        this.eligibilitySystemIdentifier = data().deepCopy(fields()[2].schema(), other.eligibilitySystemIdentifier);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.migratedMemberAppRecDate)) {
        this.migratedMemberAppRecDate = data().deepCopy(fields()[3].schema(), other.migratedMemberAppRecDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.migratedMemberAppSourceIdentifier)) {
        this.migratedMemberAppSourceIdentifier = data().deepCopy(fields()[4].schema(), other.migratedMemberAppSourceIdentifier);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.migratedMemberIndicator)) {
        this.migratedMemberIndicator = data().deepCopy(fields()[5].schema(), other.migratedMemberIndicator);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.membershipNumber)) {
        this.membershipNumber = data().deepCopy(fields()[6].schema(), other.membershipNumber);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.membershipNumberSystem)) {
        this.membershipNumberSystem = data().deepCopy(fields()[7].schema(), other.membershipNumberSystem);
        fieldSetFlags()[7] = true;
      }
      this.membershipNumberSystemBuilder = null;
      if (isValidValue(fields()[8], other.originalEffectiveDate)) {
        this.originalEffectiveDate = data().deepCopy(fields()[8].schema(), other.originalEffectiveDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.profileDates)) {
        this.profileDates = data().deepCopy(fields()[9].schema(), other.profileDates);
        fieldSetFlags()[9] = true;
      }
      this.profileDatesBuilder = null;
      if (isValidValue(fields()[10], other.secondaryMembershipNumber)) {
        this.secondaryMembershipNumber = data().deepCopy(fields()[10].schema(), other.secondaryMembershipNumber);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.sourceSystemMemberIdentifier)) {
        this.sourceSystemMemberIdentifier = data().deepCopy(fields()[11].schema(), other.sourceSystemMemberIdentifier);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'associationIdentifier' field.
      * @return The value.
      */
    public java.lang.Integer getAssociationIdentifier() {
      return associationIdentifier;
    }

    /**
      * Sets the value of the 'associationIdentifier' field.
      * @param value The value of 'associationIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setAssociationIdentifier(java.lang.Integer value) {
      validate(fields()[0], value);
      this.associationIdentifier = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'associationIdentifier' field has been set.
      * @return True if the 'associationIdentifier' field has been set, false otherwise.
      */
    public boolean hasAssociationIdentifier() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'associationIdentifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearAssociationIdentifier() {
      associationIdentifier = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'creationDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getCreationDate() {
      return creationDate;
    }

    /**
      * Sets the value of the 'creationDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'creationDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setCreationDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.creationDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'creationDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'creationDate' field has been set, false otherwise.
      */
    public boolean hasCreationDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'creationDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearCreationDate() {
      creationDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'eligibilitySystemIdentifier' field.
      * @return The value.
      */
    public java.lang.CharSequence getEligibilitySystemIdentifier() {
      return eligibilitySystemIdentifier;
    }

    /**
      * Sets the value of the 'eligibilitySystemIdentifier' field.
      * @param value The value of 'eligibilitySystemIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setEligibilitySystemIdentifier(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.eligibilitySystemIdentifier = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'eligibilitySystemIdentifier' field has been set.
      * @return True if the 'eligibilitySystemIdentifier' field has been set, false otherwise.
      */
    public boolean hasEligibilitySystemIdentifier() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'eligibilitySystemIdentifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearEligibilitySystemIdentifier() {
      eligibilitySystemIdentifier = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'migratedMemberAppRecDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getMigratedMemberAppRecDate() {
      return migratedMemberAppRecDate;
    }

    /**
      * Sets the value of the 'migratedMemberAppRecDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'migratedMemberAppRecDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setMigratedMemberAppRecDate(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.migratedMemberAppRecDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'migratedMemberAppRecDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'migratedMemberAppRecDate' field has been set, false otherwise.
      */
    public boolean hasMigratedMemberAppRecDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'migratedMemberAppRecDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearMigratedMemberAppRecDate() {
      migratedMemberAppRecDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'migratedMemberAppSourceIdentifier' field.
      * @return The value.
      */
    public java.lang.CharSequence getMigratedMemberAppSourceIdentifier() {
      return migratedMemberAppSourceIdentifier;
    }

    /**
      * Sets the value of the 'migratedMemberAppSourceIdentifier' field.
      * @param value The value of 'migratedMemberAppSourceIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setMigratedMemberAppSourceIdentifier(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.migratedMemberAppSourceIdentifier = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'migratedMemberAppSourceIdentifier' field has been set.
      * @return True if the 'migratedMemberAppSourceIdentifier' field has been set, false otherwise.
      */
    public boolean hasMigratedMemberAppSourceIdentifier() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'migratedMemberAppSourceIdentifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearMigratedMemberAppSourceIdentifier() {
      migratedMemberAppSourceIdentifier = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'migratedMemberIndicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getMigratedMemberIndicator() {
      return migratedMemberIndicator;
    }

    /**
      * Sets the value of the 'migratedMemberIndicator' field.
      * @param value The value of 'migratedMemberIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setMigratedMemberIndicator(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.migratedMemberIndicator = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'migratedMemberIndicator' field has been set.
      * @return True if the 'migratedMemberIndicator' field has been set, false otherwise.
      */
    public boolean hasMigratedMemberIndicator() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'migratedMemberIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearMigratedMemberIndicator() {
      migratedMemberIndicator = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'membershipNumber' field.
      * @return The value.
      */
    public java.lang.Integer getMembershipNumber() {
      return membershipNumber;
    }

    /**
      * Sets the value of the 'membershipNumber' field.
      * @param value The value of 'membershipNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setMembershipNumber(java.lang.Integer value) {
      validate(fields()[6], value);
      this.membershipNumber = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'membershipNumber' field has been set.
      * @return True if the 'membershipNumber' field has been set, false otherwise.
      */
    public boolean hasMembershipNumber() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'membershipNumber' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearMembershipNumber() {
      membershipNumber = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'membershipNumberSystem' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getMembershipNumberSystem() {
      return membershipNumberSystem;
    }

    /**
      * Sets the value of the 'membershipNumberSystem' field.
      * @param value The value of 'membershipNumberSystem'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setMembershipNumberSystem(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[7], value);
      this.membershipNumberSystemBuilder = null;
      this.membershipNumberSystem = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'membershipNumberSystem' field has been set.
      * @return True if the 'membershipNumberSystem' field has been set, false otherwise.
      */
    public boolean hasMembershipNumberSystem() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'membershipNumberSystem' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getMembershipNumberSystemBuilder() {
      if (membershipNumberSystemBuilder == null) {
        if (hasMembershipNumberSystem()) {
          setMembershipNumberSystemBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(membershipNumberSystem));
        } else {
          setMembershipNumberSystemBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return membershipNumberSystemBuilder;
    }

    /**
     * Sets the Builder instance for the 'membershipNumberSystem' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setMembershipNumberSystemBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearMembershipNumberSystem();
      membershipNumberSystemBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'membershipNumberSystem' field has an active Builder instance
     * @return True if the 'membershipNumberSystem' field has an active Builder instance
     */
    public boolean hasMembershipNumberSystemBuilder() {
      return membershipNumberSystemBuilder != null;
    }

    /**
      * Clears the value of the 'membershipNumberSystem' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearMembershipNumberSystem() {
      membershipNumberSystem = null;
      membershipNumberSystemBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'originalEffectiveDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getOriginalEffectiveDate() {
      return originalEffectiveDate;
    }

    /**
      * Sets the value of the 'originalEffectiveDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'originalEffectiveDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setOriginalEffectiveDate(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.originalEffectiveDate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'originalEffectiveDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'originalEffectiveDate' field has been set, false otherwise.
      */
    public boolean hasOriginalEffectiveDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'originalEffectiveDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearOriginalEffectiveDate() {
      originalEffectiveDate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'profileDates' field.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DateRangeType getProfileDates() {
      return profileDates;
    }

    /**
      * Sets the value of the 'profileDates' field.
      * @param value The value of 'profileDates'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setProfileDates(com.uhc.schema.model.eligibility.common.DateRangeType value) {
      validate(fields()[9], value);
      this.profileDatesBuilder = null;
      this.profileDates = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'profileDates' field has been set.
      * @return True if the 'profileDates' field has been set, false otherwise.
      */
    public boolean hasProfileDates() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'profileDates' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DateRangeType.Builder getProfileDatesBuilder() {
      if (profileDatesBuilder == null) {
        if (hasProfileDates()) {
          setProfileDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder(profileDates));
        } else {
          setProfileDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder());
        }
      }
      return profileDatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'profileDates' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setProfileDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.Builder value) {
      clearProfileDates();
      profileDatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'profileDates' field has an active Builder instance
     * @return True if the 'profileDates' field has an active Builder instance
     */
    public boolean hasProfileDatesBuilder() {
      return profileDatesBuilder != null;
    }

    /**
      * Clears the value of the 'profileDates' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearProfileDates() {
      profileDates = null;
      profileDatesBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'secondaryMembershipNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getSecondaryMembershipNumber() {
      return secondaryMembershipNumber;
    }

    /**
      * Sets the value of the 'secondaryMembershipNumber' field.
      * @param value The value of 'secondaryMembershipNumber'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setSecondaryMembershipNumber(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.secondaryMembershipNumber = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'secondaryMembershipNumber' field has been set.
      * @return True if the 'secondaryMembershipNumber' field has been set, false otherwise.
      */
    public boolean hasSecondaryMembershipNumber() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'secondaryMembershipNumber' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearSecondaryMembershipNumber() {
      secondaryMembershipNumber = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceSystemMemberIdentifier' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceSystemMemberIdentifier() {
      return sourceSystemMemberIdentifier;
    }

    /**
      * Sets the value of the 'sourceSystemMemberIdentifier' field.
      * @param value The value of 'sourceSystemMemberIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder setSourceSystemMemberIdentifier(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.sourceSystemMemberIdentifier = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceSystemMemberIdentifier' field has been set.
      * @return True if the 'sourceSystemMemberIdentifier' field has been set, false otherwise.
      */
    public boolean hasSourceSystemMemberIdentifier() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'sourceSystemMemberIdentifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.medicareandretirement.MedicareAndRetirementHouseholdProfile.Builder clearSourceSystemMemberIdentifier() {
      sourceSystemMemberIdentifier = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MedicareAndRetirementHouseholdProfile build() {
      try {
        MedicareAndRetirementHouseholdProfile record = new MedicareAndRetirementHouseholdProfile();
        record.associationIdentifier = fieldSetFlags()[0] ? this.associationIdentifier : (java.lang.Integer) defaultValue(fields()[0]);
        record.creationDate = fieldSetFlags()[1] ? this.creationDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.eligibilitySystemIdentifier = fieldSetFlags()[2] ? this.eligibilitySystemIdentifier : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.migratedMemberAppRecDate = fieldSetFlags()[3] ? this.migratedMemberAppRecDate : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.migratedMemberAppSourceIdentifier = fieldSetFlags()[4] ? this.migratedMemberAppSourceIdentifier : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.migratedMemberIndicator = fieldSetFlags()[5] ? this.migratedMemberIndicator : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.membershipNumber = fieldSetFlags()[6] ? this.membershipNumber : (java.lang.Integer) defaultValue(fields()[6]);
        if (membershipNumberSystemBuilder != null) {
          record.membershipNumberSystem = this.membershipNumberSystemBuilder.build();
        } else {
          record.membershipNumberSystem = fieldSetFlags()[7] ? this.membershipNumberSystem : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[7]);
        }
        record.originalEffectiveDate = fieldSetFlags()[8] ? this.originalEffectiveDate : (java.lang.CharSequence) defaultValue(fields()[8]);
        if (profileDatesBuilder != null) {
          record.profileDates = this.profileDatesBuilder.build();
        } else {
          record.profileDates = fieldSetFlags()[9] ? this.profileDates : (com.uhc.schema.model.eligibility.common.DateRangeType) defaultValue(fields()[9]);
        }
        record.secondaryMembershipNumber = fieldSetFlags()[10] ? this.secondaryMembershipNumber : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.sourceSystemMemberIdentifier = fieldSetFlags()[11] ? this.sourceSystemMemberIdentifier : (java.lang.CharSequence) defaultValue(fields()[11]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MedicareAndRetirementHouseholdProfile>
    WRITER$ = (org.apache.avro.io.DatumWriter<MedicareAndRetirementHouseholdProfile>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MedicareAndRetirementHouseholdProfile>
    READER$ = (org.apache.avro.io.DatumReader<MedicareAndRetirementHouseholdProfile>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
