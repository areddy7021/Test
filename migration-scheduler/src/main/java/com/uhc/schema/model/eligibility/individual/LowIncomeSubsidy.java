/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.individual;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LowIncomeSubsidy extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -199959351911828969L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LowIncomeSubsidy\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"baeIndicator\",\"type\":\"boolean\",\"doc\":\"Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence.\",\"default\":false},{\"name\":\"premiumSubsidyPercentage\",\"type\":[\"null\",\"int\"],\"doc\":\"Indicates the subsidy percent to come off the premium amount.\",\"default\":null},{\"name\":\"subsidyCopayCategory\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"doc\":\"Indicates the low-income subsidy copay category.\",\"default\":null},{\"name\":\"subsidyEffectiveDates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DateRangeType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"startDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null}]}],\"doc\":\"Effective dates for the low-income subsidy.\",\"default\":null},{\"name\":\"subsidySource\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"The source code and description for the subsidy information.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LowIncomeSubsidy> ENCODER =
      new BinaryMessageEncoder<LowIncomeSubsidy>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LowIncomeSubsidy> DECODER =
      new BinaryMessageDecoder<LowIncomeSubsidy>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<LowIncomeSubsidy> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<LowIncomeSubsidy> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LowIncomeSubsidy>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this LowIncomeSubsidy to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a LowIncomeSubsidy from a ByteBuffer. */
  public static LowIncomeSubsidy fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence. */
  @Deprecated public boolean baeIndicator;
  /** Indicates the subsidy percent to come off the premium amount. */
  @Deprecated public java.lang.Integer premiumSubsidyPercentage;
  /** Indicates the low-income subsidy copay category. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType subsidyCopayCategory;
  /** Effective dates for the low-income subsidy. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DateRangeType subsidyEffectiveDates;
  /** The source code and description for the subsidy information. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType subsidySource;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LowIncomeSubsidy() {}

  /**
   * All-args constructor.
   * @param baeIndicator Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence.
   * @param premiumSubsidyPercentage Indicates the subsidy percent to come off the premium amount.
   * @param subsidyCopayCategory Indicates the low-income subsidy copay category.
   * @param subsidyEffectiveDates Effective dates for the low-income subsidy.
   * @param subsidySource The source code and description for the subsidy information.
   */
  public LowIncomeSubsidy(java.lang.Boolean baeIndicator, java.lang.Integer premiumSubsidyPercentage, com.uhc.schema.model.eligibility.common.DescriptionType subsidyCopayCategory, com.uhc.schema.model.eligibility.common.DateRangeType subsidyEffectiveDates, com.uhc.schema.model.eligibility.common.DescriptionType subsidySource) {
    this.baeIndicator = baeIndicator;
    this.premiumSubsidyPercentage = premiumSubsidyPercentage;
    this.subsidyCopayCategory = subsidyCopayCategory;
    this.subsidyEffectiveDates = subsidyEffectiveDates;
    this.subsidySource = subsidySource;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return baeIndicator;
    case 1: return premiumSubsidyPercentage;
    case 2: return subsidyCopayCategory;
    case 3: return subsidyEffectiveDates;
    case 4: return subsidySource;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: baeIndicator = (java.lang.Boolean)value$; break;
    case 1: premiumSubsidyPercentage = (java.lang.Integer)value$; break;
    case 2: subsidyCopayCategory = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 3: subsidyEffectiveDates = (com.uhc.schema.model.eligibility.common.DateRangeType)value$; break;
    case 4: subsidySource = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'baeIndicator' field.
   * @return Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence.
   */
  public java.lang.Boolean getBaeIndicator() {
    return baeIndicator;
  }

  /**
   * Sets the value of the 'baeIndicator' field.
   * Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence.
   * @param value the value to set.
   */
  public void setBaeIndicator(java.lang.Boolean value) {
    this.baeIndicator = value;
  }

  /**
   * Gets the value of the 'premiumSubsidyPercentage' field.
   * @return Indicates the subsidy percent to come off the premium amount.
   */
  public java.lang.Integer getPremiumSubsidyPercentage() {
    return premiumSubsidyPercentage;
  }

  /**
   * Sets the value of the 'premiumSubsidyPercentage' field.
   * Indicates the subsidy percent to come off the premium amount.
   * @param value the value to set.
   */
  public void setPremiumSubsidyPercentage(java.lang.Integer value) {
    this.premiumSubsidyPercentage = value;
  }

  /**
   * Gets the value of the 'subsidyCopayCategory' field.
   * @return Indicates the low-income subsidy copay category.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getSubsidyCopayCategory() {
    return subsidyCopayCategory;
  }

  /**
   * Sets the value of the 'subsidyCopayCategory' field.
   * Indicates the low-income subsidy copay category.
   * @param value the value to set.
   */
  public void setSubsidyCopayCategory(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.subsidyCopayCategory = value;
  }

  /**
   * Gets the value of the 'subsidyEffectiveDates' field.
   * @return Effective dates for the low-income subsidy.
   */
  public com.uhc.schema.model.eligibility.common.DateRangeType getSubsidyEffectiveDates() {
    return subsidyEffectiveDates;
  }

  /**
   * Sets the value of the 'subsidyEffectiveDates' field.
   * Effective dates for the low-income subsidy.
   * @param value the value to set.
   */
  public void setSubsidyEffectiveDates(com.uhc.schema.model.eligibility.common.DateRangeType value) {
    this.subsidyEffectiveDates = value;
  }

  /**
   * Gets the value of the 'subsidySource' field.
   * @return The source code and description for the subsidy information.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getSubsidySource() {
    return subsidySource;
  }

  /**
   * Sets the value of the 'subsidySource' field.
   * The source code and description for the subsidy information.
   * @param value the value to set.
   */
  public void setSubsidySource(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.subsidySource = value;
  }

  /**
   * Creates a new LowIncomeSubsidy RecordBuilder.
   * @return A new LowIncomeSubsidy RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder();
  }

  /**
   * Creates a new LowIncomeSubsidy RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LowIncomeSubsidy RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder newBuilder(com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder other) {
    return new com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder(other);
  }

  /**
   * Creates a new LowIncomeSubsidy RecordBuilder by copying an existing LowIncomeSubsidy instance.
   * @param other The existing instance to copy.
   * @return A new LowIncomeSubsidy RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder newBuilder(com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy other) {
    return new com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder(other);
  }

  /**
   * RecordBuilder for LowIncomeSubsidy instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LowIncomeSubsidy>
    implements org.apache.avro.data.RecordBuilder<LowIncomeSubsidy> {

    /** Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence. */
    private boolean baeIndicator;
    /** Indicates the subsidy percent to come off the premium amount. */
    private java.lang.Integer premiumSubsidyPercentage;
    /** Indicates the low-income subsidy copay category. */
    private com.uhc.schema.model.eligibility.common.DescriptionType subsidyCopayCategory;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder subsidyCopayCategoryBuilder;
    /** Effective dates for the low-income subsidy. */
    private com.uhc.schema.model.eligibility.common.DateRangeType subsidyEffectiveDates;
    private com.uhc.schema.model.eligibility.common.DateRangeType.Builder subsidyEffectiveDatesBuilder;
    /** The source code and description for the subsidy information. */
    private com.uhc.schema.model.eligibility.common.DescriptionType subsidySource;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder subsidySourceBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.baeIndicator)) {
        this.baeIndicator = data().deepCopy(fields()[0].schema(), other.baeIndicator);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.premiumSubsidyPercentage)) {
        this.premiumSubsidyPercentage = data().deepCopy(fields()[1].schema(), other.premiumSubsidyPercentage);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.subsidyCopayCategory)) {
        this.subsidyCopayCategory = data().deepCopy(fields()[2].schema(), other.subsidyCopayCategory);
        fieldSetFlags()[2] = true;
      }
      if (other.hasSubsidyCopayCategoryBuilder()) {
        this.subsidyCopayCategoryBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getSubsidyCopayCategoryBuilder());
      }
      if (isValidValue(fields()[3], other.subsidyEffectiveDates)) {
        this.subsidyEffectiveDates = data().deepCopy(fields()[3].schema(), other.subsidyEffectiveDates);
        fieldSetFlags()[3] = true;
      }
      if (other.hasSubsidyEffectiveDatesBuilder()) {
        this.subsidyEffectiveDatesBuilder = com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder(other.getSubsidyEffectiveDatesBuilder());
      }
      if (isValidValue(fields()[4], other.subsidySource)) {
        this.subsidySource = data().deepCopy(fields()[4].schema(), other.subsidySource);
        fieldSetFlags()[4] = true;
      }
      if (other.hasSubsidySourceBuilder()) {
        this.subsidySourceBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getSubsidySourceBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing LowIncomeSubsidy instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.baeIndicator)) {
        this.baeIndicator = data().deepCopy(fields()[0].schema(), other.baeIndicator);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.premiumSubsidyPercentage)) {
        this.premiumSubsidyPercentage = data().deepCopy(fields()[1].schema(), other.premiumSubsidyPercentage);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.subsidyCopayCategory)) {
        this.subsidyCopayCategory = data().deepCopy(fields()[2].schema(), other.subsidyCopayCategory);
        fieldSetFlags()[2] = true;
      }
      this.subsidyCopayCategoryBuilder = null;
      if (isValidValue(fields()[3], other.subsidyEffectiveDates)) {
        this.subsidyEffectiveDates = data().deepCopy(fields()[3].schema(), other.subsidyEffectiveDates);
        fieldSetFlags()[3] = true;
      }
      this.subsidyEffectiveDatesBuilder = null;
      if (isValidValue(fields()[4], other.subsidySource)) {
        this.subsidySource = data().deepCopy(fields()[4].schema(), other.subsidySource);
        fieldSetFlags()[4] = true;
      }
      this.subsidySourceBuilder = null;
    }

    /**
      * Gets the value of the 'baeIndicator' field.
      * Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence.
      * @return The value.
      */
    public java.lang.Boolean getBaeIndicator() {
      return baeIndicator;
    }

    /**
      * Sets the value of the 'baeIndicator' field.
      * Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence.
      * @param value The value of 'baeIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder setBaeIndicator(boolean value) {
      validate(fields()[0], value);
      this.baeIndicator = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'baeIndicator' field has been set.
      * Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence.
      * @return True if the 'baeIndicator' field has been set, false otherwise.
      */
    public boolean hasBaeIndicator() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'baeIndicator' field.
      * Indicates whether the subsidy is based on the CMS policy definition of Best Available Evidence.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder clearBaeIndicator() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'premiumSubsidyPercentage' field.
      * Indicates the subsidy percent to come off the premium amount.
      * @return The value.
      */
    public java.lang.Integer getPremiumSubsidyPercentage() {
      return premiumSubsidyPercentage;
    }

    /**
      * Sets the value of the 'premiumSubsidyPercentage' field.
      * Indicates the subsidy percent to come off the premium amount.
      * @param value The value of 'premiumSubsidyPercentage'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder setPremiumSubsidyPercentage(java.lang.Integer value) {
      validate(fields()[1], value);
      this.premiumSubsidyPercentage = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'premiumSubsidyPercentage' field has been set.
      * Indicates the subsidy percent to come off the premium amount.
      * @return True if the 'premiumSubsidyPercentage' field has been set, false otherwise.
      */
    public boolean hasPremiumSubsidyPercentage() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'premiumSubsidyPercentage' field.
      * Indicates the subsidy percent to come off the premium amount.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder clearPremiumSubsidyPercentage() {
      premiumSubsidyPercentage = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'subsidyCopayCategory' field.
      * Indicates the low-income subsidy copay category.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getSubsidyCopayCategory() {
      return subsidyCopayCategory;
    }

    /**
      * Sets the value of the 'subsidyCopayCategory' field.
      * Indicates the low-income subsidy copay category.
      * @param value The value of 'subsidyCopayCategory'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder setSubsidyCopayCategory(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[2], value);
      this.subsidyCopayCategoryBuilder = null;
      this.subsidyCopayCategory = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'subsidyCopayCategory' field has been set.
      * Indicates the low-income subsidy copay category.
      * @return True if the 'subsidyCopayCategory' field has been set, false otherwise.
      */
    public boolean hasSubsidyCopayCategory() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'subsidyCopayCategory' field and creates one if it doesn't exist yet.
     * Indicates the low-income subsidy copay category.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getSubsidyCopayCategoryBuilder() {
      if (subsidyCopayCategoryBuilder == null) {
        if (hasSubsidyCopayCategory()) {
          setSubsidyCopayCategoryBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(subsidyCopayCategory));
        } else {
          setSubsidyCopayCategoryBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return subsidyCopayCategoryBuilder;
    }

    /**
     * Sets the Builder instance for the 'subsidyCopayCategory' field
     * Indicates the low-income subsidy copay category.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder setSubsidyCopayCategoryBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearSubsidyCopayCategory();
      subsidyCopayCategoryBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subsidyCopayCategory' field has an active Builder instance
     * Indicates the low-income subsidy copay category.
     * @return True if the 'subsidyCopayCategory' field has an active Builder instance
     */
    public boolean hasSubsidyCopayCategoryBuilder() {
      return subsidyCopayCategoryBuilder != null;
    }

    /**
      * Clears the value of the 'subsidyCopayCategory' field.
      * Indicates the low-income subsidy copay category.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder clearSubsidyCopayCategory() {
      subsidyCopayCategory = null;
      subsidyCopayCategoryBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'subsidyEffectiveDates' field.
      * Effective dates for the low-income subsidy.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DateRangeType getSubsidyEffectiveDates() {
      return subsidyEffectiveDates;
    }

    /**
      * Sets the value of the 'subsidyEffectiveDates' field.
      * Effective dates for the low-income subsidy.
      * @param value The value of 'subsidyEffectiveDates'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder setSubsidyEffectiveDates(com.uhc.schema.model.eligibility.common.DateRangeType value) {
      validate(fields()[3], value);
      this.subsidyEffectiveDatesBuilder = null;
      this.subsidyEffectiveDates = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'subsidyEffectiveDates' field has been set.
      * Effective dates for the low-income subsidy.
      * @return True if the 'subsidyEffectiveDates' field has been set, false otherwise.
      */
    public boolean hasSubsidyEffectiveDates() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'subsidyEffectiveDates' field and creates one if it doesn't exist yet.
     * Effective dates for the low-income subsidy.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DateRangeType.Builder getSubsidyEffectiveDatesBuilder() {
      if (subsidyEffectiveDatesBuilder == null) {
        if (hasSubsidyEffectiveDates()) {
          setSubsidyEffectiveDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder(subsidyEffectiveDates));
        } else {
          setSubsidyEffectiveDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.newBuilder());
        }
      }
      return subsidyEffectiveDatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'subsidyEffectiveDates' field
     * Effective dates for the low-income subsidy.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder setSubsidyEffectiveDatesBuilder(com.uhc.schema.model.eligibility.common.DateRangeType.Builder value) {
      clearSubsidyEffectiveDates();
      subsidyEffectiveDatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subsidyEffectiveDates' field has an active Builder instance
     * Effective dates for the low-income subsidy.
     * @return True if the 'subsidyEffectiveDates' field has an active Builder instance
     */
    public boolean hasSubsidyEffectiveDatesBuilder() {
      return subsidyEffectiveDatesBuilder != null;
    }

    /**
      * Clears the value of the 'subsidyEffectiveDates' field.
      * Effective dates for the low-income subsidy.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder clearSubsidyEffectiveDates() {
      subsidyEffectiveDates = null;
      subsidyEffectiveDatesBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'subsidySource' field.
      * The source code and description for the subsidy information.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getSubsidySource() {
      return subsidySource;
    }

    /**
      * Sets the value of the 'subsidySource' field.
      * The source code and description for the subsidy information.
      * @param value The value of 'subsidySource'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder setSubsidySource(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[4], value);
      this.subsidySourceBuilder = null;
      this.subsidySource = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'subsidySource' field has been set.
      * The source code and description for the subsidy information.
      * @return True if the 'subsidySource' field has been set, false otherwise.
      */
    public boolean hasSubsidySource() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'subsidySource' field and creates one if it doesn't exist yet.
     * The source code and description for the subsidy information.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getSubsidySourceBuilder() {
      if (subsidySourceBuilder == null) {
        if (hasSubsidySource()) {
          setSubsidySourceBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(subsidySource));
        } else {
          setSubsidySourceBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return subsidySourceBuilder;
    }

    /**
     * Sets the Builder instance for the 'subsidySource' field
     * The source code and description for the subsidy information.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder setSubsidySourceBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearSubsidySource();
      subsidySourceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subsidySource' field has an active Builder instance
     * The source code and description for the subsidy information.
     * @return True if the 'subsidySource' field has an active Builder instance
     */
    public boolean hasSubsidySourceBuilder() {
      return subsidySourceBuilder != null;
    }

    /**
      * Clears the value of the 'subsidySource' field.
      * The source code and description for the subsidy information.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.LowIncomeSubsidy.Builder clearSubsidySource() {
      subsidySource = null;
      subsidySourceBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LowIncomeSubsidy build() {
      try {
        LowIncomeSubsidy record = new LowIncomeSubsidy();
        record.baeIndicator = fieldSetFlags()[0] ? this.baeIndicator : (java.lang.Boolean) defaultValue(fields()[0]);
        record.premiumSubsidyPercentage = fieldSetFlags()[1] ? this.premiumSubsidyPercentage : (java.lang.Integer) defaultValue(fields()[1]);
        if (subsidyCopayCategoryBuilder != null) {
          record.subsidyCopayCategory = this.subsidyCopayCategoryBuilder.build();
        } else {
          record.subsidyCopayCategory = fieldSetFlags()[2] ? this.subsidyCopayCategory : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[2]);
        }
        if (subsidyEffectiveDatesBuilder != null) {
          record.subsidyEffectiveDates = this.subsidyEffectiveDatesBuilder.build();
        } else {
          record.subsidyEffectiveDates = fieldSetFlags()[3] ? this.subsidyEffectiveDates : (com.uhc.schema.model.eligibility.common.DateRangeType) defaultValue(fields()[3]);
        }
        if (subsidySourceBuilder != null) {
          record.subsidySource = this.subsidySourceBuilder.build();
        } else {
          record.subsidySource = fieldSetFlags()[4] ? this.subsidySource : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[4]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LowIncomeSubsidy>
    WRITER$ = (org.apache.avro.io.DatumWriter<LowIncomeSubsidy>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LowIncomeSubsidy>
    READER$ = (org.apache.avro.io.DatumReader<LowIncomeSubsidy>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
