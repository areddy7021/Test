/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.membership;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PlanExternalIdentifier extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8845896165443896731L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PlanExternalIdentifier\",\"namespace\":\"com.uhc.schema.model.eligibility.membership\",\"fields\":[{\"name\":\"externalEntityIdentifer\",\"type\":[\"null\",\"string\"],\"doc\":\"Identifier for the external entity.\",\"default\":null},{\"name\":\"externalPlanIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Identifier for the external plan.\",\"default\":null},{\"name\":\"entityType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"doc\":\"Code and description for the plan entity type.\",\"default\":null}],\"default\":null}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PlanExternalIdentifier> ENCODER =
      new BinaryMessageEncoder<PlanExternalIdentifier>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PlanExternalIdentifier> DECODER =
      new BinaryMessageDecoder<PlanExternalIdentifier>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<PlanExternalIdentifier> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<PlanExternalIdentifier> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PlanExternalIdentifier>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this PlanExternalIdentifier to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a PlanExternalIdentifier from a ByteBuffer. */
  public static PlanExternalIdentifier fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Identifier for the external entity. */
  @Deprecated public java.lang.CharSequence externalEntityIdentifer;
  /** Identifier for the external plan. */
  @Deprecated public java.lang.CharSequence externalPlanIdentifier;
  /** Code and description for the plan entity type. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType entityType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PlanExternalIdentifier() {}

  /**
   * All-args constructor.
   * @param externalEntityIdentifer Identifier for the external entity.
   * @param externalPlanIdentifier Identifier for the external plan.
   * @param entityType Code and description for the plan entity type.
   */
  public PlanExternalIdentifier(java.lang.CharSequence externalEntityIdentifer, java.lang.CharSequence externalPlanIdentifier, com.uhc.schema.model.eligibility.common.DescriptionType entityType) {
    this.externalEntityIdentifer = externalEntityIdentifer;
    this.externalPlanIdentifier = externalPlanIdentifier;
    this.entityType = entityType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return externalEntityIdentifer;
    case 1: return externalPlanIdentifier;
    case 2: return entityType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: externalEntityIdentifer = (java.lang.CharSequence)value$; break;
    case 1: externalPlanIdentifier = (java.lang.CharSequence)value$; break;
    case 2: entityType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'externalEntityIdentifer' field.
   * @return Identifier for the external entity.
   */
  public java.lang.CharSequence getExternalEntityIdentifer() {
    return externalEntityIdentifer;
  }

  /**
   * Sets the value of the 'externalEntityIdentifer' field.
   * Identifier for the external entity.
   * @param value the value to set.
   */
  public void setExternalEntityIdentifer(java.lang.CharSequence value) {
    this.externalEntityIdentifer = value;
  }

  /**
   * Gets the value of the 'externalPlanIdentifier' field.
   * @return Identifier for the external plan.
   */
  public java.lang.CharSequence getExternalPlanIdentifier() {
    return externalPlanIdentifier;
  }

  /**
   * Sets the value of the 'externalPlanIdentifier' field.
   * Identifier for the external plan.
   * @param value the value to set.
   */
  public void setExternalPlanIdentifier(java.lang.CharSequence value) {
    this.externalPlanIdentifier = value;
  }

  /**
   * Gets the value of the 'entityType' field.
   * @return Code and description for the plan entity type.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getEntityType() {
    return entityType;
  }

  /**
   * Sets the value of the 'entityType' field.
   * Code and description for the plan entity type.
   * @param value the value to set.
   */
  public void setEntityType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.entityType = value;
  }

  /**
   * Creates a new PlanExternalIdentifier RecordBuilder.
   * @return A new PlanExternalIdentifier RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder();
  }

  /**
   * Creates a new PlanExternalIdentifier RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PlanExternalIdentifier RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder newBuilder(com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder other) {
    return new com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder(other);
  }

  /**
   * Creates a new PlanExternalIdentifier RecordBuilder by copying an existing PlanExternalIdentifier instance.
   * @param other The existing instance to copy.
   * @return A new PlanExternalIdentifier RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder newBuilder(com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier other) {
    return new com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder(other);
  }

  /**
   * RecordBuilder for PlanExternalIdentifier instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PlanExternalIdentifier>
    implements org.apache.avro.data.RecordBuilder<PlanExternalIdentifier> {

    /** Identifier for the external entity. */
    private java.lang.CharSequence externalEntityIdentifer;
    /** Identifier for the external plan. */
    private java.lang.CharSequence externalPlanIdentifier;
    /** Code and description for the plan entity type. */
    private com.uhc.schema.model.eligibility.common.DescriptionType entityType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder entityTypeBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.externalEntityIdentifer)) {
        this.externalEntityIdentifer = data().deepCopy(fields()[0].schema(), other.externalEntityIdentifer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalPlanIdentifier)) {
        this.externalPlanIdentifier = data().deepCopy(fields()[1].schema(), other.externalPlanIdentifier);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entityType)) {
        this.entityType = data().deepCopy(fields()[2].schema(), other.entityType);
        fieldSetFlags()[2] = true;
      }
      if (other.hasEntityTypeBuilder()) {
        this.entityTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getEntityTypeBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing PlanExternalIdentifier instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.externalEntityIdentifer)) {
        this.externalEntityIdentifer = data().deepCopy(fields()[0].schema(), other.externalEntityIdentifer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalPlanIdentifier)) {
        this.externalPlanIdentifier = data().deepCopy(fields()[1].schema(), other.externalPlanIdentifier);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entityType)) {
        this.entityType = data().deepCopy(fields()[2].schema(), other.entityType);
        fieldSetFlags()[2] = true;
      }
      this.entityTypeBuilder = null;
    }

    /**
      * Gets the value of the 'externalEntityIdentifer' field.
      * Identifier for the external entity.
      * @return The value.
      */
    public java.lang.CharSequence getExternalEntityIdentifer() {
      return externalEntityIdentifer;
    }

    /**
      * Sets the value of the 'externalEntityIdentifer' field.
      * Identifier for the external entity.
      * @param value The value of 'externalEntityIdentifer'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder setExternalEntityIdentifer(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.externalEntityIdentifer = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'externalEntityIdentifer' field has been set.
      * Identifier for the external entity.
      * @return True if the 'externalEntityIdentifer' field has been set, false otherwise.
      */
    public boolean hasExternalEntityIdentifer() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'externalEntityIdentifer' field.
      * Identifier for the external entity.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder clearExternalEntityIdentifer() {
      externalEntityIdentifer = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalPlanIdentifier' field.
      * Identifier for the external plan.
      * @return The value.
      */
    public java.lang.CharSequence getExternalPlanIdentifier() {
      return externalPlanIdentifier;
    }

    /**
      * Sets the value of the 'externalPlanIdentifier' field.
      * Identifier for the external plan.
      * @param value The value of 'externalPlanIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder setExternalPlanIdentifier(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.externalPlanIdentifier = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'externalPlanIdentifier' field has been set.
      * Identifier for the external plan.
      * @return True if the 'externalPlanIdentifier' field has been set, false otherwise.
      */
    public boolean hasExternalPlanIdentifier() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'externalPlanIdentifier' field.
      * Identifier for the external plan.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder clearExternalPlanIdentifier() {
      externalPlanIdentifier = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'entityType' field.
      * Code and description for the plan entity type.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getEntityType() {
      return entityType;
    }

    /**
      * Sets the value of the 'entityType' field.
      * Code and description for the plan entity type.
      * @param value The value of 'entityType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder setEntityType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[2], value);
      this.entityTypeBuilder = null;
      this.entityType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'entityType' field has been set.
      * Code and description for the plan entity type.
      * @return True if the 'entityType' field has been set, false otherwise.
      */
    public boolean hasEntityType() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'entityType' field and creates one if it doesn't exist yet.
     * Code and description for the plan entity type.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getEntityTypeBuilder() {
      if (entityTypeBuilder == null) {
        if (hasEntityType()) {
          setEntityTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(entityType));
        } else {
          setEntityTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return entityTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'entityType' field
     * Code and description for the plan entity type.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder setEntityTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearEntityType();
      entityTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'entityType' field has an active Builder instance
     * Code and description for the plan entity type.
     * @return True if the 'entityType' field has an active Builder instance
     */
    public boolean hasEntityTypeBuilder() {
      return entityTypeBuilder != null;
    }

    /**
      * Clears the value of the 'entityType' field.
      * Code and description for the plan entity type.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.PlanExternalIdentifier.Builder clearEntityType() {
      entityType = null;
      entityTypeBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PlanExternalIdentifier build() {
      try {
        PlanExternalIdentifier record = new PlanExternalIdentifier();
        record.externalEntityIdentifer = fieldSetFlags()[0] ? this.externalEntityIdentifer : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.externalPlanIdentifier = fieldSetFlags()[1] ? this.externalPlanIdentifier : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (entityTypeBuilder != null) {
          record.entityType = this.entityTypeBuilder.build();
        } else {
          record.entityType = fieldSetFlags()[2] ? this.entityType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[2]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PlanExternalIdentifier>
    WRITER$ = (org.apache.avro.io.DatumWriter<PlanExternalIdentifier>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PlanExternalIdentifier>
    READER$ = (org.apache.avro.io.DatumReader<PlanExternalIdentifier>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
