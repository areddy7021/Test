/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.membership;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MemberEnrollmentOtherIdentifier extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -733253192362258995L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MemberEnrollmentOtherIdentifier\",\"namespace\":\"com.uhc.schema.model.eligibility.membership\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"typeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MemberEnrollmentOtherIdentifier> ENCODER =
      new BinaryMessageEncoder<MemberEnrollmentOtherIdentifier>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MemberEnrollmentOtherIdentifier> DECODER =
      new BinaryMessageDecoder<MemberEnrollmentOtherIdentifier>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MemberEnrollmentOtherIdentifier> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MemberEnrollmentOtherIdentifier> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MemberEnrollmentOtherIdentifier>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MemberEnrollmentOtherIdentifier to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MemberEnrollmentOtherIdentifier from a ByteBuffer. */
  public static MemberEnrollmentOtherIdentifier fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public boolean active;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence effectiveDate;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence terminationDate;
  @Deprecated public java.lang.CharSequence typeCode;
  @Deprecated public java.lang.CharSequence value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MemberEnrollmentOtherIdentifier() {}

  /**
   * All-args constructor.
   * @param active The new value for active
   * @param effectiveDate Date format: CCYY-MM-DD
   * @param terminationDate Date format: CCYY-MM-DD
   * @param typeCode The new value for typeCode
   * @param value The new value for value
   */
  public MemberEnrollmentOtherIdentifier(java.lang.Boolean active, java.lang.CharSequence effectiveDate, java.lang.CharSequence terminationDate, java.lang.CharSequence typeCode, java.lang.CharSequence value) {
    this.active = active;
    this.effectiveDate = effectiveDate;
    this.terminationDate = terminationDate;
    this.typeCode = typeCode;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return active;
    case 1: return effectiveDate;
    case 2: return terminationDate;
    case 3: return typeCode;
    case 4: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: active = (java.lang.Boolean)value$; break;
    case 1: effectiveDate = (java.lang.CharSequence)value$; break;
    case 2: terminationDate = (java.lang.CharSequence)value$; break;
    case 3: typeCode = (java.lang.CharSequence)value$; break;
    case 4: value = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public java.lang.Boolean getActive() {
    return active;
  }

  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'effectiveDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getEffectiveDate() {
    return effectiveDate;
  }

  /**
   * Sets the value of the 'effectiveDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setEffectiveDate(java.lang.CharSequence value) {
    this.effectiveDate = value;
  }

  /**
   * Gets the value of the 'terminationDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getTerminationDate() {
    return terminationDate;
  }

  /**
   * Sets the value of the 'terminationDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setTerminationDate(java.lang.CharSequence value) {
    this.terminationDate = value;
  }

  /**
   * Gets the value of the 'typeCode' field.
   * @return The value of the 'typeCode' field.
   */
  public java.lang.CharSequence getTypeCode() {
    return typeCode;
  }

  /**
   * Sets the value of the 'typeCode' field.
   * @param value the value to set.
   */
  public void setTypeCode(java.lang.CharSequence value) {
    this.typeCode = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.lang.CharSequence getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.CharSequence value) {
    this.value = value;
  }

  /**
   * Creates a new MemberEnrollmentOtherIdentifier RecordBuilder.
   * @return A new MemberEnrollmentOtherIdentifier RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder();
  }

  /**
   * Creates a new MemberEnrollmentOtherIdentifier RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MemberEnrollmentOtherIdentifier RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder newBuilder(com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder other) {
    return new com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder(other);
  }

  /**
   * Creates a new MemberEnrollmentOtherIdentifier RecordBuilder by copying an existing MemberEnrollmentOtherIdentifier instance.
   * @param other The existing instance to copy.
   * @return A new MemberEnrollmentOtherIdentifier RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder newBuilder(com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier other) {
    return new com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder(other);
  }

  /**
   * RecordBuilder for MemberEnrollmentOtherIdentifier instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MemberEnrollmentOtherIdentifier>
    implements org.apache.avro.data.RecordBuilder<MemberEnrollmentOtherIdentifier> {

    private boolean active;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence effectiveDate;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence terminationDate;
    private java.lang.CharSequence typeCode;
    private java.lang.CharSequence value;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.effectiveDate)) {
        this.effectiveDate = data().deepCopy(fields()[1].schema(), other.effectiveDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.terminationDate)) {
        this.terminationDate = data().deepCopy(fields()[2].schema(), other.terminationDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.typeCode)) {
        this.typeCode = data().deepCopy(fields()[3].schema(), other.typeCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MemberEnrollmentOtherIdentifier instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.effectiveDate)) {
        this.effectiveDate = data().deepCopy(fields()[1].schema(), other.effectiveDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.terminationDate)) {
        this.terminationDate = data().deepCopy(fields()[2].schema(), other.terminationDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.typeCode)) {
        this.typeCode = data().deepCopy(fields()[3].schema(), other.typeCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public java.lang.Boolean getActive() {
      return active;
    }

    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder setActive(boolean value) {
      validate(fields()[0], value);
      this.active = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder clearActive() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'effectiveDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getEffectiveDate() {
      return effectiveDate;
    }

    /**
      * Sets the value of the 'effectiveDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'effectiveDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder setEffectiveDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.effectiveDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'effectiveDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'effectiveDate' field has been set, false otherwise.
      */
    public boolean hasEffectiveDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'effectiveDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder clearEffectiveDate() {
      effectiveDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'terminationDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getTerminationDate() {
      return terminationDate;
    }

    /**
      * Sets the value of the 'terminationDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'terminationDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder setTerminationDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.terminationDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'terminationDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'terminationDate' field has been set, false otherwise.
      */
    public boolean hasTerminationDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'terminationDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder clearTerminationDate() {
      terminationDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'typeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getTypeCode() {
      return typeCode;
    }

    /**
      * Sets the value of the 'typeCode' field.
      * @param value The value of 'typeCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder setTypeCode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.typeCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'typeCode' field has been set.
      * @return True if the 'typeCode' field has been set, false otherwise.
      */
    public boolean hasTypeCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'typeCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder clearTypeCode() {
      typeCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.CharSequence getValue() {
      return value;
    }

    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder setValue(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.value = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.membership.MemberEnrollmentOtherIdentifier.Builder clearValue() {
      value = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MemberEnrollmentOtherIdentifier build() {
      try {
        MemberEnrollmentOtherIdentifier record = new MemberEnrollmentOtherIdentifier();
        record.active = fieldSetFlags()[0] ? this.active : (java.lang.Boolean) defaultValue(fields()[0]);
        record.effectiveDate = fieldSetFlags()[1] ? this.effectiveDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.terminationDate = fieldSetFlags()[2] ? this.terminationDate : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.typeCode = fieldSetFlags()[3] ? this.typeCode : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.value = fieldSetFlags()[4] ? this.value : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MemberEnrollmentOtherIdentifier>
    WRITER$ = (org.apache.avro.io.DatumWriter<MemberEnrollmentOtherIdentifier>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MemberEnrollmentOtherIdentifier>
    READER$ = (org.apache.avro.io.DatumReader<MemberEnrollmentOtherIdentifier>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
