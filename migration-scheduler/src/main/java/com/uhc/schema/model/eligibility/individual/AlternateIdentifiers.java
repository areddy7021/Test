/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.individual;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Alternate identifiers for the individual */
@org.apache.avro.specific.AvroGenerated
public class AlternateIdentifiers extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8180840755177684884L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AlternateIdentifiers\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"doc\":\"Alternate identifiers for the individual\",\"fields\":[{\"name\":\"alternateIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AlternateIdentifierValue\",\"doc\":\"an alternate identifier for the individual\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"identifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"isPreferredIndicator\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LastUpdated\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"doc\":\"Information about the last update made to a given entity.\",\"fields\":[{\"name\":\"sourceSystemTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the source system (CDB ROW_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"sourceTimestamp\",\"type\":[\"null\",\"string\"],\"doc\":\"The last time the entity was updated on the originating source (CDB SRC_TMSTMP) in format (UTC timezone): CCYY-MM-DDThh:mm:ss.sssZ\",\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",\"string\"],\"doc\":\"The last person or application to update the entity.\",\"default\":null}]}],\"default\":null}]}}],\"default\":null},{\"name\":\"alternateSubscriberId\",\"type\":[\"null\",\"string\"],\"doc\":\"The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID).\",\"default\":null},{\"name\":\"associationIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"driversLicenseNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"employerAssignedIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"doc\":\"A specific number assigned by an employer to a consumer.\",\"default\":null},{\"name\":\"enterpriseIndividualIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\" The enterprise individual identifier (EID) from MDM.\",\"default\":null},{\"name\":\"familyId\",\"type\":[\"null\",\"int\"],\"doc\":\" A unique identifier to group subscribers and dependents together as a family (FAM_ID).\",\"default\":null},{\"name\":\"healthInsuranceExchangeIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"HealthInsuranceExchangeId\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"identifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null}]}}],\"default\":null},{\"name\":\"healthSavingsAccountIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"hicNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"householdIdentifier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"legacyMemberIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"legacySourceFamilyId\",\"type\":[\"null\",\"string\"],\"doc\":\"A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID).\",\"default\":null},{\"name\":\"mbiNumberHistory\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"MbiNumberHistory\",\"fields\":[{\"name\":\"mbiNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"mbiNumberEffectiveDates\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DateRangeType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"startDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null}]}],\"default\":null}]}}],\"default\":null},{\"name\":\"mbiNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"medicaidRecipientNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"memberAlternateIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"memberFamilyLinkIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"memberId\",\"type\":[\"null\",\"string\"],\"doc\":\"The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID).\",\"default\":null},{\"name\":\"memberReplacementIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"nationalIdentifiers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"NationalIdentifier\",\"fields\":[{\"name\":\"abbreviatedIdentifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Abbreviated value for national identifier. E.g., last four didgets of SSN.\",\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Value for national identifer.\",\"default\":null},{\"name\":\"isoCountry\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"doc\":\"The country code for the national identifier.\",\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"doc\":\"Last update date for national identifier.\",\"default\":null},{\"name\":\"nationalIdentiferType\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.DescriptionType\"],\"doc\":\"Describes the type of national identifer. E.g., SSN for United States, PAN for India, etc.\",\"default\":null}]}}],\"default\":null},{\"name\":\"optumIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"optumLabsExternalKey\",\"type\":[\"null\",\"string\"],\"doc\":\"Human friendly key representing the Optum Labs Id.\",\"default\":null},{\"name\":\"optumLabsId\",\"type\":[\"null\",\"string\"],\"doc\":\"Optum Labs generated Id for an individual in a project.\",\"default\":null},{\"name\":\"portals\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Portal\",\"fields\":[{\"name\":\"portalName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"portalUsername\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastUpdated\",\"type\":[\"null\",\"com.uhc.schema.model.eligibility.common.LastUpdated\"],\"default\":null}]}}],\"default\":null},{\"name\":\"priorMemberIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"socialSecurityNumbers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"sourceSystemIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"subscriberIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null},{\"name\":\"survivingSpouseIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"AlternateIdentifierValue\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AlternateIdentifiers> ENCODER =
      new BinaryMessageEncoder<AlternateIdentifiers>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AlternateIdentifiers> DECODER =
      new BinaryMessageDecoder<AlternateIdentifiers>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AlternateIdentifiers> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AlternateIdentifiers> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AlternateIdentifiers>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AlternateIdentifiers to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AlternateIdentifiers from a ByteBuffer. */
  public static AlternateIdentifiers fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> alternateIds;
  /** The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID). */
  @Deprecated public java.lang.CharSequence alternateSubscriberId;
  @Deprecated public java.lang.CharSequence associationIdentifier;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> driversLicenseNumbers;
  /** A specific number assigned by an employer to a consumer. */
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> employerAssignedIds;
  /**  The enterprise individual identifier (EID) from MDM. */
  @Deprecated public java.lang.CharSequence enterpriseIndividualIdentifier;
  /**  A unique identifier to group subscribers and dependents together as a family (FAM_ID). */
  @Deprecated public java.lang.Integer familyId;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.HealthInsuranceExchangeId> healthInsuranceExchangeIds;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> healthSavingsAccountIds;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> hicNumbers;
  @Deprecated public java.lang.CharSequence householdIdentifier;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> legacyMemberIds;
  /** A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID). */
  @Deprecated public java.lang.CharSequence legacySourceFamilyId;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.MbiNumberHistory> mbiNumberHistory;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> mbiNumbers;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> medicaidRecipientNumbers;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> memberAlternateIds;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> memberFamilyLinkIds;
  /** The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID). */
  @Deprecated public java.lang.CharSequence memberId;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> memberReplacementIds;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.NationalIdentifier> nationalIdentifiers;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> optumIds;
  /** Human friendly key representing the Optum Labs Id. */
  @Deprecated public java.lang.CharSequence optumLabsExternalKey;
  /** Optum Labs generated Id for an individual in a project. */
  @Deprecated public java.lang.CharSequence optumLabsId;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.Portal> portals;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> priorMemberIds;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> socialSecurityNumbers;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> sourceSystemIds;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> subscriberIds;
  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> survivingSpouseIds;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AlternateIdentifiers() {}

  /**
   * All-args constructor.
   * @param alternateIds The new value for alternateIds
   * @param alternateSubscriberId The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID).
   * @param associationIdentifier The new value for associationIdentifier
   * @param driversLicenseNumbers The new value for driversLicenseNumbers
   * @param employerAssignedIds A specific number assigned by an employer to a consumer.
   * @param enterpriseIndividualIdentifier  The enterprise individual identifier (EID) from MDM.
   * @param familyId  A unique identifier to group subscribers and dependents together as a family (FAM_ID).
   * @param healthInsuranceExchangeIds The new value for healthInsuranceExchangeIds
   * @param healthSavingsAccountIds The new value for healthSavingsAccountIds
   * @param hicNumbers The new value for hicNumbers
   * @param householdIdentifier The new value for householdIdentifier
   * @param legacyMemberIds The new value for legacyMemberIds
   * @param legacySourceFamilyId A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID).
   * @param mbiNumberHistory The new value for mbiNumberHistory
   * @param mbiNumbers The new value for mbiNumbers
   * @param medicaidRecipientNumbers The new value for medicaidRecipientNumbers
   * @param memberAlternateIds The new value for memberAlternateIds
   * @param memberFamilyLinkIds The new value for memberFamilyLinkIds
   * @param memberId The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID).
   * @param memberReplacementIds The new value for memberReplacementIds
   * @param nationalIdentifiers The new value for nationalIdentifiers
   * @param optumIds The new value for optumIds
   * @param optumLabsExternalKey Human friendly key representing the Optum Labs Id.
   * @param optumLabsId Optum Labs generated Id for an individual in a project.
   * @param portals The new value for portals
   * @param priorMemberIds The new value for priorMemberIds
   * @param socialSecurityNumbers The new value for socialSecurityNumbers
   * @param sourceSystemIds The new value for sourceSystemIds
   * @param subscriberIds The new value for subscriberIds
   * @param survivingSpouseIds The new value for survivingSpouseIds
   */
  public AlternateIdentifiers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> alternateIds, java.lang.CharSequence alternateSubscriberId, java.lang.CharSequence associationIdentifier, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> driversLicenseNumbers, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> employerAssignedIds, java.lang.CharSequence enterpriseIndividualIdentifier, java.lang.Integer familyId, java.util.List<com.uhc.schema.model.eligibility.individual.HealthInsuranceExchangeId> healthInsuranceExchangeIds, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> healthSavingsAccountIds, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> hicNumbers, java.lang.CharSequence householdIdentifier, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> legacyMemberIds, java.lang.CharSequence legacySourceFamilyId, java.util.List<com.uhc.schema.model.eligibility.individual.MbiNumberHistory> mbiNumberHistory, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> mbiNumbers, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> medicaidRecipientNumbers, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> memberAlternateIds, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> memberFamilyLinkIds, java.lang.CharSequence memberId, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> memberReplacementIds, java.util.List<com.uhc.schema.model.eligibility.individual.NationalIdentifier> nationalIdentifiers, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> optumIds, java.lang.CharSequence optumLabsExternalKey, java.lang.CharSequence optumLabsId, java.util.List<com.uhc.schema.model.eligibility.individual.Portal> portals, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> priorMemberIds, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> socialSecurityNumbers, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> sourceSystemIds, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> subscriberIds, java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> survivingSpouseIds) {
    this.alternateIds = alternateIds;
    this.alternateSubscriberId = alternateSubscriberId;
    this.associationIdentifier = associationIdentifier;
    this.driversLicenseNumbers = driversLicenseNumbers;
    this.employerAssignedIds = employerAssignedIds;
    this.enterpriseIndividualIdentifier = enterpriseIndividualIdentifier;
    this.familyId = familyId;
    this.healthInsuranceExchangeIds = healthInsuranceExchangeIds;
    this.healthSavingsAccountIds = healthSavingsAccountIds;
    this.hicNumbers = hicNumbers;
    this.householdIdentifier = householdIdentifier;
    this.legacyMemberIds = legacyMemberIds;
    this.legacySourceFamilyId = legacySourceFamilyId;
    this.mbiNumberHistory = mbiNumberHistory;
    this.mbiNumbers = mbiNumbers;
    this.medicaidRecipientNumbers = medicaidRecipientNumbers;
    this.memberAlternateIds = memberAlternateIds;
    this.memberFamilyLinkIds = memberFamilyLinkIds;
    this.memberId = memberId;
    this.memberReplacementIds = memberReplacementIds;
    this.nationalIdentifiers = nationalIdentifiers;
    this.optumIds = optumIds;
    this.optumLabsExternalKey = optumLabsExternalKey;
    this.optumLabsId = optumLabsId;
    this.portals = portals;
    this.priorMemberIds = priorMemberIds;
    this.socialSecurityNumbers = socialSecurityNumbers;
    this.sourceSystemIds = sourceSystemIds;
    this.subscriberIds = subscriberIds;
    this.survivingSpouseIds = survivingSpouseIds;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return alternateIds;
    case 1: return alternateSubscriberId;
    case 2: return associationIdentifier;
    case 3: return driversLicenseNumbers;
    case 4: return employerAssignedIds;
    case 5: return enterpriseIndividualIdentifier;
    case 6: return familyId;
    case 7: return healthInsuranceExchangeIds;
    case 8: return healthSavingsAccountIds;
    case 9: return hicNumbers;
    case 10: return householdIdentifier;
    case 11: return legacyMemberIds;
    case 12: return legacySourceFamilyId;
    case 13: return mbiNumberHistory;
    case 14: return mbiNumbers;
    case 15: return medicaidRecipientNumbers;
    case 16: return memberAlternateIds;
    case 17: return memberFamilyLinkIds;
    case 18: return memberId;
    case 19: return memberReplacementIds;
    case 20: return nationalIdentifiers;
    case 21: return optumIds;
    case 22: return optumLabsExternalKey;
    case 23: return optumLabsId;
    case 24: return portals;
    case 25: return priorMemberIds;
    case 26: return socialSecurityNumbers;
    case 27: return sourceSystemIds;
    case 28: return subscriberIds;
    case 29: return survivingSpouseIds;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: alternateIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 1: alternateSubscriberId = (java.lang.CharSequence)value$; break;
    case 2: associationIdentifier = (java.lang.CharSequence)value$; break;
    case 3: driversLicenseNumbers = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 4: employerAssignedIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 5: enterpriseIndividualIdentifier = (java.lang.CharSequence)value$; break;
    case 6: familyId = (java.lang.Integer)value$; break;
    case 7: healthInsuranceExchangeIds = (java.util.List<com.uhc.schema.model.eligibility.individual.HealthInsuranceExchangeId>)value$; break;
    case 8: healthSavingsAccountIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 9: hicNumbers = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 10: householdIdentifier = (java.lang.CharSequence)value$; break;
    case 11: legacyMemberIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 12: legacySourceFamilyId = (java.lang.CharSequence)value$; break;
    case 13: mbiNumberHistory = (java.util.List<com.uhc.schema.model.eligibility.individual.MbiNumberHistory>)value$; break;
    case 14: mbiNumbers = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 15: medicaidRecipientNumbers = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 16: memberAlternateIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 17: memberFamilyLinkIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 18: memberId = (java.lang.CharSequence)value$; break;
    case 19: memberReplacementIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 20: nationalIdentifiers = (java.util.List<com.uhc.schema.model.eligibility.individual.NationalIdentifier>)value$; break;
    case 21: optumIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 22: optumLabsExternalKey = (java.lang.CharSequence)value$; break;
    case 23: optumLabsId = (java.lang.CharSequence)value$; break;
    case 24: portals = (java.util.List<com.uhc.schema.model.eligibility.individual.Portal>)value$; break;
    case 25: priorMemberIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 26: socialSecurityNumbers = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 27: sourceSystemIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 28: subscriberIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    case 29: survivingSpouseIds = (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'alternateIds' field.
   * @return The value of the 'alternateIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getAlternateIds() {
    return alternateIds;
  }

  /**
   * Sets the value of the 'alternateIds' field.
   * @param value the value to set.
   */
  public void setAlternateIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.alternateIds = value;
  }

  /**
   * Gets the value of the 'alternateSubscriberId' field.
   * @return The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID).
   */
  public java.lang.CharSequence getAlternateSubscriberId() {
    return alternateSubscriberId;
  }

  /**
   * Sets the value of the 'alternateSubscriberId' field.
   * The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID).
   * @param value the value to set.
   */
  public void setAlternateSubscriberId(java.lang.CharSequence value) {
    this.alternateSubscriberId = value;
  }

  /**
   * Gets the value of the 'associationIdentifier' field.
   * @return The value of the 'associationIdentifier' field.
   */
  public java.lang.CharSequence getAssociationIdentifier() {
    return associationIdentifier;
  }

  /**
   * Sets the value of the 'associationIdentifier' field.
   * @param value the value to set.
   */
  public void setAssociationIdentifier(java.lang.CharSequence value) {
    this.associationIdentifier = value;
  }

  /**
   * Gets the value of the 'driversLicenseNumbers' field.
   * @return The value of the 'driversLicenseNumbers' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getDriversLicenseNumbers() {
    return driversLicenseNumbers;
  }

  /**
   * Sets the value of the 'driversLicenseNumbers' field.
   * @param value the value to set.
   */
  public void setDriversLicenseNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.driversLicenseNumbers = value;
  }

  /**
   * Gets the value of the 'employerAssignedIds' field.
   * @return A specific number assigned by an employer to a consumer.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getEmployerAssignedIds() {
    return employerAssignedIds;
  }

  /**
   * Sets the value of the 'employerAssignedIds' field.
   * A specific number assigned by an employer to a consumer.
   * @param value the value to set.
   */
  public void setEmployerAssignedIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.employerAssignedIds = value;
  }

  /**
   * Gets the value of the 'enterpriseIndividualIdentifier' field.
   * @return  The enterprise individual identifier (EID) from MDM.
   */
  public java.lang.CharSequence getEnterpriseIndividualIdentifier() {
    return enterpriseIndividualIdentifier;
  }

  /**
   * Sets the value of the 'enterpriseIndividualIdentifier' field.
   *  The enterprise individual identifier (EID) from MDM.
   * @param value the value to set.
   */
  public void setEnterpriseIndividualIdentifier(java.lang.CharSequence value) {
    this.enterpriseIndividualIdentifier = value;
  }

  /**
   * Gets the value of the 'familyId' field.
   * @return  A unique identifier to group subscribers and dependents together as a family (FAM_ID).
   */
  public java.lang.Integer getFamilyId() {
    return familyId;
  }

  /**
   * Sets the value of the 'familyId' field.
   *  A unique identifier to group subscribers and dependents together as a family (FAM_ID).
   * @param value the value to set.
   */
  public void setFamilyId(java.lang.Integer value) {
    this.familyId = value;
  }

  /**
   * Gets the value of the 'healthInsuranceExchangeIds' field.
   * @return The value of the 'healthInsuranceExchangeIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.HealthInsuranceExchangeId> getHealthInsuranceExchangeIds() {
    return healthInsuranceExchangeIds;
  }

  /**
   * Sets the value of the 'healthInsuranceExchangeIds' field.
   * @param value the value to set.
   */
  public void setHealthInsuranceExchangeIds(java.util.List<com.uhc.schema.model.eligibility.individual.HealthInsuranceExchangeId> value) {
    this.healthInsuranceExchangeIds = value;
  }

  /**
   * Gets the value of the 'healthSavingsAccountIds' field.
   * @return The value of the 'healthSavingsAccountIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getHealthSavingsAccountIds() {
    return healthSavingsAccountIds;
  }

  /**
   * Sets the value of the 'healthSavingsAccountIds' field.
   * @param value the value to set.
   */
  public void setHealthSavingsAccountIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.healthSavingsAccountIds = value;
  }

  /**
   * Gets the value of the 'hicNumbers' field.
   * @return The value of the 'hicNumbers' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getHicNumbers() {
    return hicNumbers;
  }

  /**
   * Sets the value of the 'hicNumbers' field.
   * @param value the value to set.
   */
  public void setHicNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.hicNumbers = value;
  }

  /**
   * Gets the value of the 'householdIdentifier' field.
   * @return The value of the 'householdIdentifier' field.
   */
  public java.lang.CharSequence getHouseholdIdentifier() {
    return householdIdentifier;
  }

  /**
   * Sets the value of the 'householdIdentifier' field.
   * @param value the value to set.
   */
  public void setHouseholdIdentifier(java.lang.CharSequence value) {
    this.householdIdentifier = value;
  }

  /**
   * Gets the value of the 'legacyMemberIds' field.
   * @return The value of the 'legacyMemberIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getLegacyMemberIds() {
    return legacyMemberIds;
  }

  /**
   * Sets the value of the 'legacyMemberIds' field.
   * @param value the value to set.
   */
  public void setLegacyMemberIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.legacyMemberIds = value;
  }

  /**
   * Gets the value of the 'legacySourceFamilyId' field.
   * @return A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID).
   */
  public java.lang.CharSequence getLegacySourceFamilyId() {
    return legacySourceFamilyId;
  }

  /**
   * Sets the value of the 'legacySourceFamilyId' field.
   * A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID).
   * @param value the value to set.
   */
  public void setLegacySourceFamilyId(java.lang.CharSequence value) {
    this.legacySourceFamilyId = value;
  }

  /**
   * Gets the value of the 'mbiNumberHistory' field.
   * @return The value of the 'mbiNumberHistory' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.MbiNumberHistory> getMbiNumberHistory() {
    return mbiNumberHistory;
  }

  /**
   * Sets the value of the 'mbiNumberHistory' field.
   * @param value the value to set.
   */
  public void setMbiNumberHistory(java.util.List<com.uhc.schema.model.eligibility.individual.MbiNumberHistory> value) {
    this.mbiNumberHistory = value;
  }

  /**
   * Gets the value of the 'mbiNumbers' field.
   * @return The value of the 'mbiNumbers' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getMbiNumbers() {
    return mbiNumbers;
  }

  /**
   * Sets the value of the 'mbiNumbers' field.
   * @param value the value to set.
   */
  public void setMbiNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.mbiNumbers = value;
  }

  /**
   * Gets the value of the 'medicaidRecipientNumbers' field.
   * @return The value of the 'medicaidRecipientNumbers' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getMedicaidRecipientNumbers() {
    return medicaidRecipientNumbers;
  }

  /**
   * Sets the value of the 'medicaidRecipientNumbers' field.
   * @param value the value to set.
   */
  public void setMedicaidRecipientNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.medicaidRecipientNumbers = value;
  }

  /**
   * Gets the value of the 'memberAlternateIds' field.
   * @return The value of the 'memberAlternateIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getMemberAlternateIds() {
    return memberAlternateIds;
  }

  /**
   * Sets the value of the 'memberAlternateIds' field.
   * @param value the value to set.
   */
  public void setMemberAlternateIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.memberAlternateIds = value;
  }

  /**
   * Gets the value of the 'memberFamilyLinkIds' field.
   * @return The value of the 'memberFamilyLinkIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getMemberFamilyLinkIds() {
    return memberFamilyLinkIds;
  }

  /**
   * Sets the value of the 'memberFamilyLinkIds' field.
   * @param value the value to set.
   */
  public void setMemberFamilyLinkIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.memberFamilyLinkIds = value;
  }

  /**
   * Gets the value of the 'memberId' field.
   * @return The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID).
   */
  public java.lang.CharSequence getMemberId() {
    return memberId;
  }

  /**
   * Sets the value of the 'memberId' field.
   * The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID).
   * @param value the value to set.
   */
  public void setMemberId(java.lang.CharSequence value) {
    this.memberId = value;
  }

  /**
   * Gets the value of the 'memberReplacementIds' field.
   * @return The value of the 'memberReplacementIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getMemberReplacementIds() {
    return memberReplacementIds;
  }

  /**
   * Sets the value of the 'memberReplacementIds' field.
   * @param value the value to set.
   */
  public void setMemberReplacementIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.memberReplacementIds = value;
  }

  /**
   * Gets the value of the 'nationalIdentifiers' field.
   * @return The value of the 'nationalIdentifiers' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.NationalIdentifier> getNationalIdentifiers() {
    return nationalIdentifiers;
  }

  /**
   * Sets the value of the 'nationalIdentifiers' field.
   * @param value the value to set.
   */
  public void setNationalIdentifiers(java.util.List<com.uhc.schema.model.eligibility.individual.NationalIdentifier> value) {
    this.nationalIdentifiers = value;
  }

  /**
   * Gets the value of the 'optumIds' field.
   * @return The value of the 'optumIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getOptumIds() {
    return optumIds;
  }

  /**
   * Sets the value of the 'optumIds' field.
   * @param value the value to set.
   */
  public void setOptumIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.optumIds = value;
  }

  /**
   * Gets the value of the 'optumLabsExternalKey' field.
   * @return Human friendly key representing the Optum Labs Id.
   */
  public java.lang.CharSequence getOptumLabsExternalKey() {
    return optumLabsExternalKey;
  }

  /**
   * Sets the value of the 'optumLabsExternalKey' field.
   * Human friendly key representing the Optum Labs Id.
   * @param value the value to set.
   */
  public void setOptumLabsExternalKey(java.lang.CharSequence value) {
    this.optumLabsExternalKey = value;
  }

  /**
   * Gets the value of the 'optumLabsId' field.
   * @return Optum Labs generated Id for an individual in a project.
   */
  public java.lang.CharSequence getOptumLabsId() {
    return optumLabsId;
  }

  /**
   * Sets the value of the 'optumLabsId' field.
   * Optum Labs generated Id for an individual in a project.
   * @param value the value to set.
   */
  public void setOptumLabsId(java.lang.CharSequence value) {
    this.optumLabsId = value;
  }

  /**
   * Gets the value of the 'portals' field.
   * @return The value of the 'portals' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.Portal> getPortals() {
    return portals;
  }

  /**
   * Sets the value of the 'portals' field.
   * @param value the value to set.
   */
  public void setPortals(java.util.List<com.uhc.schema.model.eligibility.individual.Portal> value) {
    this.portals = value;
  }

  /**
   * Gets the value of the 'priorMemberIds' field.
   * @return The value of the 'priorMemberIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getPriorMemberIds() {
    return priorMemberIds;
  }

  /**
   * Sets the value of the 'priorMemberIds' field.
   * @param value the value to set.
   */
  public void setPriorMemberIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.priorMemberIds = value;
  }

  /**
   * Gets the value of the 'socialSecurityNumbers' field.
   * @return The value of the 'socialSecurityNumbers' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getSocialSecurityNumbers() {
    return socialSecurityNumbers;
  }

  /**
   * Sets the value of the 'socialSecurityNumbers' field.
   * @param value the value to set.
   */
  public void setSocialSecurityNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.socialSecurityNumbers = value;
  }

  /**
   * Gets the value of the 'sourceSystemIds' field.
   * @return The value of the 'sourceSystemIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getSourceSystemIds() {
    return sourceSystemIds;
  }

  /**
   * Sets the value of the 'sourceSystemIds' field.
   * @param value the value to set.
   */
  public void setSourceSystemIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.sourceSystemIds = value;
  }

  /**
   * Gets the value of the 'subscriberIds' field.
   * @return The value of the 'subscriberIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getSubscriberIds() {
    return subscriberIds;
  }

  /**
   * Sets the value of the 'subscriberIds' field.
   * @param value the value to set.
   */
  public void setSubscriberIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.subscriberIds = value;
  }

  /**
   * Gets the value of the 'survivingSpouseIds' field.
   * @return The value of the 'survivingSpouseIds' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getSurvivingSpouseIds() {
    return survivingSpouseIds;
  }

  /**
   * Sets the value of the 'survivingSpouseIds' field.
   * @param value the value to set.
   */
  public void setSurvivingSpouseIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
    this.survivingSpouseIds = value;
  }

  /**
   * Creates a new AlternateIdentifiers RecordBuilder.
   * @return A new AlternateIdentifiers RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder();
  }

  /**
   * Creates a new AlternateIdentifiers RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AlternateIdentifiers RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder newBuilder(com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder other) {
    return new com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder(other);
  }

  /**
   * Creates a new AlternateIdentifiers RecordBuilder by copying an existing AlternateIdentifiers instance.
   * @param other The existing instance to copy.
   * @return A new AlternateIdentifiers RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder newBuilder(com.uhc.schema.model.eligibility.individual.AlternateIdentifiers other) {
    return new com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder(other);
  }

  /**
   * RecordBuilder for AlternateIdentifiers instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AlternateIdentifiers>
    implements org.apache.avro.data.RecordBuilder<AlternateIdentifiers> {

    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> alternateIds;
    /** The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID). */
    private java.lang.CharSequence alternateSubscriberId;
    private java.lang.CharSequence associationIdentifier;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> driversLicenseNumbers;
    /** A specific number assigned by an employer to a consumer. */
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> employerAssignedIds;
    /**  The enterprise individual identifier (EID) from MDM. */
    private java.lang.CharSequence enterpriseIndividualIdentifier;
    /**  A unique identifier to group subscribers and dependents together as a family (FAM_ID). */
    private java.lang.Integer familyId;
    private java.util.List<com.uhc.schema.model.eligibility.individual.HealthInsuranceExchangeId> healthInsuranceExchangeIds;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> healthSavingsAccountIds;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> hicNumbers;
    private java.lang.CharSequence householdIdentifier;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> legacyMemberIds;
    /** A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID). */
    private java.lang.CharSequence legacySourceFamilyId;
    private java.util.List<com.uhc.schema.model.eligibility.individual.MbiNumberHistory> mbiNumberHistory;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> mbiNumbers;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> medicaidRecipientNumbers;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> memberAlternateIds;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> memberFamilyLinkIds;
    /** The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID). */
    private java.lang.CharSequence memberId;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> memberReplacementIds;
    private java.util.List<com.uhc.schema.model.eligibility.individual.NationalIdentifier> nationalIdentifiers;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> optumIds;
    /** Human friendly key representing the Optum Labs Id. */
    private java.lang.CharSequence optumLabsExternalKey;
    /** Optum Labs generated Id for an individual in a project. */
    private java.lang.CharSequence optumLabsId;
    private java.util.List<com.uhc.schema.model.eligibility.individual.Portal> portals;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> priorMemberIds;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> socialSecurityNumbers;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> sourceSystemIds;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> subscriberIds;
    private java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> survivingSpouseIds;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.alternateIds)) {
        this.alternateIds = data().deepCopy(fields()[0].schema(), other.alternateIds);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.alternateSubscriberId)) {
        this.alternateSubscriberId = data().deepCopy(fields()[1].schema(), other.alternateSubscriberId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.associationIdentifier)) {
        this.associationIdentifier = data().deepCopy(fields()[2].schema(), other.associationIdentifier);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.driversLicenseNumbers)) {
        this.driversLicenseNumbers = data().deepCopy(fields()[3].schema(), other.driversLicenseNumbers);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.employerAssignedIds)) {
        this.employerAssignedIds = data().deepCopy(fields()[4].schema(), other.employerAssignedIds);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.enterpriseIndividualIdentifier)) {
        this.enterpriseIndividualIdentifier = data().deepCopy(fields()[5].schema(), other.enterpriseIndividualIdentifier);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.familyId)) {
        this.familyId = data().deepCopy(fields()[6].schema(), other.familyId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.healthInsuranceExchangeIds)) {
        this.healthInsuranceExchangeIds = data().deepCopy(fields()[7].schema(), other.healthInsuranceExchangeIds);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.healthSavingsAccountIds)) {
        this.healthSavingsAccountIds = data().deepCopy(fields()[8].schema(), other.healthSavingsAccountIds);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.hicNumbers)) {
        this.hicNumbers = data().deepCopy(fields()[9].schema(), other.hicNumbers);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.householdIdentifier)) {
        this.householdIdentifier = data().deepCopy(fields()[10].schema(), other.householdIdentifier);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.legacyMemberIds)) {
        this.legacyMemberIds = data().deepCopy(fields()[11].schema(), other.legacyMemberIds);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.legacySourceFamilyId)) {
        this.legacySourceFamilyId = data().deepCopy(fields()[12].schema(), other.legacySourceFamilyId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.mbiNumberHistory)) {
        this.mbiNumberHistory = data().deepCopy(fields()[13].schema(), other.mbiNumberHistory);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.mbiNumbers)) {
        this.mbiNumbers = data().deepCopy(fields()[14].schema(), other.mbiNumbers);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.medicaidRecipientNumbers)) {
        this.medicaidRecipientNumbers = data().deepCopy(fields()[15].schema(), other.medicaidRecipientNumbers);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.memberAlternateIds)) {
        this.memberAlternateIds = data().deepCopy(fields()[16].schema(), other.memberAlternateIds);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.memberFamilyLinkIds)) {
        this.memberFamilyLinkIds = data().deepCopy(fields()[17].schema(), other.memberFamilyLinkIds);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.memberId)) {
        this.memberId = data().deepCopy(fields()[18].schema(), other.memberId);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.memberReplacementIds)) {
        this.memberReplacementIds = data().deepCopy(fields()[19].schema(), other.memberReplacementIds);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.nationalIdentifiers)) {
        this.nationalIdentifiers = data().deepCopy(fields()[20].schema(), other.nationalIdentifiers);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.optumIds)) {
        this.optumIds = data().deepCopy(fields()[21].schema(), other.optumIds);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.optumLabsExternalKey)) {
        this.optumLabsExternalKey = data().deepCopy(fields()[22].schema(), other.optumLabsExternalKey);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.optumLabsId)) {
        this.optumLabsId = data().deepCopy(fields()[23].schema(), other.optumLabsId);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.portals)) {
        this.portals = data().deepCopy(fields()[24].schema(), other.portals);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.priorMemberIds)) {
        this.priorMemberIds = data().deepCopy(fields()[25].schema(), other.priorMemberIds);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.socialSecurityNumbers)) {
        this.socialSecurityNumbers = data().deepCopy(fields()[26].schema(), other.socialSecurityNumbers);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.sourceSystemIds)) {
        this.sourceSystemIds = data().deepCopy(fields()[27].schema(), other.sourceSystemIds);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.subscriberIds)) {
        this.subscriberIds = data().deepCopy(fields()[28].schema(), other.subscriberIds);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.survivingSpouseIds)) {
        this.survivingSpouseIds = data().deepCopy(fields()[29].schema(), other.survivingSpouseIds);
        fieldSetFlags()[29] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AlternateIdentifiers instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.AlternateIdentifiers other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.alternateIds)) {
        this.alternateIds = data().deepCopy(fields()[0].schema(), other.alternateIds);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.alternateSubscriberId)) {
        this.alternateSubscriberId = data().deepCopy(fields()[1].schema(), other.alternateSubscriberId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.associationIdentifier)) {
        this.associationIdentifier = data().deepCopy(fields()[2].schema(), other.associationIdentifier);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.driversLicenseNumbers)) {
        this.driversLicenseNumbers = data().deepCopy(fields()[3].schema(), other.driversLicenseNumbers);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.employerAssignedIds)) {
        this.employerAssignedIds = data().deepCopy(fields()[4].schema(), other.employerAssignedIds);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.enterpriseIndividualIdentifier)) {
        this.enterpriseIndividualIdentifier = data().deepCopy(fields()[5].schema(), other.enterpriseIndividualIdentifier);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.familyId)) {
        this.familyId = data().deepCopy(fields()[6].schema(), other.familyId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.healthInsuranceExchangeIds)) {
        this.healthInsuranceExchangeIds = data().deepCopy(fields()[7].schema(), other.healthInsuranceExchangeIds);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.healthSavingsAccountIds)) {
        this.healthSavingsAccountIds = data().deepCopy(fields()[8].schema(), other.healthSavingsAccountIds);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.hicNumbers)) {
        this.hicNumbers = data().deepCopy(fields()[9].schema(), other.hicNumbers);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.householdIdentifier)) {
        this.householdIdentifier = data().deepCopy(fields()[10].schema(), other.householdIdentifier);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.legacyMemberIds)) {
        this.legacyMemberIds = data().deepCopy(fields()[11].schema(), other.legacyMemberIds);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.legacySourceFamilyId)) {
        this.legacySourceFamilyId = data().deepCopy(fields()[12].schema(), other.legacySourceFamilyId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.mbiNumberHistory)) {
        this.mbiNumberHistory = data().deepCopy(fields()[13].schema(), other.mbiNumberHistory);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.mbiNumbers)) {
        this.mbiNumbers = data().deepCopy(fields()[14].schema(), other.mbiNumbers);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.medicaidRecipientNumbers)) {
        this.medicaidRecipientNumbers = data().deepCopy(fields()[15].schema(), other.medicaidRecipientNumbers);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.memberAlternateIds)) {
        this.memberAlternateIds = data().deepCopy(fields()[16].schema(), other.memberAlternateIds);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.memberFamilyLinkIds)) {
        this.memberFamilyLinkIds = data().deepCopy(fields()[17].schema(), other.memberFamilyLinkIds);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.memberId)) {
        this.memberId = data().deepCopy(fields()[18].schema(), other.memberId);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.memberReplacementIds)) {
        this.memberReplacementIds = data().deepCopy(fields()[19].schema(), other.memberReplacementIds);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.nationalIdentifiers)) {
        this.nationalIdentifiers = data().deepCopy(fields()[20].schema(), other.nationalIdentifiers);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.optumIds)) {
        this.optumIds = data().deepCopy(fields()[21].schema(), other.optumIds);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.optumLabsExternalKey)) {
        this.optumLabsExternalKey = data().deepCopy(fields()[22].schema(), other.optumLabsExternalKey);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.optumLabsId)) {
        this.optumLabsId = data().deepCopy(fields()[23].schema(), other.optumLabsId);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.portals)) {
        this.portals = data().deepCopy(fields()[24].schema(), other.portals);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.priorMemberIds)) {
        this.priorMemberIds = data().deepCopy(fields()[25].schema(), other.priorMemberIds);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.socialSecurityNumbers)) {
        this.socialSecurityNumbers = data().deepCopy(fields()[26].schema(), other.socialSecurityNumbers);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.sourceSystemIds)) {
        this.sourceSystemIds = data().deepCopy(fields()[27].schema(), other.sourceSystemIds);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.subscriberIds)) {
        this.subscriberIds = data().deepCopy(fields()[28].schema(), other.subscriberIds);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.survivingSpouseIds)) {
        this.survivingSpouseIds = data().deepCopy(fields()[29].schema(), other.survivingSpouseIds);
        fieldSetFlags()[29] = true;
      }
    }

    /**
      * Gets the value of the 'alternateIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getAlternateIds() {
      return alternateIds;
    }

    /**
      * Sets the value of the 'alternateIds' field.
      * @param value The value of 'alternateIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setAlternateIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[0], value);
      this.alternateIds = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'alternateIds' field has been set.
      * @return True if the 'alternateIds' field has been set, false otherwise.
      */
    public boolean hasAlternateIds() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'alternateIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearAlternateIds() {
      alternateIds = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'alternateSubscriberId' field.
      * The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID).
      * @return The value.
      */
    public java.lang.CharSequence getAlternateSubscriberId() {
      return alternateSubscriberId;
    }

    /**
      * Sets the value of the 'alternateSubscriberId' field.
      * The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID).
      * @param value The value of 'alternateSubscriberId'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setAlternateSubscriberId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.alternateSubscriberId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'alternateSubscriberId' field has been set.
      * The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID).
      * @return True if the 'alternateSubscriberId' field has been set, false otherwise.
      */
    public boolean hasAlternateSubscriberId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'alternateSubscriberId' field.
      * The alternative identifier assigned to the subscriber that provides products to the consumer (LGCY_ALT_MBR_ID).
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearAlternateSubscriberId() {
      alternateSubscriberId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'associationIdentifier' field.
      * @return The value.
      */
    public java.lang.CharSequence getAssociationIdentifier() {
      return associationIdentifier;
    }

    /**
      * Sets the value of the 'associationIdentifier' field.
      * @param value The value of 'associationIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setAssociationIdentifier(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.associationIdentifier = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'associationIdentifier' field has been set.
      * @return True if the 'associationIdentifier' field has been set, false otherwise.
      */
    public boolean hasAssociationIdentifier() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'associationIdentifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearAssociationIdentifier() {
      associationIdentifier = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'driversLicenseNumbers' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getDriversLicenseNumbers() {
      return driversLicenseNumbers;
    }

    /**
      * Sets the value of the 'driversLicenseNumbers' field.
      * @param value The value of 'driversLicenseNumbers'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setDriversLicenseNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[3], value);
      this.driversLicenseNumbers = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'driversLicenseNumbers' field has been set.
      * @return True if the 'driversLicenseNumbers' field has been set, false otherwise.
      */
    public boolean hasDriversLicenseNumbers() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'driversLicenseNumbers' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearDriversLicenseNumbers() {
      driversLicenseNumbers = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'employerAssignedIds' field.
      * A specific number assigned by an employer to a consumer.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getEmployerAssignedIds() {
      return employerAssignedIds;
    }

    /**
      * Sets the value of the 'employerAssignedIds' field.
      * A specific number assigned by an employer to a consumer.
      * @param value The value of 'employerAssignedIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setEmployerAssignedIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[4], value);
      this.employerAssignedIds = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'employerAssignedIds' field has been set.
      * A specific number assigned by an employer to a consumer.
      * @return True if the 'employerAssignedIds' field has been set, false otherwise.
      */
    public boolean hasEmployerAssignedIds() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'employerAssignedIds' field.
      * A specific number assigned by an employer to a consumer.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearEmployerAssignedIds() {
      employerAssignedIds = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'enterpriseIndividualIdentifier' field.
      *  The enterprise individual identifier (EID) from MDM.
      * @return The value.
      */
    public java.lang.CharSequence getEnterpriseIndividualIdentifier() {
      return enterpriseIndividualIdentifier;
    }

    /**
      * Sets the value of the 'enterpriseIndividualIdentifier' field.
      *  The enterprise individual identifier (EID) from MDM.
      * @param value The value of 'enterpriseIndividualIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setEnterpriseIndividualIdentifier(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.enterpriseIndividualIdentifier = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'enterpriseIndividualIdentifier' field has been set.
      *  The enterprise individual identifier (EID) from MDM.
      * @return True if the 'enterpriseIndividualIdentifier' field has been set, false otherwise.
      */
    public boolean hasEnterpriseIndividualIdentifier() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'enterpriseIndividualIdentifier' field.
      *  The enterprise individual identifier (EID) from MDM.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearEnterpriseIndividualIdentifier() {
      enterpriseIndividualIdentifier = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'familyId' field.
      *  A unique identifier to group subscribers and dependents together as a family (FAM_ID).
      * @return The value.
      */
    public java.lang.Integer getFamilyId() {
      return familyId;
    }

    /**
      * Sets the value of the 'familyId' field.
      *  A unique identifier to group subscribers and dependents together as a family (FAM_ID).
      * @param value The value of 'familyId'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setFamilyId(java.lang.Integer value) {
      validate(fields()[6], value);
      this.familyId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'familyId' field has been set.
      *  A unique identifier to group subscribers and dependents together as a family (FAM_ID).
      * @return True if the 'familyId' field has been set, false otherwise.
      */
    public boolean hasFamilyId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'familyId' field.
      *  A unique identifier to group subscribers and dependents together as a family (FAM_ID).
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearFamilyId() {
      familyId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'healthInsuranceExchangeIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.HealthInsuranceExchangeId> getHealthInsuranceExchangeIds() {
      return healthInsuranceExchangeIds;
    }

    /**
      * Sets the value of the 'healthInsuranceExchangeIds' field.
      * @param value The value of 'healthInsuranceExchangeIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setHealthInsuranceExchangeIds(java.util.List<com.uhc.schema.model.eligibility.individual.HealthInsuranceExchangeId> value) {
      validate(fields()[7], value);
      this.healthInsuranceExchangeIds = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'healthInsuranceExchangeIds' field has been set.
      * @return True if the 'healthInsuranceExchangeIds' field has been set, false otherwise.
      */
    public boolean hasHealthInsuranceExchangeIds() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'healthInsuranceExchangeIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearHealthInsuranceExchangeIds() {
      healthInsuranceExchangeIds = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'healthSavingsAccountIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getHealthSavingsAccountIds() {
      return healthSavingsAccountIds;
    }

    /**
      * Sets the value of the 'healthSavingsAccountIds' field.
      * @param value The value of 'healthSavingsAccountIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setHealthSavingsAccountIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[8], value);
      this.healthSavingsAccountIds = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'healthSavingsAccountIds' field has been set.
      * @return True if the 'healthSavingsAccountIds' field has been set, false otherwise.
      */
    public boolean hasHealthSavingsAccountIds() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'healthSavingsAccountIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearHealthSavingsAccountIds() {
      healthSavingsAccountIds = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'hicNumbers' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getHicNumbers() {
      return hicNumbers;
    }

    /**
      * Sets the value of the 'hicNumbers' field.
      * @param value The value of 'hicNumbers'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setHicNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[9], value);
      this.hicNumbers = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'hicNumbers' field has been set.
      * @return True if the 'hicNumbers' field has been set, false otherwise.
      */
    public boolean hasHicNumbers() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'hicNumbers' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearHicNumbers() {
      hicNumbers = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'householdIdentifier' field.
      * @return The value.
      */
    public java.lang.CharSequence getHouseholdIdentifier() {
      return householdIdentifier;
    }

    /**
      * Sets the value of the 'householdIdentifier' field.
      * @param value The value of 'householdIdentifier'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setHouseholdIdentifier(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.householdIdentifier = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'householdIdentifier' field has been set.
      * @return True if the 'householdIdentifier' field has been set, false otherwise.
      */
    public boolean hasHouseholdIdentifier() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'householdIdentifier' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearHouseholdIdentifier() {
      householdIdentifier = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'legacyMemberIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getLegacyMemberIds() {
      return legacyMemberIds;
    }

    /**
      * Sets the value of the 'legacyMemberIds' field.
      * @param value The value of 'legacyMemberIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setLegacyMemberIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[11], value);
      this.legacyMemberIds = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'legacyMemberIds' field has been set.
      * @return True if the 'legacyMemberIds' field has been set, false otherwise.
      */
    public boolean hasLegacyMemberIds() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'legacyMemberIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearLegacyMemberIds() {
      legacyMemberIds = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'legacySourceFamilyId' field.
      * A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID).
      * @return The value.
      */
    public java.lang.CharSequence getLegacySourceFamilyId() {
      return legacySourceFamilyId;
    }

    /**
      * Sets the value of the 'legacySourceFamilyId' field.
      * A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID).
      * @param value The value of 'legacySourceFamilyId'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setLegacySourceFamilyId(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.legacySourceFamilyId = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'legacySourceFamilyId' field has been set.
      * A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID).
      * @return True if the 'legacySourceFamilyId' field has been set, false otherwise.
      */
    public boolean hasLegacySourceFamilyId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'legacySourceFamilyId' field.
      * A unique identifier from the legacy source to group subscribers and dependents together as a family (LGCY_SRC_FAM_ID).
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearLegacySourceFamilyId() {
      legacySourceFamilyId = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'mbiNumberHistory' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.MbiNumberHistory> getMbiNumberHistory() {
      return mbiNumberHistory;
    }

    /**
      * Sets the value of the 'mbiNumberHistory' field.
      * @param value The value of 'mbiNumberHistory'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setMbiNumberHistory(java.util.List<com.uhc.schema.model.eligibility.individual.MbiNumberHistory> value) {
      validate(fields()[13], value);
      this.mbiNumberHistory = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'mbiNumberHistory' field has been set.
      * @return True if the 'mbiNumberHistory' field has been set, false otherwise.
      */
    public boolean hasMbiNumberHistory() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'mbiNumberHistory' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearMbiNumberHistory() {
      mbiNumberHistory = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'mbiNumbers' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getMbiNumbers() {
      return mbiNumbers;
    }

    /**
      * Sets the value of the 'mbiNumbers' field.
      * @param value The value of 'mbiNumbers'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setMbiNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[14], value);
      this.mbiNumbers = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'mbiNumbers' field has been set.
      * @return True if the 'mbiNumbers' field has been set, false otherwise.
      */
    public boolean hasMbiNumbers() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'mbiNumbers' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearMbiNumbers() {
      mbiNumbers = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicaidRecipientNumbers' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getMedicaidRecipientNumbers() {
      return medicaidRecipientNumbers;
    }

    /**
      * Sets the value of the 'medicaidRecipientNumbers' field.
      * @param value The value of 'medicaidRecipientNumbers'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setMedicaidRecipientNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[15], value);
      this.medicaidRecipientNumbers = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'medicaidRecipientNumbers' field has been set.
      * @return True if the 'medicaidRecipientNumbers' field has been set, false otherwise.
      */
    public boolean hasMedicaidRecipientNumbers() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'medicaidRecipientNumbers' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearMedicaidRecipientNumbers() {
      medicaidRecipientNumbers = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'memberAlternateIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getMemberAlternateIds() {
      return memberAlternateIds;
    }

    /**
      * Sets the value of the 'memberAlternateIds' field.
      * @param value The value of 'memberAlternateIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setMemberAlternateIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[16], value);
      this.memberAlternateIds = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'memberAlternateIds' field has been set.
      * @return True if the 'memberAlternateIds' field has been set, false otherwise.
      */
    public boolean hasMemberAlternateIds() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'memberAlternateIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearMemberAlternateIds() {
      memberAlternateIds = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'memberFamilyLinkIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getMemberFamilyLinkIds() {
      return memberFamilyLinkIds;
    }

    /**
      * Sets the value of the 'memberFamilyLinkIds' field.
      * @param value The value of 'memberFamilyLinkIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setMemberFamilyLinkIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[17], value);
      this.memberFamilyLinkIds = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'memberFamilyLinkIds' field has been set.
      * @return True if the 'memberFamilyLinkIds' field has been set, false otherwise.
      */
    public boolean hasMemberFamilyLinkIds() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'memberFamilyLinkIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearMemberFamilyLinkIds() {
      memberFamilyLinkIds = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'memberId' field.
      * The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID).
      * @return The value.
      */
    public java.lang.CharSequence getMemberId() {
      return memberId;
    }

    /**
      * Sets the value of the 'memberId' field.
      * The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID).
      * @param value The value of 'memberId'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setMemberId(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.memberId = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'memberId' field has been set.
      * The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID).
      * @return True if the 'memberId' field has been set, false otherwise.
      */
    public boolean hasMemberId() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'memberId' field.
      * The identifier assigned to the consumer by the legacy application (LGCY_MBR_ID).
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearMemberId() {
      memberId = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'memberReplacementIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getMemberReplacementIds() {
      return memberReplacementIds;
    }

    /**
      * Sets the value of the 'memberReplacementIds' field.
      * @param value The value of 'memberReplacementIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setMemberReplacementIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[19], value);
      this.memberReplacementIds = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'memberReplacementIds' field has been set.
      * @return True if the 'memberReplacementIds' field has been set, false otherwise.
      */
    public boolean hasMemberReplacementIds() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'memberReplacementIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearMemberReplacementIds() {
      memberReplacementIds = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'nationalIdentifiers' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.NationalIdentifier> getNationalIdentifiers() {
      return nationalIdentifiers;
    }

    /**
      * Sets the value of the 'nationalIdentifiers' field.
      * @param value The value of 'nationalIdentifiers'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setNationalIdentifiers(java.util.List<com.uhc.schema.model.eligibility.individual.NationalIdentifier> value) {
      validate(fields()[20], value);
      this.nationalIdentifiers = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'nationalIdentifiers' field has been set.
      * @return True if the 'nationalIdentifiers' field has been set, false otherwise.
      */
    public boolean hasNationalIdentifiers() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'nationalIdentifiers' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearNationalIdentifiers() {
      nationalIdentifiers = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'optumIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getOptumIds() {
      return optumIds;
    }

    /**
      * Sets the value of the 'optumIds' field.
      * @param value The value of 'optumIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setOptumIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[21], value);
      this.optumIds = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'optumIds' field has been set.
      * @return True if the 'optumIds' field has been set, false otherwise.
      */
    public boolean hasOptumIds() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'optumIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearOptumIds() {
      optumIds = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'optumLabsExternalKey' field.
      * Human friendly key representing the Optum Labs Id.
      * @return The value.
      */
    public java.lang.CharSequence getOptumLabsExternalKey() {
      return optumLabsExternalKey;
    }

    /**
      * Sets the value of the 'optumLabsExternalKey' field.
      * Human friendly key representing the Optum Labs Id.
      * @param value The value of 'optumLabsExternalKey'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setOptumLabsExternalKey(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.optumLabsExternalKey = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'optumLabsExternalKey' field has been set.
      * Human friendly key representing the Optum Labs Id.
      * @return True if the 'optumLabsExternalKey' field has been set, false otherwise.
      */
    public boolean hasOptumLabsExternalKey() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'optumLabsExternalKey' field.
      * Human friendly key representing the Optum Labs Id.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearOptumLabsExternalKey() {
      optumLabsExternalKey = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'optumLabsId' field.
      * Optum Labs generated Id for an individual in a project.
      * @return The value.
      */
    public java.lang.CharSequence getOptumLabsId() {
      return optumLabsId;
    }

    /**
      * Sets the value of the 'optumLabsId' field.
      * Optum Labs generated Id for an individual in a project.
      * @param value The value of 'optumLabsId'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setOptumLabsId(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.optumLabsId = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'optumLabsId' field has been set.
      * Optum Labs generated Id for an individual in a project.
      * @return True if the 'optumLabsId' field has been set, false otherwise.
      */
    public boolean hasOptumLabsId() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'optumLabsId' field.
      * Optum Labs generated Id for an individual in a project.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearOptumLabsId() {
      optumLabsId = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'portals' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.Portal> getPortals() {
      return portals;
    }

    /**
      * Sets the value of the 'portals' field.
      * @param value The value of 'portals'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setPortals(java.util.List<com.uhc.schema.model.eligibility.individual.Portal> value) {
      validate(fields()[24], value);
      this.portals = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'portals' field has been set.
      * @return True if the 'portals' field has been set, false otherwise.
      */
    public boolean hasPortals() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'portals' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearPortals() {
      portals = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'priorMemberIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getPriorMemberIds() {
      return priorMemberIds;
    }

    /**
      * Sets the value of the 'priorMemberIds' field.
      * @param value The value of 'priorMemberIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setPriorMemberIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[25], value);
      this.priorMemberIds = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'priorMemberIds' field has been set.
      * @return True if the 'priorMemberIds' field has been set, false otherwise.
      */
    public boolean hasPriorMemberIds() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'priorMemberIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearPriorMemberIds() {
      priorMemberIds = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'socialSecurityNumbers' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getSocialSecurityNumbers() {
      return socialSecurityNumbers;
    }

    /**
      * Sets the value of the 'socialSecurityNumbers' field.
      * @param value The value of 'socialSecurityNumbers'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setSocialSecurityNumbers(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[26], value);
      this.socialSecurityNumbers = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'socialSecurityNumbers' field has been set.
      * @return True if the 'socialSecurityNumbers' field has been set, false otherwise.
      */
    public boolean hasSocialSecurityNumbers() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'socialSecurityNumbers' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearSocialSecurityNumbers() {
      socialSecurityNumbers = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceSystemIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getSourceSystemIds() {
      return sourceSystemIds;
    }

    /**
      * Sets the value of the 'sourceSystemIds' field.
      * @param value The value of 'sourceSystemIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setSourceSystemIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[27], value);
      this.sourceSystemIds = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceSystemIds' field has been set.
      * @return True if the 'sourceSystemIds' field has been set, false otherwise.
      */
    public boolean hasSourceSystemIds() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'sourceSystemIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearSourceSystemIds() {
      sourceSystemIds = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'subscriberIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getSubscriberIds() {
      return subscriberIds;
    }

    /**
      * Sets the value of the 'subscriberIds' field.
      * @param value The value of 'subscriberIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setSubscriberIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[28], value);
      this.subscriberIds = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'subscriberIds' field has been set.
      * @return True if the 'subscriberIds' field has been set, false otherwise.
      */
    public boolean hasSubscriberIds() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'subscriberIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearSubscriberIds() {
      subscriberIds = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'survivingSpouseIds' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> getSurvivingSpouseIds() {
      return survivingSpouseIds;
    }

    /**
      * Sets the value of the 'survivingSpouseIds' field.
      * @param value The value of 'survivingSpouseIds'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder setSurvivingSpouseIds(java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue> value) {
      validate(fields()[29], value);
      this.survivingSpouseIds = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'survivingSpouseIds' field has been set.
      * @return True if the 'survivingSpouseIds' field has been set, false otherwise.
      */
    public boolean hasSurvivingSpouseIds() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'survivingSpouseIds' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.AlternateIdentifiers.Builder clearSurvivingSpouseIds() {
      survivingSpouseIds = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AlternateIdentifiers build() {
      try {
        AlternateIdentifiers record = new AlternateIdentifiers();
        record.alternateIds = fieldSetFlags()[0] ? this.alternateIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[0]);
        record.alternateSubscriberId = fieldSetFlags()[1] ? this.alternateSubscriberId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.associationIdentifier = fieldSetFlags()[2] ? this.associationIdentifier : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.driversLicenseNumbers = fieldSetFlags()[3] ? this.driversLicenseNumbers : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[3]);
        record.employerAssignedIds = fieldSetFlags()[4] ? this.employerAssignedIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[4]);
        record.enterpriseIndividualIdentifier = fieldSetFlags()[5] ? this.enterpriseIndividualIdentifier : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.familyId = fieldSetFlags()[6] ? this.familyId : (java.lang.Integer) defaultValue(fields()[6]);
        record.healthInsuranceExchangeIds = fieldSetFlags()[7] ? this.healthInsuranceExchangeIds : (java.util.List<com.uhc.schema.model.eligibility.individual.HealthInsuranceExchangeId>) defaultValue(fields()[7]);
        record.healthSavingsAccountIds = fieldSetFlags()[8] ? this.healthSavingsAccountIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[8]);
        record.hicNumbers = fieldSetFlags()[9] ? this.hicNumbers : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[9]);
        record.householdIdentifier = fieldSetFlags()[10] ? this.householdIdentifier : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.legacyMemberIds = fieldSetFlags()[11] ? this.legacyMemberIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[11]);
        record.legacySourceFamilyId = fieldSetFlags()[12] ? this.legacySourceFamilyId : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.mbiNumberHistory = fieldSetFlags()[13] ? this.mbiNumberHistory : (java.util.List<com.uhc.schema.model.eligibility.individual.MbiNumberHistory>) defaultValue(fields()[13]);
        record.mbiNumbers = fieldSetFlags()[14] ? this.mbiNumbers : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[14]);
        record.medicaidRecipientNumbers = fieldSetFlags()[15] ? this.medicaidRecipientNumbers : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[15]);
        record.memberAlternateIds = fieldSetFlags()[16] ? this.memberAlternateIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[16]);
        record.memberFamilyLinkIds = fieldSetFlags()[17] ? this.memberFamilyLinkIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[17]);
        record.memberId = fieldSetFlags()[18] ? this.memberId : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.memberReplacementIds = fieldSetFlags()[19] ? this.memberReplacementIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[19]);
        record.nationalIdentifiers = fieldSetFlags()[20] ? this.nationalIdentifiers : (java.util.List<com.uhc.schema.model.eligibility.individual.NationalIdentifier>) defaultValue(fields()[20]);
        record.optumIds = fieldSetFlags()[21] ? this.optumIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[21]);
        record.optumLabsExternalKey = fieldSetFlags()[22] ? this.optumLabsExternalKey : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.optumLabsId = fieldSetFlags()[23] ? this.optumLabsId : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.portals = fieldSetFlags()[24] ? this.portals : (java.util.List<com.uhc.schema.model.eligibility.individual.Portal>) defaultValue(fields()[24]);
        record.priorMemberIds = fieldSetFlags()[25] ? this.priorMemberIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[25]);
        record.socialSecurityNumbers = fieldSetFlags()[26] ? this.socialSecurityNumbers : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[26]);
        record.sourceSystemIds = fieldSetFlags()[27] ? this.sourceSystemIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[27]);
        record.subscriberIds = fieldSetFlags()[28] ? this.subscriberIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[28]);
        record.survivingSpouseIds = fieldSetFlags()[29] ? this.survivingSpouseIds : (java.util.List<com.uhc.schema.model.eligibility.individual.AlternateIdentifierValue>) defaultValue(fields()[29]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AlternateIdentifiers>
    WRITER$ = (org.apache.avro.io.DatumWriter<AlternateIdentifiers>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AlternateIdentifiers>
    READER$ = (org.apache.avro.io.DatumReader<AlternateIdentifiers>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
