/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.cirrus;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CirrusIndividualSourceSystemAttributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2617728483365178674L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CirrusIndividualSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.cirrus\",\"fields\":[{\"name\":\"eligibilityHoldIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"internationalPhoneIndicator\",\"type\":\"boolean\",\"default\":false}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CirrusIndividualSourceSystemAttributes> ENCODER =
      new BinaryMessageEncoder<CirrusIndividualSourceSystemAttributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CirrusIndividualSourceSystemAttributes> DECODER =
      new BinaryMessageDecoder<CirrusIndividualSourceSystemAttributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CirrusIndividualSourceSystemAttributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CirrusIndividualSourceSystemAttributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CirrusIndividualSourceSystemAttributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CirrusIndividualSourceSystemAttributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CirrusIndividualSourceSystemAttributes from a ByteBuffer. */
  public static CirrusIndividualSourceSystemAttributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public boolean eligibilityHoldIndicator;
  @Deprecated public boolean internationalPhoneIndicator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CirrusIndividualSourceSystemAttributes() {}

  /**
   * All-args constructor.
   * @param eligibilityHoldIndicator The new value for eligibilityHoldIndicator
   * @param internationalPhoneIndicator The new value for internationalPhoneIndicator
   */
  public CirrusIndividualSourceSystemAttributes(java.lang.Boolean eligibilityHoldIndicator, java.lang.Boolean internationalPhoneIndicator) {
    this.eligibilityHoldIndicator = eligibilityHoldIndicator;
    this.internationalPhoneIndicator = internationalPhoneIndicator;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eligibilityHoldIndicator;
    case 1: return internationalPhoneIndicator;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eligibilityHoldIndicator = (java.lang.Boolean)value$; break;
    case 1: internationalPhoneIndicator = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'eligibilityHoldIndicator' field.
   * @return The value of the 'eligibilityHoldIndicator' field.
   */
  public java.lang.Boolean getEligibilityHoldIndicator() {
    return eligibilityHoldIndicator;
  }

  /**
   * Sets the value of the 'eligibilityHoldIndicator' field.
   * @param value the value to set.
   */
  public void setEligibilityHoldIndicator(java.lang.Boolean value) {
    this.eligibilityHoldIndicator = value;
  }

  /**
   * Gets the value of the 'internationalPhoneIndicator' field.
   * @return The value of the 'internationalPhoneIndicator' field.
   */
  public java.lang.Boolean getInternationalPhoneIndicator() {
    return internationalPhoneIndicator;
  }

  /**
   * Sets the value of the 'internationalPhoneIndicator' field.
   * @param value the value to set.
   */
  public void setInternationalPhoneIndicator(java.lang.Boolean value) {
    this.internationalPhoneIndicator = value;
  }

  /**
   * Creates a new CirrusIndividualSourceSystemAttributes RecordBuilder.
   * @return A new CirrusIndividualSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder();
  }

  /**
   * Creates a new CirrusIndividualSourceSystemAttributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CirrusIndividualSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder other) {
    return new com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder(other);
  }

  /**
   * Creates a new CirrusIndividualSourceSystemAttributes RecordBuilder by copying an existing CirrusIndividualSourceSystemAttributes instance.
   * @param other The existing instance to copy.
   * @return A new CirrusIndividualSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes other) {
    return new com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder(other);
  }

  /**
   * RecordBuilder for CirrusIndividualSourceSystemAttributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CirrusIndividualSourceSystemAttributes>
    implements org.apache.avro.data.RecordBuilder<CirrusIndividualSourceSystemAttributes> {

    private boolean eligibilityHoldIndicator;
    private boolean internationalPhoneIndicator;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eligibilityHoldIndicator)) {
        this.eligibilityHoldIndicator = data().deepCopy(fields()[0].schema(), other.eligibilityHoldIndicator);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.internationalPhoneIndicator)) {
        this.internationalPhoneIndicator = data().deepCopy(fields()[1].schema(), other.internationalPhoneIndicator);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CirrusIndividualSourceSystemAttributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.eligibilityHoldIndicator)) {
        this.eligibilityHoldIndicator = data().deepCopy(fields()[0].schema(), other.eligibilityHoldIndicator);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.internationalPhoneIndicator)) {
        this.internationalPhoneIndicator = data().deepCopy(fields()[1].schema(), other.internationalPhoneIndicator);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'eligibilityHoldIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getEligibilityHoldIndicator() {
      return eligibilityHoldIndicator;
    }

    /**
      * Sets the value of the 'eligibilityHoldIndicator' field.
      * @param value The value of 'eligibilityHoldIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder setEligibilityHoldIndicator(boolean value) {
      validate(fields()[0], value);
      this.eligibilityHoldIndicator = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eligibilityHoldIndicator' field has been set.
      * @return True if the 'eligibilityHoldIndicator' field has been set, false otherwise.
      */
    public boolean hasEligibilityHoldIndicator() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eligibilityHoldIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder clearEligibilityHoldIndicator() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'internationalPhoneIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getInternationalPhoneIndicator() {
      return internationalPhoneIndicator;
    }

    /**
      * Sets the value of the 'internationalPhoneIndicator' field.
      * @param value The value of 'internationalPhoneIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder setInternationalPhoneIndicator(boolean value) {
      validate(fields()[1], value);
      this.internationalPhoneIndicator = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'internationalPhoneIndicator' field has been set.
      * @return True if the 'internationalPhoneIndicator' field has been set, false otherwise.
      */
    public boolean hasInternationalPhoneIndicator() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'internationalPhoneIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cirrus.CirrusIndividualSourceSystemAttributes.Builder clearInternationalPhoneIndicator() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CirrusIndividualSourceSystemAttributes build() {
      try {
        CirrusIndividualSourceSystemAttributes record = new CirrusIndividualSourceSystemAttributes();
        record.eligibilityHoldIndicator = fieldSetFlags()[0] ? this.eligibilityHoldIndicator : (java.lang.Boolean) defaultValue(fields()[0]);
        record.internationalPhoneIndicator = fieldSetFlags()[1] ? this.internationalPhoneIndicator : (java.lang.Boolean) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CirrusIndividualSourceSystemAttributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<CirrusIndividualSourceSystemAttributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CirrusIndividualSourceSystemAttributes>
    READER$ = (org.apache.avro.io.DatumReader<CirrusIndividualSourceSystemAttributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
