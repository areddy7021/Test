/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.individual;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PhysicalAttributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2605571813263068743L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PhysicalAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"height\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"weight\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PhysicalAttributes> ENCODER =
      new BinaryMessageEncoder<PhysicalAttributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PhysicalAttributes> DECODER =
      new BinaryMessageDecoder<PhysicalAttributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<PhysicalAttributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<PhysicalAttributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PhysicalAttributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this PhysicalAttributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a PhysicalAttributes from a ByteBuffer. */
  public static PhysicalAttributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence height;
  @Deprecated public java.lang.CharSequence weight;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PhysicalAttributes() {}

  /**
   * All-args constructor.
   * @param height The new value for height
   * @param weight The new value for weight
   */
  public PhysicalAttributes(java.lang.CharSequence height, java.lang.CharSequence weight) {
    this.height = height;
    this.weight = weight;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return height;
    case 1: return weight;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: height = (java.lang.CharSequence)value$; break;
    case 1: weight = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'height' field.
   * @return The value of the 'height' field.
   */
  public java.lang.CharSequence getHeight() {
    return height;
  }

  /**
   * Sets the value of the 'height' field.
   * @param value the value to set.
   */
  public void setHeight(java.lang.CharSequence value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'weight' field.
   * @return The value of the 'weight' field.
   */
  public java.lang.CharSequence getWeight() {
    return weight;
  }

  /**
   * Sets the value of the 'weight' field.
   * @param value the value to set.
   */
  public void setWeight(java.lang.CharSequence value) {
    this.weight = value;
  }

  /**
   * Creates a new PhysicalAttributes RecordBuilder.
   * @return A new PhysicalAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder();
  }

  /**
   * Creates a new PhysicalAttributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PhysicalAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder other) {
    return new com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder(other);
  }

  /**
   * Creates a new PhysicalAttributes RecordBuilder by copying an existing PhysicalAttributes instance.
   * @param other The existing instance to copy.
   * @return A new PhysicalAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.individual.PhysicalAttributes other) {
    return new com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder(other);
  }

  /**
   * RecordBuilder for PhysicalAttributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PhysicalAttributes>
    implements org.apache.avro.data.RecordBuilder<PhysicalAttributes> {

    private java.lang.CharSequence height;
    private java.lang.CharSequence weight;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.height)) {
        this.height = data().deepCopy(fields()[0].schema(), other.height);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.weight)) {
        this.weight = data().deepCopy(fields()[1].schema(), other.weight);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PhysicalAttributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.PhysicalAttributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.height)) {
        this.height = data().deepCopy(fields()[0].schema(), other.height);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.weight)) {
        this.weight = data().deepCopy(fields()[1].schema(), other.weight);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'height' field.
      * @return The value.
      */
    public java.lang.CharSequence getHeight() {
      return height;
    }

    /**
      * Sets the value of the 'height' field.
      * @param value The value of 'height'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder setHeight(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.height = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'height' field has been set.
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'height' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder clearHeight() {
      height = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'weight' field.
      * @return The value.
      */
    public java.lang.CharSequence getWeight() {
      return weight;
    }

    /**
      * Sets the value of the 'weight' field.
      * @param value The value of 'weight'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder setWeight(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.weight = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'weight' field has been set.
      * @return True if the 'weight' field has been set, false otherwise.
      */
    public boolean hasWeight() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'weight' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.PhysicalAttributes.Builder clearWeight() {
      weight = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PhysicalAttributes build() {
      try {
        PhysicalAttributes record = new PhysicalAttributes();
        record.height = fieldSetFlags()[0] ? this.height : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.weight = fieldSetFlags()[1] ? this.weight : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PhysicalAttributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<PhysicalAttributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PhysicalAttributes>
    READER$ = (org.apache.avro.io.DatumReader<PhysicalAttributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
