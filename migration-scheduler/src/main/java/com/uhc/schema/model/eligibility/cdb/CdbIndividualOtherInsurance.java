/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.cdb;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CdbIndividualOtherInsurance extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1947955980408621177L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CdbIndividualOtherInsurance\",\"namespace\":\"com.uhc.schema.model.eligibility.cdb\",\"fields\":[{\"name\":\"coverageTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"custody\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"doc\":\"custody types.\",\"default\":null},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"otherInsuranceIndicator\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sourceUpdateTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"updateRestrictionTypeCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"verificationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CdbIndividualOtherInsurance> ENCODER =
      new BinaryMessageEncoder<CdbIndividualOtherInsurance>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CdbIndividualOtherInsurance> DECODER =
      new BinaryMessageDecoder<CdbIndividualOtherInsurance>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CdbIndividualOtherInsurance> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CdbIndividualOtherInsurance> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CdbIndividualOtherInsurance>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CdbIndividualOtherInsurance to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CdbIndividualOtherInsurance from a ByteBuffer. */
  public static CdbIndividualOtherInsurance fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence coverageTypeCode;
  /** custody types. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType custody;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence effectiveDate;
  @Deprecated public boolean otherInsuranceIndicator;
  @Deprecated public java.lang.CharSequence sourceUpdateTypeCode;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence terminationDate;
  @Deprecated public java.lang.CharSequence updateRestrictionTypeCode;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence verificationDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CdbIndividualOtherInsurance() {}

  /**
   * All-args constructor.
   * @param coverageTypeCode The new value for coverageTypeCode
   * @param custody custody types.
   * @param effectiveDate Date format: CCYY-MM-DD
   * @param otherInsuranceIndicator The new value for otherInsuranceIndicator
   * @param sourceUpdateTypeCode The new value for sourceUpdateTypeCode
   * @param terminationDate Date format: CCYY-MM-DD
   * @param updateRestrictionTypeCode The new value for updateRestrictionTypeCode
   * @param verificationDate Date format: CCYY-MM-DD
   */
  public CdbIndividualOtherInsurance(java.lang.CharSequence coverageTypeCode, com.uhc.schema.model.eligibility.common.DescriptionType custody, java.lang.CharSequence effectiveDate, java.lang.Boolean otherInsuranceIndicator, java.lang.CharSequence sourceUpdateTypeCode, java.lang.CharSequence terminationDate, java.lang.CharSequence updateRestrictionTypeCode, java.lang.CharSequence verificationDate) {
    this.coverageTypeCode = coverageTypeCode;
    this.custody = custody;
    this.effectiveDate = effectiveDate;
    this.otherInsuranceIndicator = otherInsuranceIndicator;
    this.sourceUpdateTypeCode = sourceUpdateTypeCode;
    this.terminationDate = terminationDate;
    this.updateRestrictionTypeCode = updateRestrictionTypeCode;
    this.verificationDate = verificationDate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return coverageTypeCode;
    case 1: return custody;
    case 2: return effectiveDate;
    case 3: return otherInsuranceIndicator;
    case 4: return sourceUpdateTypeCode;
    case 5: return terminationDate;
    case 6: return updateRestrictionTypeCode;
    case 7: return verificationDate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: coverageTypeCode = (java.lang.CharSequence)value$; break;
    case 1: custody = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    case 2: effectiveDate = (java.lang.CharSequence)value$; break;
    case 3: otherInsuranceIndicator = (java.lang.Boolean)value$; break;
    case 4: sourceUpdateTypeCode = (java.lang.CharSequence)value$; break;
    case 5: terminationDate = (java.lang.CharSequence)value$; break;
    case 6: updateRestrictionTypeCode = (java.lang.CharSequence)value$; break;
    case 7: verificationDate = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'coverageTypeCode' field.
   * @return The value of the 'coverageTypeCode' field.
   */
  public java.lang.CharSequence getCoverageTypeCode() {
    return coverageTypeCode;
  }

  /**
   * Sets the value of the 'coverageTypeCode' field.
   * @param value the value to set.
   */
  public void setCoverageTypeCode(java.lang.CharSequence value) {
    this.coverageTypeCode = value;
  }

  /**
   * Gets the value of the 'custody' field.
   * @return custody types.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getCustody() {
    return custody;
  }

  /**
   * Sets the value of the 'custody' field.
   * custody types.
   * @param value the value to set.
   */
  public void setCustody(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.custody = value;
  }

  /**
   * Gets the value of the 'effectiveDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getEffectiveDate() {
    return effectiveDate;
  }

  /**
   * Sets the value of the 'effectiveDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setEffectiveDate(java.lang.CharSequence value) {
    this.effectiveDate = value;
  }

  /**
   * Gets the value of the 'otherInsuranceIndicator' field.
   * @return The value of the 'otherInsuranceIndicator' field.
   */
  public java.lang.Boolean getOtherInsuranceIndicator() {
    return otherInsuranceIndicator;
  }

  /**
   * Sets the value of the 'otherInsuranceIndicator' field.
   * @param value the value to set.
   */
  public void setOtherInsuranceIndicator(java.lang.Boolean value) {
    this.otherInsuranceIndicator = value;
  }

  /**
   * Gets the value of the 'sourceUpdateTypeCode' field.
   * @return The value of the 'sourceUpdateTypeCode' field.
   */
  public java.lang.CharSequence getSourceUpdateTypeCode() {
    return sourceUpdateTypeCode;
  }

  /**
   * Sets the value of the 'sourceUpdateTypeCode' field.
   * @param value the value to set.
   */
  public void setSourceUpdateTypeCode(java.lang.CharSequence value) {
    this.sourceUpdateTypeCode = value;
  }

  /**
   * Gets the value of the 'terminationDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getTerminationDate() {
    return terminationDate;
  }

  /**
   * Sets the value of the 'terminationDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setTerminationDate(java.lang.CharSequence value) {
    this.terminationDate = value;
  }

  /**
   * Gets the value of the 'updateRestrictionTypeCode' field.
   * @return The value of the 'updateRestrictionTypeCode' field.
   */
  public java.lang.CharSequence getUpdateRestrictionTypeCode() {
    return updateRestrictionTypeCode;
  }

  /**
   * Sets the value of the 'updateRestrictionTypeCode' field.
   * @param value the value to set.
   */
  public void setUpdateRestrictionTypeCode(java.lang.CharSequence value) {
    this.updateRestrictionTypeCode = value;
  }

  /**
   * Gets the value of the 'verificationDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getVerificationDate() {
    return verificationDate;
  }

  /**
   * Sets the value of the 'verificationDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setVerificationDate(java.lang.CharSequence value) {
    this.verificationDate = value;
  }

  /**
   * Creates a new CdbIndividualOtherInsurance RecordBuilder.
   * @return A new CdbIndividualOtherInsurance RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder();
  }

  /**
   * Creates a new CdbIndividualOtherInsurance RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CdbIndividualOtherInsurance RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder newBuilder(com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder other) {
    return new com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder(other);
  }

  /**
   * Creates a new CdbIndividualOtherInsurance RecordBuilder by copying an existing CdbIndividualOtherInsurance instance.
   * @param other The existing instance to copy.
   * @return A new CdbIndividualOtherInsurance RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder newBuilder(com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance other) {
    return new com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder(other);
  }

  /**
   * RecordBuilder for CdbIndividualOtherInsurance instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CdbIndividualOtherInsurance>
    implements org.apache.avro.data.RecordBuilder<CdbIndividualOtherInsurance> {

    private java.lang.CharSequence coverageTypeCode;
    /** custody types. */
    private com.uhc.schema.model.eligibility.common.DescriptionType custody;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder custodyBuilder;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence effectiveDate;
    private boolean otherInsuranceIndicator;
    private java.lang.CharSequence sourceUpdateTypeCode;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence terminationDate;
    private java.lang.CharSequence updateRestrictionTypeCode;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence verificationDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.coverageTypeCode)) {
        this.coverageTypeCode = data().deepCopy(fields()[0].schema(), other.coverageTypeCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.custody)) {
        this.custody = data().deepCopy(fields()[1].schema(), other.custody);
        fieldSetFlags()[1] = true;
      }
      if (other.hasCustodyBuilder()) {
        this.custodyBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getCustodyBuilder());
      }
      if (isValidValue(fields()[2], other.effectiveDate)) {
        this.effectiveDate = data().deepCopy(fields()[2].schema(), other.effectiveDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.otherInsuranceIndicator)) {
        this.otherInsuranceIndicator = data().deepCopy(fields()[3].schema(), other.otherInsuranceIndicator);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sourceUpdateTypeCode)) {
        this.sourceUpdateTypeCode = data().deepCopy(fields()[4].schema(), other.sourceUpdateTypeCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.terminationDate)) {
        this.terminationDate = data().deepCopy(fields()[5].schema(), other.terminationDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.updateRestrictionTypeCode)) {
        this.updateRestrictionTypeCode = data().deepCopy(fields()[6].schema(), other.updateRestrictionTypeCode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.verificationDate)) {
        this.verificationDate = data().deepCopy(fields()[7].schema(), other.verificationDate);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CdbIndividualOtherInsurance instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.coverageTypeCode)) {
        this.coverageTypeCode = data().deepCopy(fields()[0].schema(), other.coverageTypeCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.custody)) {
        this.custody = data().deepCopy(fields()[1].schema(), other.custody);
        fieldSetFlags()[1] = true;
      }
      this.custodyBuilder = null;
      if (isValidValue(fields()[2], other.effectiveDate)) {
        this.effectiveDate = data().deepCopy(fields()[2].schema(), other.effectiveDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.otherInsuranceIndicator)) {
        this.otherInsuranceIndicator = data().deepCopy(fields()[3].schema(), other.otherInsuranceIndicator);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sourceUpdateTypeCode)) {
        this.sourceUpdateTypeCode = data().deepCopy(fields()[4].schema(), other.sourceUpdateTypeCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.terminationDate)) {
        this.terminationDate = data().deepCopy(fields()[5].schema(), other.terminationDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.updateRestrictionTypeCode)) {
        this.updateRestrictionTypeCode = data().deepCopy(fields()[6].schema(), other.updateRestrictionTypeCode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.verificationDate)) {
        this.verificationDate = data().deepCopy(fields()[7].schema(), other.verificationDate);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'coverageTypeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getCoverageTypeCode() {
      return coverageTypeCode;
    }

    /**
      * Sets the value of the 'coverageTypeCode' field.
      * @param value The value of 'coverageTypeCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder setCoverageTypeCode(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.coverageTypeCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'coverageTypeCode' field has been set.
      * @return True if the 'coverageTypeCode' field has been set, false otherwise.
      */
    public boolean hasCoverageTypeCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'coverageTypeCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder clearCoverageTypeCode() {
      coverageTypeCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'custody' field.
      * custody types.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getCustody() {
      return custody;
    }

    /**
      * Sets the value of the 'custody' field.
      * custody types.
      * @param value The value of 'custody'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder setCustody(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[1], value);
      this.custodyBuilder = null;
      this.custody = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'custody' field has been set.
      * custody types.
      * @return True if the 'custody' field has been set, false otherwise.
      */
    public boolean hasCustody() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'custody' field and creates one if it doesn't exist yet.
     * custody types.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getCustodyBuilder() {
      if (custodyBuilder == null) {
        if (hasCustody()) {
          setCustodyBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(custody));
        } else {
          setCustodyBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return custodyBuilder;
    }

    /**
     * Sets the Builder instance for the 'custody' field
     * custody types.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder setCustodyBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearCustody();
      custodyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'custody' field has an active Builder instance
     * custody types.
     * @return True if the 'custody' field has an active Builder instance
     */
    public boolean hasCustodyBuilder() {
      return custodyBuilder != null;
    }

    /**
      * Clears the value of the 'custody' field.
      * custody types.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder clearCustody() {
      custody = null;
      custodyBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'effectiveDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getEffectiveDate() {
      return effectiveDate;
    }

    /**
      * Sets the value of the 'effectiveDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'effectiveDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder setEffectiveDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.effectiveDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'effectiveDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'effectiveDate' field has been set, false otherwise.
      */
    public boolean hasEffectiveDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'effectiveDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder clearEffectiveDate() {
      effectiveDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'otherInsuranceIndicator' field.
      * @return The value.
      */
    public java.lang.Boolean getOtherInsuranceIndicator() {
      return otherInsuranceIndicator;
    }

    /**
      * Sets the value of the 'otherInsuranceIndicator' field.
      * @param value The value of 'otherInsuranceIndicator'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder setOtherInsuranceIndicator(boolean value) {
      validate(fields()[3], value);
      this.otherInsuranceIndicator = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'otherInsuranceIndicator' field has been set.
      * @return True if the 'otherInsuranceIndicator' field has been set, false otherwise.
      */
    public boolean hasOtherInsuranceIndicator() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'otherInsuranceIndicator' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder clearOtherInsuranceIndicator() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceUpdateTypeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceUpdateTypeCode() {
      return sourceUpdateTypeCode;
    }

    /**
      * Sets the value of the 'sourceUpdateTypeCode' field.
      * @param value The value of 'sourceUpdateTypeCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder setSourceUpdateTypeCode(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.sourceUpdateTypeCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceUpdateTypeCode' field has been set.
      * @return True if the 'sourceUpdateTypeCode' field has been set, false otherwise.
      */
    public boolean hasSourceUpdateTypeCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'sourceUpdateTypeCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder clearSourceUpdateTypeCode() {
      sourceUpdateTypeCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'terminationDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getTerminationDate() {
      return terminationDate;
    }

    /**
      * Sets the value of the 'terminationDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'terminationDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder setTerminationDate(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.terminationDate = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'terminationDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'terminationDate' field has been set, false otherwise.
      */
    public boolean hasTerminationDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'terminationDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder clearTerminationDate() {
      terminationDate = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'updateRestrictionTypeCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getUpdateRestrictionTypeCode() {
      return updateRestrictionTypeCode;
    }

    /**
      * Sets the value of the 'updateRestrictionTypeCode' field.
      * @param value The value of 'updateRestrictionTypeCode'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder setUpdateRestrictionTypeCode(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.updateRestrictionTypeCode = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'updateRestrictionTypeCode' field has been set.
      * @return True if the 'updateRestrictionTypeCode' field has been set, false otherwise.
      */
    public boolean hasUpdateRestrictionTypeCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'updateRestrictionTypeCode' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder clearUpdateRestrictionTypeCode() {
      updateRestrictionTypeCode = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'verificationDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getVerificationDate() {
      return verificationDate;
    }

    /**
      * Sets the value of the 'verificationDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'verificationDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder setVerificationDate(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.verificationDate = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'verificationDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'verificationDate' field has been set, false otherwise.
      */
    public boolean hasVerificationDate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'verificationDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cdb.CdbIndividualOtherInsurance.Builder clearVerificationDate() {
      verificationDate = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CdbIndividualOtherInsurance build() {
      try {
        CdbIndividualOtherInsurance record = new CdbIndividualOtherInsurance();
        record.coverageTypeCode = fieldSetFlags()[0] ? this.coverageTypeCode : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (custodyBuilder != null) {
          record.custody = this.custodyBuilder.build();
        } else {
          record.custody = fieldSetFlags()[1] ? this.custody : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[1]);
        }
        record.effectiveDate = fieldSetFlags()[2] ? this.effectiveDate : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.otherInsuranceIndicator = fieldSetFlags()[3] ? this.otherInsuranceIndicator : (java.lang.Boolean) defaultValue(fields()[3]);
        record.sourceUpdateTypeCode = fieldSetFlags()[4] ? this.sourceUpdateTypeCode : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.terminationDate = fieldSetFlags()[5] ? this.terminationDate : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.updateRestrictionTypeCode = fieldSetFlags()[6] ? this.updateRestrictionTypeCode : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.verificationDate = fieldSetFlags()[7] ? this.verificationDate : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CdbIndividualOtherInsurance>
    WRITER$ = (org.apache.avro.io.DatumWriter<CdbIndividualOtherInsurance>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CdbIndividualOtherInsurance>
    READER$ = (org.apache.avro.io.DatumReader<CdbIndividualOtherInsurance>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
