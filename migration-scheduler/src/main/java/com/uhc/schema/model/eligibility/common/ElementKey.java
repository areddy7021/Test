/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.common;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** A record describing the primary key of a given array element. */
@org.apache.avro.specific.AvroGenerated
public class ElementKey extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8148120918610560677L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ElementKey\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"doc\":\"A record describing the primary key of a given array element.\",\"fields\":[{\"name\":\"path\",\"type\":\"string\",\"doc\":\"The (relative) dot-notated path to a primary key field for this array element. e.g. membershipDetail.identifier\",\"default\":\"\"},{\"name\":\"value\",\"type\":\"string\",\"doc\":\"The value for this primary key field.\",\"default\":\"\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ElementKey> ENCODER =
      new BinaryMessageEncoder<ElementKey>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ElementKey> DECODER =
      new BinaryMessageDecoder<ElementKey>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ElementKey> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ElementKey> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ElementKey>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ElementKey to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ElementKey from a ByteBuffer. */
  public static ElementKey fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The (relative) dot-notated path to a primary key field for this array element. e.g. membershipDetail.identifier */
  @Deprecated public java.lang.CharSequence path;
  /** The value for this primary key field. */
  @Deprecated public java.lang.CharSequence value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ElementKey() {}

  /**
   * All-args constructor.
   * @param path The (relative) dot-notated path to a primary key field for this array element. e.g. membershipDetail.identifier
   * @param value The value for this primary key field.
   */
  public ElementKey(java.lang.CharSequence path, java.lang.CharSequence value) {
    this.path = path;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return path;
    case 1: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: path = (java.lang.CharSequence)value$; break;
    case 1: value = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'path' field.
   * @return The (relative) dot-notated path to a primary key field for this array element. e.g. membershipDetail.identifier
   */
  public java.lang.CharSequence getPath() {
    return path;
  }

  /**
   * Sets the value of the 'path' field.
   * The (relative) dot-notated path to a primary key field for this array element. e.g. membershipDetail.identifier
   * @param value the value to set.
   */
  public void setPath(java.lang.CharSequence value) {
    this.path = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value for this primary key field.
   */
  public java.lang.CharSequence getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * The value for this primary key field.
   * @param value the value to set.
   */
  public void setValue(java.lang.CharSequence value) {
    this.value = value;
  }

  /**
   * Creates a new ElementKey RecordBuilder.
   * @return A new ElementKey RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.common.ElementKey.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.common.ElementKey.Builder();
  }

  /**
   * Creates a new ElementKey RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ElementKey RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.common.ElementKey.Builder newBuilder(com.uhc.schema.model.eligibility.common.ElementKey.Builder other) {
    return new com.uhc.schema.model.eligibility.common.ElementKey.Builder(other);
  }

  /**
   * Creates a new ElementKey RecordBuilder by copying an existing ElementKey instance.
   * @param other The existing instance to copy.
   * @return A new ElementKey RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.common.ElementKey.Builder newBuilder(com.uhc.schema.model.eligibility.common.ElementKey other) {
    return new com.uhc.schema.model.eligibility.common.ElementKey.Builder(other);
  }

  /**
   * RecordBuilder for ElementKey instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ElementKey>
    implements org.apache.avro.data.RecordBuilder<ElementKey> {

    /** The (relative) dot-notated path to a primary key field for this array element. e.g. membershipDetail.identifier */
    private java.lang.CharSequence path;
    /** The value for this primary key field. */
    private java.lang.CharSequence value;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.common.ElementKey.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.path)) {
        this.path = data().deepCopy(fields()[0].schema(), other.path);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ElementKey instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.common.ElementKey other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.path)) {
        this.path = data().deepCopy(fields()[0].schema(), other.path);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'path' field.
      * The (relative) dot-notated path to a primary key field for this array element. e.g. membershipDetail.identifier
      * @return The value.
      */
    public java.lang.CharSequence getPath() {
      return path;
    }

    /**
      * Sets the value of the 'path' field.
      * The (relative) dot-notated path to a primary key field for this array element. e.g. membershipDetail.identifier
      * @param value The value of 'path'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.common.ElementKey.Builder setPath(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.path = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'path' field has been set.
      * The (relative) dot-notated path to a primary key field for this array element. e.g. membershipDetail.identifier
      * @return True if the 'path' field has been set, false otherwise.
      */
    public boolean hasPath() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'path' field.
      * The (relative) dot-notated path to a primary key field for this array element. e.g. membershipDetail.identifier
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.common.ElementKey.Builder clearPath() {
      path = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * The value for this primary key field.
      * @return The value.
      */
    public java.lang.CharSequence getValue() {
      return value;
    }

    /**
      * Sets the value of the 'value' field.
      * The value for this primary key field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.common.ElementKey.Builder setValue(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.value = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * The value for this primary key field.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'value' field.
      * The value for this primary key field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.common.ElementKey.Builder clearValue() {
      value = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ElementKey build() {
      try {
        ElementKey record = new ElementKey();
        record.path = fieldSetFlags()[0] ? this.path : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.value = fieldSetFlags()[1] ? this.value : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ElementKey>
    WRITER$ = (org.apache.avro.io.DatumWriter<ElementKey>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ElementKey>
    READER$ = (org.apache.avro.io.DatumReader<ElementKey>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
