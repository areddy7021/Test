/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.cirrus;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CirrusMembershipSourceSystemAttributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5884955529955316057L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CirrusMembershipSourceSystemAttributes\",\"namespace\":\"com.uhc.schema.model.eligibility.cirrus\",\"fields\":[{\"name\":\"coverageLevelHistory\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CoverageLevelHistory\",\"fields\":[{\"name\":\"coverageLevel\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null}]}}],\"default\":null},{\"name\":\"originalEffectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CirrusMembershipSourceSystemAttributes> ENCODER =
      new BinaryMessageEncoder<CirrusMembershipSourceSystemAttributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CirrusMembershipSourceSystemAttributes> DECODER =
      new BinaryMessageDecoder<CirrusMembershipSourceSystemAttributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CirrusMembershipSourceSystemAttributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CirrusMembershipSourceSystemAttributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CirrusMembershipSourceSystemAttributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CirrusMembershipSourceSystemAttributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CirrusMembershipSourceSystemAttributes from a ByteBuffer. */
  public static CirrusMembershipSourceSystemAttributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.util.List<com.uhc.schema.model.eligibility.cirrus.CoverageLevelHistory> coverageLevelHistory;
  /** Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence originalEffectiveDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CirrusMembershipSourceSystemAttributes() {}

  /**
   * All-args constructor.
   * @param coverageLevelHistory The new value for coverageLevelHistory
   * @param originalEffectiveDate Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD
   */
  public CirrusMembershipSourceSystemAttributes(java.util.List<com.uhc.schema.model.eligibility.cirrus.CoverageLevelHistory> coverageLevelHistory, java.lang.CharSequence originalEffectiveDate) {
    this.coverageLevelHistory = coverageLevelHistory;
    this.originalEffectiveDate = originalEffectiveDate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return coverageLevelHistory;
    case 1: return originalEffectiveDate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: coverageLevelHistory = (java.util.List<com.uhc.schema.model.eligibility.cirrus.CoverageLevelHistory>)value$; break;
    case 1: originalEffectiveDate = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'coverageLevelHistory' field.
   * @return The value of the 'coverageLevelHistory' field.
   */
  public java.util.List<com.uhc.schema.model.eligibility.cirrus.CoverageLevelHistory> getCoverageLevelHistory() {
    return coverageLevelHistory;
  }

  /**
   * Sets the value of the 'coverageLevelHistory' field.
   * @param value the value to set.
   */
  public void setCoverageLevelHistory(java.util.List<com.uhc.schema.model.eligibility.cirrus.CoverageLevelHistory> value) {
    this.coverageLevelHistory = value;
  }

  /**
   * Gets the value of the 'originalEffectiveDate' field.
   * @return Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getOriginalEffectiveDate() {
    return originalEffectiveDate;
  }

  /**
   * Sets the value of the 'originalEffectiveDate' field.
   * Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setOriginalEffectiveDate(java.lang.CharSequence value) {
    this.originalEffectiveDate = value;
  }

  /**
   * Creates a new CirrusMembershipSourceSystemAttributes RecordBuilder.
   * @return A new CirrusMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder();
  }

  /**
   * Creates a new CirrusMembershipSourceSystemAttributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CirrusMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder other) {
    return new com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder(other);
  }

  /**
   * Creates a new CirrusMembershipSourceSystemAttributes RecordBuilder by copying an existing CirrusMembershipSourceSystemAttributes instance.
   * @param other The existing instance to copy.
   * @return A new CirrusMembershipSourceSystemAttributes RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder newBuilder(com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes other) {
    return new com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder(other);
  }

  /**
   * RecordBuilder for CirrusMembershipSourceSystemAttributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CirrusMembershipSourceSystemAttributes>
    implements org.apache.avro.data.RecordBuilder<CirrusMembershipSourceSystemAttributes> {

    private java.util.List<com.uhc.schema.model.eligibility.cirrus.CoverageLevelHistory> coverageLevelHistory;
    /** Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD */
    private java.lang.CharSequence originalEffectiveDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.coverageLevelHistory)) {
        this.coverageLevelHistory = data().deepCopy(fields()[0].schema(), other.coverageLevelHistory);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.originalEffectiveDate)) {
        this.originalEffectiveDate = data().deepCopy(fields()[1].schema(), other.originalEffectiveDate);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CirrusMembershipSourceSystemAttributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.coverageLevelHistory)) {
        this.coverageLevelHistory = data().deepCopy(fields()[0].schema(), other.coverageLevelHistory);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.originalEffectiveDate)) {
        this.originalEffectiveDate = data().deepCopy(fields()[1].schema(), other.originalEffectiveDate);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'coverageLevelHistory' field.
      * @return The value.
      */
    public java.util.List<com.uhc.schema.model.eligibility.cirrus.CoverageLevelHistory> getCoverageLevelHistory() {
      return coverageLevelHistory;
    }

    /**
      * Sets the value of the 'coverageLevelHistory' field.
      * @param value The value of 'coverageLevelHistory'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder setCoverageLevelHistory(java.util.List<com.uhc.schema.model.eligibility.cirrus.CoverageLevelHistory> value) {
      validate(fields()[0], value);
      this.coverageLevelHistory = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'coverageLevelHistory' field has been set.
      * @return True if the 'coverageLevelHistory' field has been set, false otherwise.
      */
    public boolean hasCoverageLevelHistory() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'coverageLevelHistory' field.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder clearCoverageLevelHistory() {
      coverageLevelHistory = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'originalEffectiveDate' field.
      * Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getOriginalEffectiveDate() {
      return originalEffectiveDate;
    }

    /**
      * Sets the value of the 'originalEffectiveDate' field.
      * Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD
      * @param value The value of 'originalEffectiveDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder setOriginalEffectiveDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.originalEffectiveDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'originalEffectiveDate' field has been set.
      * Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD
      * @return True if the 'originalEffectiveDate' field has been set, false otherwise.
      */
    public boolean hasOriginalEffectiveDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'originalEffectiveDate' field.
      * Cirrus specific Effective Date for the membership record. Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.cirrus.CirrusMembershipSourceSystemAttributes.Builder clearOriginalEffectiveDate() {
      originalEffectiveDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CirrusMembershipSourceSystemAttributes build() {
      try {
        CirrusMembershipSourceSystemAttributes record = new CirrusMembershipSourceSystemAttributes();
        record.coverageLevelHistory = fieldSetFlags()[0] ? this.coverageLevelHistory : (java.util.List<com.uhc.schema.model.eligibility.cirrus.CoverageLevelHistory>) defaultValue(fields()[0]);
        record.originalEffectiveDate = fieldSetFlags()[1] ? this.originalEffectiveDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CirrusMembershipSourceSystemAttributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<CirrusMembershipSourceSystemAttributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CirrusMembershipSourceSystemAttributes>
    READER$ = (org.apache.avro.io.DatumReader<CirrusMembershipSourceSystemAttributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
