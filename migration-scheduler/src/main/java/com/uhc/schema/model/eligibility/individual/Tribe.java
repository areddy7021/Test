/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.eligibility.individual;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Tribe extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 254155006629794142L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Tribe\",\"namespace\":\"com.uhc.schema.model.eligibility.individual\",\"fields\":[{\"name\":\"comments\",\"type\":[\"null\",\"string\"],\"doc\":\"Comment for the Individual's tribe.\",\"default\":null},{\"name\":\"effectiveDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"terminationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date format: CCYY-MM-DD\",\"default\":null},{\"name\":\"tribeType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DescriptionType\",\"namespace\":\"com.uhc.schema.model.eligibility.common\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"doc\":\"Code description pair for the Individual's tribe type.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Tribe> ENCODER =
      new BinaryMessageEncoder<Tribe>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Tribe> DECODER =
      new BinaryMessageDecoder<Tribe>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Tribe> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Tribe> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Tribe>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Tribe to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Tribe from a ByteBuffer. */
  public static Tribe fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Comment for the Individual's tribe. */
  @Deprecated public java.lang.CharSequence comments;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence effectiveDate;
  /** Date format: CCYY-MM-DD */
  @Deprecated public java.lang.CharSequence terminationDate;
  /** Code description pair for the Individual's tribe type. */
  @Deprecated public com.uhc.schema.model.eligibility.common.DescriptionType tribeType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Tribe() {}

  /**
   * All-args constructor.
   * @param comments Comment for the Individual's tribe.
   * @param effectiveDate Date format: CCYY-MM-DD
   * @param terminationDate Date format: CCYY-MM-DD
   * @param tribeType Code description pair for the Individual's tribe type.
   */
  public Tribe(java.lang.CharSequence comments, java.lang.CharSequence effectiveDate, java.lang.CharSequence terminationDate, com.uhc.schema.model.eligibility.common.DescriptionType tribeType) {
    this.comments = comments;
    this.effectiveDate = effectiveDate;
    this.terminationDate = terminationDate;
    this.tribeType = tribeType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return comments;
    case 1: return effectiveDate;
    case 2: return terminationDate;
    case 3: return tribeType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: comments = (java.lang.CharSequence)value$; break;
    case 1: effectiveDate = (java.lang.CharSequence)value$; break;
    case 2: terminationDate = (java.lang.CharSequence)value$; break;
    case 3: tribeType = (com.uhc.schema.model.eligibility.common.DescriptionType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'comments' field.
   * @return Comment for the Individual's tribe.
   */
  public java.lang.CharSequence getComments() {
    return comments;
  }

  /**
   * Sets the value of the 'comments' field.
   * Comment for the Individual's tribe.
   * @param value the value to set.
   */
  public void setComments(java.lang.CharSequence value) {
    this.comments = value;
  }

  /**
   * Gets the value of the 'effectiveDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getEffectiveDate() {
    return effectiveDate;
  }

  /**
   * Sets the value of the 'effectiveDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setEffectiveDate(java.lang.CharSequence value) {
    this.effectiveDate = value;
  }

  /**
   * Gets the value of the 'terminationDate' field.
   * @return Date format: CCYY-MM-DD
   */
  public java.lang.CharSequence getTerminationDate() {
    return terminationDate;
  }

  /**
   * Sets the value of the 'terminationDate' field.
   * Date format: CCYY-MM-DD
   * @param value the value to set.
   */
  public void setTerminationDate(java.lang.CharSequence value) {
    this.terminationDate = value;
  }

  /**
   * Gets the value of the 'tribeType' field.
   * @return Code description pair for the Individual's tribe type.
   */
  public com.uhc.schema.model.eligibility.common.DescriptionType getTribeType() {
    return tribeType;
  }

  /**
   * Sets the value of the 'tribeType' field.
   * Code description pair for the Individual's tribe type.
   * @param value the value to set.
   */
  public void setTribeType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
    this.tribeType = value;
  }

  /**
   * Creates a new Tribe RecordBuilder.
   * @return A new Tribe RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.Tribe.Builder newBuilder() {
    return new com.uhc.schema.model.eligibility.individual.Tribe.Builder();
  }

  /**
   * Creates a new Tribe RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Tribe RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.Tribe.Builder newBuilder(com.uhc.schema.model.eligibility.individual.Tribe.Builder other) {
    return new com.uhc.schema.model.eligibility.individual.Tribe.Builder(other);
  }

  /**
   * Creates a new Tribe RecordBuilder by copying an existing Tribe instance.
   * @param other The existing instance to copy.
   * @return A new Tribe RecordBuilder
   */
  public static com.uhc.schema.model.eligibility.individual.Tribe.Builder newBuilder(com.uhc.schema.model.eligibility.individual.Tribe other) {
    return new com.uhc.schema.model.eligibility.individual.Tribe.Builder(other);
  }

  /**
   * RecordBuilder for Tribe instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Tribe>
    implements org.apache.avro.data.RecordBuilder<Tribe> {

    /** Comment for the Individual's tribe. */
    private java.lang.CharSequence comments;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence effectiveDate;
    /** Date format: CCYY-MM-DD */
    private java.lang.CharSequence terminationDate;
    /** Code description pair for the Individual's tribe type. */
    private com.uhc.schema.model.eligibility.common.DescriptionType tribeType;
    private com.uhc.schema.model.eligibility.common.DescriptionType.Builder tribeTypeBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.Tribe.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.comments)) {
        this.comments = data().deepCopy(fields()[0].schema(), other.comments);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.effectiveDate)) {
        this.effectiveDate = data().deepCopy(fields()[1].schema(), other.effectiveDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.terminationDate)) {
        this.terminationDate = data().deepCopy(fields()[2].schema(), other.terminationDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tribeType)) {
        this.tribeType = data().deepCopy(fields()[3].schema(), other.tribeType);
        fieldSetFlags()[3] = true;
      }
      if (other.hasTribeTypeBuilder()) {
        this.tribeTypeBuilder = com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(other.getTribeTypeBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Tribe instance
     * @param other The existing instance to copy.
     */
    private Builder(com.uhc.schema.model.eligibility.individual.Tribe other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.comments)) {
        this.comments = data().deepCopy(fields()[0].schema(), other.comments);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.effectiveDate)) {
        this.effectiveDate = data().deepCopy(fields()[1].schema(), other.effectiveDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.terminationDate)) {
        this.terminationDate = data().deepCopy(fields()[2].schema(), other.terminationDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tribeType)) {
        this.tribeType = data().deepCopy(fields()[3].schema(), other.tribeType);
        fieldSetFlags()[3] = true;
      }
      this.tribeTypeBuilder = null;
    }

    /**
      * Gets the value of the 'comments' field.
      * Comment for the Individual's tribe.
      * @return The value.
      */
    public java.lang.CharSequence getComments() {
      return comments;
    }

    /**
      * Sets the value of the 'comments' field.
      * Comment for the Individual's tribe.
      * @param value The value of 'comments'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.Tribe.Builder setComments(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.comments = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'comments' field has been set.
      * Comment for the Individual's tribe.
      * @return True if the 'comments' field has been set, false otherwise.
      */
    public boolean hasComments() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'comments' field.
      * Comment for the Individual's tribe.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.Tribe.Builder clearComments() {
      comments = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'effectiveDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getEffectiveDate() {
      return effectiveDate;
    }

    /**
      * Sets the value of the 'effectiveDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'effectiveDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.Tribe.Builder setEffectiveDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.effectiveDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'effectiveDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'effectiveDate' field has been set, false otherwise.
      */
    public boolean hasEffectiveDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'effectiveDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.Tribe.Builder clearEffectiveDate() {
      effectiveDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'terminationDate' field.
      * Date format: CCYY-MM-DD
      * @return The value.
      */
    public java.lang.CharSequence getTerminationDate() {
      return terminationDate;
    }

    /**
      * Sets the value of the 'terminationDate' field.
      * Date format: CCYY-MM-DD
      * @param value The value of 'terminationDate'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.Tribe.Builder setTerminationDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.terminationDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'terminationDate' field has been set.
      * Date format: CCYY-MM-DD
      * @return True if the 'terminationDate' field has been set, false otherwise.
      */
    public boolean hasTerminationDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'terminationDate' field.
      * Date format: CCYY-MM-DD
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.Tribe.Builder clearTerminationDate() {
      terminationDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'tribeType' field.
      * Code description pair for the Individual's tribe type.
      * @return The value.
      */
    public com.uhc.schema.model.eligibility.common.DescriptionType getTribeType() {
      return tribeType;
    }

    /**
      * Sets the value of the 'tribeType' field.
      * Code description pair for the Individual's tribe type.
      * @param value The value of 'tribeType'.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.Tribe.Builder setTribeType(com.uhc.schema.model.eligibility.common.DescriptionType value) {
      validate(fields()[3], value);
      this.tribeTypeBuilder = null;
      this.tribeType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'tribeType' field has been set.
      * Code description pair for the Individual's tribe type.
      * @return True if the 'tribeType' field has been set, false otherwise.
      */
    public boolean hasTribeType() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'tribeType' field and creates one if it doesn't exist yet.
     * Code description pair for the Individual's tribe type.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.common.DescriptionType.Builder getTribeTypeBuilder() {
      if (tribeTypeBuilder == null) {
        if (hasTribeType()) {
          setTribeTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder(tribeType));
        } else {
          setTribeTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.newBuilder());
        }
      }
      return tribeTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'tribeType' field
     * Code description pair for the Individual's tribe type.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.uhc.schema.model.eligibility.individual.Tribe.Builder setTribeTypeBuilder(com.uhc.schema.model.eligibility.common.DescriptionType.Builder value) {
      clearTribeType();
      tribeTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'tribeType' field has an active Builder instance
     * Code description pair for the Individual's tribe type.
     * @return True if the 'tribeType' field has an active Builder instance
     */
    public boolean hasTribeTypeBuilder() {
      return tribeTypeBuilder != null;
    }

    /**
      * Clears the value of the 'tribeType' field.
      * Code description pair for the Individual's tribe type.
      * @return This builder.
      */
    public com.uhc.schema.model.eligibility.individual.Tribe.Builder clearTribeType() {
      tribeType = null;
      tribeTypeBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Tribe build() {
      try {
        Tribe record = new Tribe();
        record.comments = fieldSetFlags()[0] ? this.comments : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.effectiveDate = fieldSetFlags()[1] ? this.effectiveDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.terminationDate = fieldSetFlags()[2] ? this.terminationDate : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (tribeTypeBuilder != null) {
          record.tribeType = this.tribeTypeBuilder.build();
        } else {
          record.tribeType = fieldSetFlags()[3] ? this.tribeType : (com.uhc.schema.model.eligibility.common.DescriptionType) defaultValue(fields()[3]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Tribe>
    WRITER$ = (org.apache.avro.io.DatumWriter<Tribe>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Tribe>
    READER$ = (org.apache.avro.io.DatumReader<Tribe>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
