/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.uhc.schema.model.preferences;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class security extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4226435474920617958L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"security\",\"namespace\":\"com.optum.exts.individual.preference.selection.model\",\"fields\":[{\"name\":\"securitySourceSystemCode\",\"type\":[\"null\",\"string\"],\"doc\":\"A security profile identifier that is assigned to the member level information and all associated data.\",\"default\":null},{\"name\":\"securityPermission\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"securityPermission\",\"fields\":[{\"name\":\"securityPermissionValue\",\"type\":[\"null\",\"string\"],\"doc\":\"A security attribute identifying the secure class under which the record instance is administered.\",\"default\":null}]}}],\"doc\":\"Security metadata objects.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<security> ENCODER =
      new BinaryMessageEncoder<security>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<security> DECODER =
      new BinaryMessageDecoder<security>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<security> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<security> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<security>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this security to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a security from a ByteBuffer. */
  public static security fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** A security profile identifier that is assigned to the member level information and all associated data. */
  @Deprecated public CharSequence securitySourceSystemCode;
  /** Security metadata objects. */
  @Deprecated public java.util.List<securityPermission> securityPermission;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public security() {}

  /**
   * All-args constructor.
   * @param securitySourceSystemCode A security profile identifier that is assigned to the member level information and all associated data.
   * @param securityPermission Security metadata objects.
   */
  public security(CharSequence securitySourceSystemCode, java.util.List<securityPermission> securityPermission) {
    this.securitySourceSystemCode = securitySourceSystemCode;
    this.securityPermission = securityPermission;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return securitySourceSystemCode;
    case 1: return securityPermission;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: securitySourceSystemCode = (CharSequence)value$; break;
    case 1: securityPermission = (java.util.List<securityPermission>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'securitySourceSystemCode' field.
   * @return A security profile identifier that is assigned to the member level information and all associated data.
   */
  public CharSequence getSecuritySourceSystemCode() {
    return securitySourceSystemCode;
  }

  /**
   * Sets the value of the 'securitySourceSystemCode' field.
   * A security profile identifier that is assigned to the member level information and all associated data.
   * @param value the value to set.
   */
  public void setSecuritySourceSystemCode(CharSequence value) {
    this.securitySourceSystemCode = value;
  }

  /**
   * Gets the value of the 'securityPermission' field.
   * @return Security metadata objects.
   */
  public java.util.List<securityPermission> getSecurityPermission() {
    return securityPermission;
  }

  /**
   * Sets the value of the 'securityPermission' field.
   * Security metadata objects.
   * @param value the value to set.
   */
  public void setSecurityPermission(java.util.List<securityPermission> value) {
    this.securityPermission = value;
  }

  /**
   * Creates a new security RecordBuilder.
   * @return A new security RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new security RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new security RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new security RecordBuilder by copying an existing security instance.
   * @param other The existing instance to copy.
   * @return A new security RecordBuilder
   */
  public static Builder newBuilder(security other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for security instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<security>
    implements org.apache.avro.data.RecordBuilder<security> {

    /** A security profile identifier that is assigned to the member level information and all associated data. */
    private CharSequence securitySourceSystemCode;
    /** Security metadata objects. */
    private java.util.List<securityPermission> securityPermission;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.securitySourceSystemCode)) {
        this.securitySourceSystemCode = data().deepCopy(fields()[0].schema(), other.securitySourceSystemCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.securityPermission)) {
        this.securityPermission = data().deepCopy(fields()[1].schema(), other.securityPermission);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing security instance
     * @param other The existing instance to copy.
     */
    private Builder(security other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.securitySourceSystemCode)) {
        this.securitySourceSystemCode = data().deepCopy(fields()[0].schema(), other.securitySourceSystemCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.securityPermission)) {
        this.securityPermission = data().deepCopy(fields()[1].schema(), other.securityPermission);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'securitySourceSystemCode' field.
      * A security profile identifier that is assigned to the member level information and all associated data.
      * @return The value.
      */
    public CharSequence getSecuritySourceSystemCode() {
      return securitySourceSystemCode;
    }

    /**
      * Sets the value of the 'securitySourceSystemCode' field.
      * A security profile identifier that is assigned to the member level information and all associated data.
      * @param value The value of 'securitySourceSystemCode'.
      * @return This builder.
      */
    public Builder setSecuritySourceSystemCode(CharSequence value) {
      validate(fields()[0], value);
      this.securitySourceSystemCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'securitySourceSystemCode' field has been set.
      * A security profile identifier that is assigned to the member level information and all associated data.
      * @return True if the 'securitySourceSystemCode' field has been set, false otherwise.
      */
    public boolean hasSecuritySourceSystemCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'securitySourceSystemCode' field.
      * A security profile identifier that is assigned to the member level information and all associated data.
      * @return This builder.
      */
    public Builder clearSecuritySourceSystemCode() {
      securitySourceSystemCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'securityPermission' field.
      * Security metadata objects.
      * @return The value.
      */
    public java.util.List<securityPermission> getSecurityPermission() {
      return securityPermission;
    }

    /**
      * Sets the value of the 'securityPermission' field.
      * Security metadata objects.
      * @param value The value of 'securityPermission'.
      * @return This builder.
      */
    public Builder setSecurityPermission(java.util.List<securityPermission> value) {
      validate(fields()[1], value);
      this.securityPermission = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'securityPermission' field has been set.
      * Security metadata objects.
      * @return True if the 'securityPermission' field has been set, false otherwise.
      */
    public boolean hasSecurityPermission() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'securityPermission' field.
      * Security metadata objects.
      * @return This builder.
      */
    public Builder clearSecurityPermission() {
      securityPermission = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public security build() {
      try {
        security record = new security();
        record.securitySourceSystemCode = fieldSetFlags()[0] ? this.securitySourceSystemCode : (CharSequence) defaultValue(fields()[0]);
        record.securityPermission = fieldSetFlags()[1] ? this.securityPermission : (java.util.List<securityPermission>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<security>
    WRITER$ = (org.apache.avro.io.DatumWriter<security>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<security>
    READER$ = (org.apache.avro.io.DatumReader<security>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
